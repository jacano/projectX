// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cstrike15_usermessages_public.proto

#ifndef PROTOBUF_INCLUDED_cstrike15_5fusermessages_5fpublic_2eproto
#define PROTOBUF_INCLUDED_cstrike15_5fusermessages_5fpublic_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/descriptor.pb.h>
#include "netmessages_public.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_cstrike15_5fusermessages_5fpublic_2eproto 

namespace protobuf_cstrike15_5fusermessages_5fpublic_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[53];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_cstrike15_5fusermessages_5fpublic_2eproto
class CCSUsrMsg_AchievementEvent;
class CCSUsrMsg_AchievementEventDefaultTypeInternal;
extern CCSUsrMsg_AchievementEventDefaultTypeInternal _CCSUsrMsg_AchievementEvent_default_instance_;
class CCSUsrMsg_AdjustMoney;
class CCSUsrMsg_AdjustMoneyDefaultTypeInternal;
extern CCSUsrMsg_AdjustMoneyDefaultTypeInternal _CCSUsrMsg_AdjustMoney_default_instance_;
class CCSUsrMsg_AmmoDenied;
class CCSUsrMsg_AmmoDeniedDefaultTypeInternal;
extern CCSUsrMsg_AmmoDeniedDefaultTypeInternal _CCSUsrMsg_AmmoDenied_default_instance_;
class CCSUsrMsg_BarTime;
class CCSUsrMsg_BarTimeDefaultTypeInternal;
extern CCSUsrMsg_BarTimeDefaultTypeInternal _CCSUsrMsg_BarTime_default_instance_;
class CCSUsrMsg_CallVoteFailed;
class CCSUsrMsg_CallVoteFailedDefaultTypeInternal;
extern CCSUsrMsg_CallVoteFailedDefaultTypeInternal _CCSUsrMsg_CallVoteFailed_default_instance_;
class CCSUsrMsg_ClientInfo;
class CCSUsrMsg_ClientInfoDefaultTypeInternal;
extern CCSUsrMsg_ClientInfoDefaultTypeInternal _CCSUsrMsg_ClientInfo_default_instance_;
class CCSUsrMsg_CloseCaption;
class CCSUsrMsg_CloseCaptionDefaultTypeInternal;
extern CCSUsrMsg_CloseCaptionDefaultTypeInternal _CCSUsrMsg_CloseCaption_default_instance_;
class CCSUsrMsg_CloseCaptionDirect;
class CCSUsrMsg_CloseCaptionDirectDefaultTypeInternal;
extern CCSUsrMsg_CloseCaptionDirectDefaultTypeInternal _CCSUsrMsg_CloseCaptionDirect_default_instance_;
class CCSUsrMsg_CurrentTimescale;
class CCSUsrMsg_CurrentTimescaleDefaultTypeInternal;
extern CCSUsrMsg_CurrentTimescaleDefaultTypeInternal _CCSUsrMsg_CurrentTimescale_default_instance_;
class CCSUsrMsg_Damage;
class CCSUsrMsg_DamageDefaultTypeInternal;
extern CCSUsrMsg_DamageDefaultTypeInternal _CCSUsrMsg_Damage_default_instance_;
class CCSUsrMsg_DesiredTimescale;
class CCSUsrMsg_DesiredTimescaleDefaultTypeInternal;
extern CCSUsrMsg_DesiredTimescaleDefaultTypeInternal _CCSUsrMsg_DesiredTimescale_default_instance_;
class CCSUsrMsg_DisconnectToLobby;
class CCSUsrMsg_DisconnectToLobbyDefaultTypeInternal;
extern CCSUsrMsg_DisconnectToLobbyDefaultTypeInternal _CCSUsrMsg_DisconnectToLobby_default_instance_;
class CCSUsrMsg_DisplayInventory;
class CCSUsrMsg_DisplayInventoryDefaultTypeInternal;
extern CCSUsrMsg_DisplayInventoryDefaultTypeInternal _CCSUsrMsg_DisplayInventory_default_instance_;
class CCSUsrMsg_Fade;
class CCSUsrMsg_FadeDefaultTypeInternal;
extern CCSUsrMsg_FadeDefaultTypeInternal _CCSUsrMsg_Fade_default_instance_;
class CCSUsrMsg_GameTitle;
class CCSUsrMsg_GameTitleDefaultTypeInternal;
extern CCSUsrMsg_GameTitleDefaultTypeInternal _CCSUsrMsg_GameTitle_default_instance_;
class CCSUsrMsg_Geiger;
class CCSUsrMsg_GeigerDefaultTypeInternal;
extern CCSUsrMsg_GeigerDefaultTypeInternal _CCSUsrMsg_Geiger_default_instance_;
class CCSUsrMsg_GlowPropTurnOff;
class CCSUsrMsg_GlowPropTurnOffDefaultTypeInternal;
extern CCSUsrMsg_GlowPropTurnOffDefaultTypeInternal _CCSUsrMsg_GlowPropTurnOff_default_instance_;
class CCSUsrMsg_HintText;
class CCSUsrMsg_HintTextDefaultTypeInternal;
extern CCSUsrMsg_HintTextDefaultTypeInternal _CCSUsrMsg_HintText_default_instance_;
class CCSUsrMsg_HudMsg;
class CCSUsrMsg_HudMsgDefaultTypeInternal;
extern CCSUsrMsg_HudMsgDefaultTypeInternal _CCSUsrMsg_HudMsg_default_instance_;
class CCSUsrMsg_HudText;
class CCSUsrMsg_HudTextDefaultTypeInternal;
extern CCSUsrMsg_HudTextDefaultTypeInternal _CCSUsrMsg_HudText_default_instance_;
class CCSUsrMsg_ItemDrop;
class CCSUsrMsg_ItemDropDefaultTypeInternal;
extern CCSUsrMsg_ItemDropDefaultTypeInternal _CCSUsrMsg_ItemDrop_default_instance_;
class CCSUsrMsg_ItemPickup;
class CCSUsrMsg_ItemPickupDefaultTypeInternal;
extern CCSUsrMsg_ItemPickupDefaultTypeInternal _CCSUsrMsg_ItemPickup_default_instance_;
class CCSUsrMsg_KeyHintText;
class CCSUsrMsg_KeyHintTextDefaultTypeInternal;
extern CCSUsrMsg_KeyHintTextDefaultTypeInternal _CCSUsrMsg_KeyHintText_default_instance_;
class CCSUsrMsg_KillCam;
class CCSUsrMsg_KillCamDefaultTypeInternal;
extern CCSUsrMsg_KillCamDefaultTypeInternal _CCSUsrMsg_KillCam_default_instance_;
class CCSUsrMsg_MarkAchievement;
class CCSUsrMsg_MarkAchievementDefaultTypeInternal;
extern CCSUsrMsg_MarkAchievementDefaultTypeInternal _CCSUsrMsg_MarkAchievement_default_instance_;
class CCSUsrMsg_MatchEndConditions;
class CCSUsrMsg_MatchEndConditionsDefaultTypeInternal;
extern CCSUsrMsg_MatchEndConditionsDefaultTypeInternal _CCSUsrMsg_MatchEndConditions_default_instance_;
class CCSUsrMsg_ProcessSpottedEntityUpdate;
class CCSUsrMsg_ProcessSpottedEntityUpdateDefaultTypeInternal;
extern CCSUsrMsg_ProcessSpottedEntityUpdateDefaultTypeInternal _CCSUsrMsg_ProcessSpottedEntityUpdate_default_instance_;
class CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate;
class CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdateDefaultTypeInternal;
extern CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdateDefaultTypeInternal _CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate_default_instance_;
class CCSUsrMsg_RadioText;
class CCSUsrMsg_RadioTextDefaultTypeInternal;
extern CCSUsrMsg_RadioTextDefaultTypeInternal _CCSUsrMsg_RadioText_default_instance_;
class CCSUsrMsg_RawAudio;
class CCSUsrMsg_RawAudioDefaultTypeInternal;
extern CCSUsrMsg_RawAudioDefaultTypeInternal _CCSUsrMsg_RawAudio_default_instance_;
class CCSUsrMsg_ReloadEffect;
class CCSUsrMsg_ReloadEffectDefaultTypeInternal;
extern CCSUsrMsg_ReloadEffectDefaultTypeInternal _CCSUsrMsg_ReloadEffect_default_instance_;
class CCSUsrMsg_RequestState;
class CCSUsrMsg_RequestStateDefaultTypeInternal;
extern CCSUsrMsg_RequestStateDefaultTypeInternal _CCSUsrMsg_RequestState_default_instance_;
class CCSUsrMsg_ResetHud;
class CCSUsrMsg_ResetHudDefaultTypeInternal;
extern CCSUsrMsg_ResetHudDefaultTypeInternal _CCSUsrMsg_ResetHud_default_instance_;
class CCSUsrMsg_RoundBackupFilenames;
class CCSUsrMsg_RoundBackupFilenamesDefaultTypeInternal;
extern CCSUsrMsg_RoundBackupFilenamesDefaultTypeInternal _CCSUsrMsg_RoundBackupFilenames_default_instance_;
class CCSUsrMsg_Rumble;
class CCSUsrMsg_RumbleDefaultTypeInternal;
extern CCSUsrMsg_RumbleDefaultTypeInternal _CCSUsrMsg_Rumble_default_instance_;
class CCSUsrMsg_SayText;
class CCSUsrMsg_SayTextDefaultTypeInternal;
extern CCSUsrMsg_SayTextDefaultTypeInternal _CCSUsrMsg_SayText_default_instance_;
class CCSUsrMsg_SayText2;
class CCSUsrMsg_SayText2DefaultTypeInternal;
extern CCSUsrMsg_SayText2DefaultTypeInternal _CCSUsrMsg_SayText2_default_instance_;
class CCSUsrMsg_SendAudio;
class CCSUsrMsg_SendAudioDefaultTypeInternal;
extern CCSUsrMsg_SendAudioDefaultTypeInternal _CCSUsrMsg_SendAudio_default_instance_;
class CCSUsrMsg_SendLastKillerDamageToClient;
class CCSUsrMsg_SendLastKillerDamageToClientDefaultTypeInternal;
extern CCSUsrMsg_SendLastKillerDamageToClientDefaultTypeInternal _CCSUsrMsg_SendLastKillerDamageToClient_default_instance_;
class CCSUsrMsg_Shake;
class CCSUsrMsg_ShakeDefaultTypeInternal;
extern CCSUsrMsg_ShakeDefaultTypeInternal _CCSUsrMsg_Shake_default_instance_;
class CCSUsrMsg_ShowMenu;
class CCSUsrMsg_ShowMenuDefaultTypeInternal;
extern CCSUsrMsg_ShowMenuDefaultTypeInternal _CCSUsrMsg_ShowMenu_default_instance_;
class CCSUsrMsg_StopSpectatorMode;
class CCSUsrMsg_StopSpectatorModeDefaultTypeInternal;
extern CCSUsrMsg_StopSpectatorModeDefaultTypeInternal _CCSUsrMsg_StopSpectatorMode_default_instance_;
class CCSUsrMsg_TextMsg;
class CCSUsrMsg_TextMsgDefaultTypeInternal;
extern CCSUsrMsg_TextMsgDefaultTypeInternal _CCSUsrMsg_TextMsg_default_instance_;
class CCSUsrMsg_Train;
class CCSUsrMsg_TrainDefaultTypeInternal;
extern CCSUsrMsg_TrainDefaultTypeInternal _CCSUsrMsg_Train_default_instance_;
class CCSUsrMsg_VGUIMenu;
class CCSUsrMsg_VGUIMenuDefaultTypeInternal;
extern CCSUsrMsg_VGUIMenuDefaultTypeInternal _CCSUsrMsg_VGUIMenu_default_instance_;
class CCSUsrMsg_VGUIMenu_Subkey;
class CCSUsrMsg_VGUIMenu_SubkeyDefaultTypeInternal;
extern CCSUsrMsg_VGUIMenu_SubkeyDefaultTypeInternal _CCSUsrMsg_VGUIMenu_Subkey_default_instance_;
class CCSUsrMsg_VoiceMask;
class CCSUsrMsg_VoiceMaskDefaultTypeInternal;
extern CCSUsrMsg_VoiceMaskDefaultTypeInternal _CCSUsrMsg_VoiceMask_default_instance_;
class CCSUsrMsg_VoiceMask_PlayerMask;
class CCSUsrMsg_VoiceMask_PlayerMaskDefaultTypeInternal;
extern CCSUsrMsg_VoiceMask_PlayerMaskDefaultTypeInternal _CCSUsrMsg_VoiceMask_PlayerMask_default_instance_;
class CCSUsrMsg_VoteFailed;
class CCSUsrMsg_VoteFailedDefaultTypeInternal;
extern CCSUsrMsg_VoteFailedDefaultTypeInternal _CCSUsrMsg_VoteFailed_default_instance_;
class CCSUsrMsg_VotePass;
class CCSUsrMsg_VotePassDefaultTypeInternal;
extern CCSUsrMsg_VotePassDefaultTypeInternal _CCSUsrMsg_VotePass_default_instance_;
class CCSUsrMsg_VoteSetup;
class CCSUsrMsg_VoteSetupDefaultTypeInternal;
extern CCSUsrMsg_VoteSetupDefaultTypeInternal _CCSUsrMsg_VoteSetup_default_instance_;
class CCSUsrMsg_VoteStart;
class CCSUsrMsg_VoteStartDefaultTypeInternal;
extern CCSUsrMsg_VoteStartDefaultTypeInternal _CCSUsrMsg_VoteStart_default_instance_;
class CCSUsrMsg_WarmupHasEnded;
class CCSUsrMsg_WarmupHasEndedDefaultTypeInternal;
extern CCSUsrMsg_WarmupHasEndedDefaultTypeInternal _CCSUsrMsg_WarmupHasEnded_default_instance_;
namespace google {
namespace protobuf {
template<> ::CCSUsrMsg_AchievementEvent* Arena::CreateMaybeMessage<::CCSUsrMsg_AchievementEvent>(Arena*);
template<> ::CCSUsrMsg_AdjustMoney* Arena::CreateMaybeMessage<::CCSUsrMsg_AdjustMoney>(Arena*);
template<> ::CCSUsrMsg_AmmoDenied* Arena::CreateMaybeMessage<::CCSUsrMsg_AmmoDenied>(Arena*);
template<> ::CCSUsrMsg_BarTime* Arena::CreateMaybeMessage<::CCSUsrMsg_BarTime>(Arena*);
template<> ::CCSUsrMsg_CallVoteFailed* Arena::CreateMaybeMessage<::CCSUsrMsg_CallVoteFailed>(Arena*);
template<> ::CCSUsrMsg_ClientInfo* Arena::CreateMaybeMessage<::CCSUsrMsg_ClientInfo>(Arena*);
template<> ::CCSUsrMsg_CloseCaption* Arena::CreateMaybeMessage<::CCSUsrMsg_CloseCaption>(Arena*);
template<> ::CCSUsrMsg_CloseCaptionDirect* Arena::CreateMaybeMessage<::CCSUsrMsg_CloseCaptionDirect>(Arena*);
template<> ::CCSUsrMsg_CurrentTimescale* Arena::CreateMaybeMessage<::CCSUsrMsg_CurrentTimescale>(Arena*);
template<> ::CCSUsrMsg_Damage* Arena::CreateMaybeMessage<::CCSUsrMsg_Damage>(Arena*);
template<> ::CCSUsrMsg_DesiredTimescale* Arena::CreateMaybeMessage<::CCSUsrMsg_DesiredTimescale>(Arena*);
template<> ::CCSUsrMsg_DisconnectToLobby* Arena::CreateMaybeMessage<::CCSUsrMsg_DisconnectToLobby>(Arena*);
template<> ::CCSUsrMsg_DisplayInventory* Arena::CreateMaybeMessage<::CCSUsrMsg_DisplayInventory>(Arena*);
template<> ::CCSUsrMsg_Fade* Arena::CreateMaybeMessage<::CCSUsrMsg_Fade>(Arena*);
template<> ::CCSUsrMsg_GameTitle* Arena::CreateMaybeMessage<::CCSUsrMsg_GameTitle>(Arena*);
template<> ::CCSUsrMsg_Geiger* Arena::CreateMaybeMessage<::CCSUsrMsg_Geiger>(Arena*);
template<> ::CCSUsrMsg_GlowPropTurnOff* Arena::CreateMaybeMessage<::CCSUsrMsg_GlowPropTurnOff>(Arena*);
template<> ::CCSUsrMsg_HintText* Arena::CreateMaybeMessage<::CCSUsrMsg_HintText>(Arena*);
template<> ::CCSUsrMsg_HudMsg* Arena::CreateMaybeMessage<::CCSUsrMsg_HudMsg>(Arena*);
template<> ::CCSUsrMsg_HudText* Arena::CreateMaybeMessage<::CCSUsrMsg_HudText>(Arena*);
template<> ::CCSUsrMsg_ItemDrop* Arena::CreateMaybeMessage<::CCSUsrMsg_ItemDrop>(Arena*);
template<> ::CCSUsrMsg_ItemPickup* Arena::CreateMaybeMessage<::CCSUsrMsg_ItemPickup>(Arena*);
template<> ::CCSUsrMsg_KeyHintText* Arena::CreateMaybeMessage<::CCSUsrMsg_KeyHintText>(Arena*);
template<> ::CCSUsrMsg_KillCam* Arena::CreateMaybeMessage<::CCSUsrMsg_KillCam>(Arena*);
template<> ::CCSUsrMsg_MarkAchievement* Arena::CreateMaybeMessage<::CCSUsrMsg_MarkAchievement>(Arena*);
template<> ::CCSUsrMsg_MatchEndConditions* Arena::CreateMaybeMessage<::CCSUsrMsg_MatchEndConditions>(Arena*);
template<> ::CCSUsrMsg_ProcessSpottedEntityUpdate* Arena::CreateMaybeMessage<::CCSUsrMsg_ProcessSpottedEntityUpdate>(Arena*);
template<> ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* Arena::CreateMaybeMessage<::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate>(Arena*);
template<> ::CCSUsrMsg_RadioText* Arena::CreateMaybeMessage<::CCSUsrMsg_RadioText>(Arena*);
template<> ::CCSUsrMsg_RawAudio* Arena::CreateMaybeMessage<::CCSUsrMsg_RawAudio>(Arena*);
template<> ::CCSUsrMsg_ReloadEffect* Arena::CreateMaybeMessage<::CCSUsrMsg_ReloadEffect>(Arena*);
template<> ::CCSUsrMsg_RequestState* Arena::CreateMaybeMessage<::CCSUsrMsg_RequestState>(Arena*);
template<> ::CCSUsrMsg_ResetHud* Arena::CreateMaybeMessage<::CCSUsrMsg_ResetHud>(Arena*);
template<> ::CCSUsrMsg_RoundBackupFilenames* Arena::CreateMaybeMessage<::CCSUsrMsg_RoundBackupFilenames>(Arena*);
template<> ::CCSUsrMsg_Rumble* Arena::CreateMaybeMessage<::CCSUsrMsg_Rumble>(Arena*);
template<> ::CCSUsrMsg_SayText* Arena::CreateMaybeMessage<::CCSUsrMsg_SayText>(Arena*);
template<> ::CCSUsrMsg_SayText2* Arena::CreateMaybeMessage<::CCSUsrMsg_SayText2>(Arena*);
template<> ::CCSUsrMsg_SendAudio* Arena::CreateMaybeMessage<::CCSUsrMsg_SendAudio>(Arena*);
template<> ::CCSUsrMsg_SendLastKillerDamageToClient* Arena::CreateMaybeMessage<::CCSUsrMsg_SendLastKillerDamageToClient>(Arena*);
template<> ::CCSUsrMsg_Shake* Arena::CreateMaybeMessage<::CCSUsrMsg_Shake>(Arena*);
template<> ::CCSUsrMsg_ShowMenu* Arena::CreateMaybeMessage<::CCSUsrMsg_ShowMenu>(Arena*);
template<> ::CCSUsrMsg_StopSpectatorMode* Arena::CreateMaybeMessage<::CCSUsrMsg_StopSpectatorMode>(Arena*);
template<> ::CCSUsrMsg_TextMsg* Arena::CreateMaybeMessage<::CCSUsrMsg_TextMsg>(Arena*);
template<> ::CCSUsrMsg_Train* Arena::CreateMaybeMessage<::CCSUsrMsg_Train>(Arena*);
template<> ::CCSUsrMsg_VGUIMenu* Arena::CreateMaybeMessage<::CCSUsrMsg_VGUIMenu>(Arena*);
template<> ::CCSUsrMsg_VGUIMenu_Subkey* Arena::CreateMaybeMessage<::CCSUsrMsg_VGUIMenu_Subkey>(Arena*);
template<> ::CCSUsrMsg_VoiceMask* Arena::CreateMaybeMessage<::CCSUsrMsg_VoiceMask>(Arena*);
template<> ::CCSUsrMsg_VoiceMask_PlayerMask* Arena::CreateMaybeMessage<::CCSUsrMsg_VoiceMask_PlayerMask>(Arena*);
template<> ::CCSUsrMsg_VoteFailed* Arena::CreateMaybeMessage<::CCSUsrMsg_VoteFailed>(Arena*);
template<> ::CCSUsrMsg_VotePass* Arena::CreateMaybeMessage<::CCSUsrMsg_VotePass>(Arena*);
template<> ::CCSUsrMsg_VoteSetup* Arena::CreateMaybeMessage<::CCSUsrMsg_VoteSetup>(Arena*);
template<> ::CCSUsrMsg_VoteStart* Arena::CreateMaybeMessage<::CCSUsrMsg_VoteStart>(Arena*);
template<> ::CCSUsrMsg_WarmupHasEnded* Arena::CreateMaybeMessage<::CCSUsrMsg_WarmupHasEnded>(Arena*);
}  // namespace protobuf
}  // namespace google

enum ECstrike15UserMessages {
  CS_UM_VGUIMenu = 1,
  CS_UM_Geiger = 2,
  CS_UM_Train = 3,
  CS_UM_HudText = 4,
  CS_UM_SayText = 5,
  CS_UM_SayText2 = 6,
  CS_UM_TextMsg = 7,
  CS_UM_HudMsg = 8,
  CS_UM_ResetHud = 9,
  CS_UM_GameTitle = 10,
  CS_UM_Shake = 12,
  CS_UM_Fade = 13,
  CS_UM_Rumble = 14,
  CS_UM_CloseCaption = 15,
  CS_UM_CloseCaptionDirect = 16,
  CS_UM_SendAudio = 17,
  CS_UM_RawAudio = 18,
  CS_UM_VoiceMask = 19,
  CS_UM_RequestState = 20,
  CS_UM_Damage = 21,
  CS_UM_RadioText = 22,
  CS_UM_HintText = 23,
  CS_UM_KeyHintText = 24,
  CS_UM_ProcessSpottedEntityUpdate = 25,
  CS_UM_ReloadEffect = 26,
  CS_UM_AdjustMoney = 27,
  CS_UM_UpdateTeamMoney = 28,
  CS_UM_StopSpectatorMode = 29,
  CS_UM_KillCam = 30,
  CS_UM_DesiredTimescale = 31,
  CS_UM_CurrentTimescale = 32,
  CS_UM_AchievementEvent = 33,
  CS_UM_MatchEndConditions = 34,
  CS_UM_DisconnectToLobby = 35,
  CS_UM_DisplayInventory = 37,
  CS_UM_WarmupHasEnded = 38,
  CS_UM_ClientInfo = 39,
  CS_UM_CallVoteFailed = 45,
  CS_UM_VoteStart = 46,
  CS_UM_VotePass = 47,
  CS_UM_VoteFailed = 48,
  CS_UM_VoteSetup = 49,
  CS_UM_SendLastKillerDamageToClient = 51,
  CS_UM_ItemPickup = 53,
  CS_UM_ShowMenu = 54,
  CS_UM_BarTime = 55,
  CS_UM_AmmoDenied = 56,
  CS_UM_MarkAchievement = 57,
  CS_UM_ItemDrop = 59,
  CS_UM_GlowPropTurnOff = 60
};
bool ECstrike15UserMessages_IsValid(int value);
const ECstrike15UserMessages ECstrike15UserMessages_MIN = CS_UM_VGUIMenu;
const ECstrike15UserMessages ECstrike15UserMessages_MAX = CS_UM_GlowPropTurnOff;
const int ECstrike15UserMessages_ARRAYSIZE = ECstrike15UserMessages_MAX + 1;

const ::google::protobuf::EnumDescriptor* ECstrike15UserMessages_descriptor();
inline const ::std::string& ECstrike15UserMessages_Name(ECstrike15UserMessages value) {
  return ::google::protobuf::internal::NameOfEnum(
    ECstrike15UserMessages_descriptor(), value);
}
inline bool ECstrike15UserMessages_Parse(
    const ::std::string& name, ECstrike15UserMessages* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ECstrike15UserMessages>(
    ECstrike15UserMessages_descriptor(), name, value);
}
// ===================================================================

class CCSUsrMsg_VGUIMenu_Subkey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_VGUIMenu.Subkey) */ {
 public:
  CCSUsrMsg_VGUIMenu_Subkey();
  virtual ~CCSUsrMsg_VGUIMenu_Subkey();

  CCSUsrMsg_VGUIMenu_Subkey(const CCSUsrMsg_VGUIMenu_Subkey& from);

  inline CCSUsrMsg_VGUIMenu_Subkey& operator=(const CCSUsrMsg_VGUIMenu_Subkey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_VGUIMenu_Subkey(CCSUsrMsg_VGUIMenu_Subkey&& from) noexcept
    : CCSUsrMsg_VGUIMenu_Subkey() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_VGUIMenu_Subkey& operator=(CCSUsrMsg_VGUIMenu_Subkey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_VGUIMenu_Subkey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_VGUIMenu_Subkey* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_VGUIMenu_Subkey*>(
               &_CCSUsrMsg_VGUIMenu_Subkey_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CCSUsrMsg_VGUIMenu_Subkey* other);
  friend void swap(CCSUsrMsg_VGUIMenu_Subkey& a, CCSUsrMsg_VGUIMenu_Subkey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_VGUIMenu_Subkey* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_VGUIMenu_Subkey>(NULL);
  }

  CCSUsrMsg_VGUIMenu_Subkey* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_VGUIMenu_Subkey>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_VGUIMenu_Subkey& from);
  void MergeFrom(const CCSUsrMsg_VGUIMenu_Subkey& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_VGUIMenu_Subkey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string str = 2;
  bool has_str() const;
  void clear_str();
  static const int kStrFieldNumber = 2;
  const ::std::string& str() const;
  void set_str(const ::std::string& value);
  #if LANG_CXX11
  void set_str(::std::string&& value);
  #endif
  void set_str(const char* value);
  void set_str(const char* value, size_t size);
  ::std::string* mutable_str();
  ::std::string* release_str();
  void set_allocated_str(::std::string* str);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_VGUIMenu.Subkey)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_str();
  void clear_has_str();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr str_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_VGUIMenu : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_VGUIMenu) */ {
 public:
  CCSUsrMsg_VGUIMenu();
  virtual ~CCSUsrMsg_VGUIMenu();

  CCSUsrMsg_VGUIMenu(const CCSUsrMsg_VGUIMenu& from);

  inline CCSUsrMsg_VGUIMenu& operator=(const CCSUsrMsg_VGUIMenu& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_VGUIMenu(CCSUsrMsg_VGUIMenu&& from) noexcept
    : CCSUsrMsg_VGUIMenu() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_VGUIMenu& operator=(CCSUsrMsg_VGUIMenu&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_VGUIMenu& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_VGUIMenu* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_VGUIMenu*>(
               &_CCSUsrMsg_VGUIMenu_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CCSUsrMsg_VGUIMenu* other);
  friend void swap(CCSUsrMsg_VGUIMenu& a, CCSUsrMsg_VGUIMenu& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_VGUIMenu* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_VGUIMenu>(NULL);
  }

  CCSUsrMsg_VGUIMenu* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_VGUIMenu>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_VGUIMenu& from);
  void MergeFrom(const CCSUsrMsg_VGUIMenu& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_VGUIMenu* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CCSUsrMsg_VGUIMenu_Subkey Subkey;

  // accessors -------------------------------------------------------

  // repeated .CCSUsrMsg_VGUIMenu.Subkey subkeys = 3;
  int subkeys_size() const;
  void clear_subkeys();
  static const int kSubkeysFieldNumber = 3;
  ::CCSUsrMsg_VGUIMenu_Subkey* mutable_subkeys(int index);
  ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_VGUIMenu_Subkey >*
      mutable_subkeys();
  const ::CCSUsrMsg_VGUIMenu_Subkey& subkeys(int index) const;
  ::CCSUsrMsg_VGUIMenu_Subkey* add_subkeys();
  const ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_VGUIMenu_Subkey >&
      subkeys() const;

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional bool show = 2;
  bool has_show() const;
  void clear_show();
  static const int kShowFieldNumber = 2;
  bool show() const;
  void set_show(bool value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_VGUIMenu)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_show();
  void clear_has_show();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_VGUIMenu_Subkey > subkeys_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  bool show_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_Geiger : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_Geiger) */ {
 public:
  CCSUsrMsg_Geiger();
  virtual ~CCSUsrMsg_Geiger();

  CCSUsrMsg_Geiger(const CCSUsrMsg_Geiger& from);

  inline CCSUsrMsg_Geiger& operator=(const CCSUsrMsg_Geiger& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_Geiger(CCSUsrMsg_Geiger&& from) noexcept
    : CCSUsrMsg_Geiger() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_Geiger& operator=(CCSUsrMsg_Geiger&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_Geiger& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_Geiger* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_Geiger*>(
               &_CCSUsrMsg_Geiger_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CCSUsrMsg_Geiger* other);
  friend void swap(CCSUsrMsg_Geiger& a, CCSUsrMsg_Geiger& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_Geiger* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_Geiger>(NULL);
  }

  CCSUsrMsg_Geiger* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_Geiger>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_Geiger& from);
  void MergeFrom(const CCSUsrMsg_Geiger& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_Geiger* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 range = 1;
  bool has_range() const;
  void clear_range();
  static const int kRangeFieldNumber = 1;
  ::google::protobuf::int32 range() const;
  void set_range(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_Geiger)
 private:
  void set_has_range();
  void clear_has_range();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 range_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_Train : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_Train) */ {
 public:
  CCSUsrMsg_Train();
  virtual ~CCSUsrMsg_Train();

  CCSUsrMsg_Train(const CCSUsrMsg_Train& from);

  inline CCSUsrMsg_Train& operator=(const CCSUsrMsg_Train& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_Train(CCSUsrMsg_Train&& from) noexcept
    : CCSUsrMsg_Train() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_Train& operator=(CCSUsrMsg_Train&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_Train& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_Train* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_Train*>(
               &_CCSUsrMsg_Train_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(CCSUsrMsg_Train* other);
  friend void swap(CCSUsrMsg_Train& a, CCSUsrMsg_Train& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_Train* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_Train>(NULL);
  }

  CCSUsrMsg_Train* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_Train>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_Train& from);
  void MergeFrom(const CCSUsrMsg_Train& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_Train* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 train = 1;
  bool has_train() const;
  void clear_train();
  static const int kTrainFieldNumber = 1;
  ::google::protobuf::int32 train() const;
  void set_train(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_Train)
 private:
  void set_has_train();
  void clear_has_train();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 train_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_HudText : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_HudText) */ {
 public:
  CCSUsrMsg_HudText();
  virtual ~CCSUsrMsg_HudText();

  CCSUsrMsg_HudText(const CCSUsrMsg_HudText& from);

  inline CCSUsrMsg_HudText& operator=(const CCSUsrMsg_HudText& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_HudText(CCSUsrMsg_HudText&& from) noexcept
    : CCSUsrMsg_HudText() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_HudText& operator=(CCSUsrMsg_HudText&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_HudText& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_HudText* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_HudText*>(
               &_CCSUsrMsg_HudText_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(CCSUsrMsg_HudText* other);
  friend void swap(CCSUsrMsg_HudText& a, CCSUsrMsg_HudText& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_HudText* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_HudText>(NULL);
  }

  CCSUsrMsg_HudText* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_HudText>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_HudText& from);
  void MergeFrom(const CCSUsrMsg_HudText& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_HudText* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string text = 1;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 1;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_HudText)
 private:
  void set_has_text();
  void clear_has_text();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_SayText : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_SayText) */ {
 public:
  CCSUsrMsg_SayText();
  virtual ~CCSUsrMsg_SayText();

  CCSUsrMsg_SayText(const CCSUsrMsg_SayText& from);

  inline CCSUsrMsg_SayText& operator=(const CCSUsrMsg_SayText& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_SayText(CCSUsrMsg_SayText&& from) noexcept
    : CCSUsrMsg_SayText() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_SayText& operator=(CCSUsrMsg_SayText&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_SayText& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_SayText* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_SayText*>(
               &_CCSUsrMsg_SayText_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(CCSUsrMsg_SayText* other);
  friend void swap(CCSUsrMsg_SayText& a, CCSUsrMsg_SayText& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_SayText* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_SayText>(NULL);
  }

  CCSUsrMsg_SayText* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_SayText>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_SayText& from);
  void MergeFrom(const CCSUsrMsg_SayText& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_SayText* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string text = 2;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // optional int32 ent_idx = 1;
  bool has_ent_idx() const;
  void clear_ent_idx();
  static const int kEntIdxFieldNumber = 1;
  ::google::protobuf::int32 ent_idx() const;
  void set_ent_idx(::google::protobuf::int32 value);

  // optional bool chat = 3;
  bool has_chat() const;
  void clear_chat();
  static const int kChatFieldNumber = 3;
  bool chat() const;
  void set_chat(bool value);

  // optional bool textallchat = 4;
  bool has_textallchat() const;
  void clear_textallchat();
  static const int kTextallchatFieldNumber = 4;
  bool textallchat() const;
  void set_textallchat(bool value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_SayText)
 private:
  void set_has_ent_idx();
  void clear_has_ent_idx();
  void set_has_text();
  void clear_has_text();
  void set_has_chat();
  void clear_has_chat();
  void set_has_textallchat();
  void clear_has_textallchat();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::int32 ent_idx_;
  bool chat_;
  bool textallchat_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_SayText2 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_SayText2) */ {
 public:
  CCSUsrMsg_SayText2();
  virtual ~CCSUsrMsg_SayText2();

  CCSUsrMsg_SayText2(const CCSUsrMsg_SayText2& from);

  inline CCSUsrMsg_SayText2& operator=(const CCSUsrMsg_SayText2& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_SayText2(CCSUsrMsg_SayText2&& from) noexcept
    : CCSUsrMsg_SayText2() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_SayText2& operator=(CCSUsrMsg_SayText2&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_SayText2& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_SayText2* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_SayText2*>(
               &_CCSUsrMsg_SayText2_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(CCSUsrMsg_SayText2* other);
  friend void swap(CCSUsrMsg_SayText2& a, CCSUsrMsg_SayText2& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_SayText2* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_SayText2>(NULL);
  }

  CCSUsrMsg_SayText2* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_SayText2>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_SayText2& from);
  void MergeFrom(const CCSUsrMsg_SayText2& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_SayText2* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string params = 4;
  int params_size() const;
  void clear_params();
  static const int kParamsFieldNumber = 4;
  const ::std::string& params(int index) const;
  ::std::string* mutable_params(int index);
  void set_params(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_params(int index, ::std::string&& value);
  #endif
  void set_params(int index, const char* value);
  void set_params(int index, const char* value, size_t size);
  ::std::string* add_params();
  void add_params(const ::std::string& value);
  #if LANG_CXX11
  void add_params(::std::string&& value);
  #endif
  void add_params(const char* value);
  void add_params(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& params() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_params();

  // optional string msg_name = 3;
  bool has_msg_name() const;
  void clear_msg_name();
  static const int kMsgNameFieldNumber = 3;
  const ::std::string& msg_name() const;
  void set_msg_name(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_name(::std::string&& value);
  #endif
  void set_msg_name(const char* value);
  void set_msg_name(const char* value, size_t size);
  ::std::string* mutable_msg_name();
  ::std::string* release_msg_name();
  void set_allocated_msg_name(::std::string* msg_name);

  // optional int32 ent_idx = 1;
  bool has_ent_idx() const;
  void clear_ent_idx();
  static const int kEntIdxFieldNumber = 1;
  ::google::protobuf::int32 ent_idx() const;
  void set_ent_idx(::google::protobuf::int32 value);

  // optional bool chat = 2;
  bool has_chat() const;
  void clear_chat();
  static const int kChatFieldNumber = 2;
  bool chat() const;
  void set_chat(bool value);

  // optional bool textallchat = 5;
  bool has_textallchat() const;
  void clear_textallchat();
  static const int kTextallchatFieldNumber = 5;
  bool textallchat() const;
  void set_textallchat(bool value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_SayText2)
 private:
  void set_has_ent_idx();
  void clear_has_ent_idx();
  void set_has_chat();
  void clear_has_chat();
  void set_has_msg_name();
  void clear_has_msg_name();
  void set_has_textallchat();
  void clear_has_textallchat();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> params_;
  ::google::protobuf::internal::ArenaStringPtr msg_name_;
  ::google::protobuf::int32 ent_idx_;
  bool chat_;
  bool textallchat_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_TextMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_TextMsg) */ {
 public:
  CCSUsrMsg_TextMsg();
  virtual ~CCSUsrMsg_TextMsg();

  CCSUsrMsg_TextMsg(const CCSUsrMsg_TextMsg& from);

  inline CCSUsrMsg_TextMsg& operator=(const CCSUsrMsg_TextMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_TextMsg(CCSUsrMsg_TextMsg&& from) noexcept
    : CCSUsrMsg_TextMsg() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_TextMsg& operator=(CCSUsrMsg_TextMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_TextMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_TextMsg* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_TextMsg*>(
               &_CCSUsrMsg_TextMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(CCSUsrMsg_TextMsg* other);
  friend void swap(CCSUsrMsg_TextMsg& a, CCSUsrMsg_TextMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_TextMsg* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_TextMsg>(NULL);
  }

  CCSUsrMsg_TextMsg* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_TextMsg>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_TextMsg& from);
  void MergeFrom(const CCSUsrMsg_TextMsg& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_TextMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string params = 3;
  int params_size() const;
  void clear_params();
  static const int kParamsFieldNumber = 3;
  const ::std::string& params(int index) const;
  ::std::string* mutable_params(int index);
  void set_params(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_params(int index, ::std::string&& value);
  #endif
  void set_params(int index, const char* value);
  void set_params(int index, const char* value, size_t size);
  ::std::string* add_params();
  void add_params(const ::std::string& value);
  #if LANG_CXX11
  void add_params(::std::string&& value);
  #endif
  void add_params(const char* value);
  void add_params(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& params() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_params();

  // optional int32 msg_dst = 1;
  bool has_msg_dst() const;
  void clear_msg_dst();
  static const int kMsgDstFieldNumber = 1;
  ::google::protobuf::int32 msg_dst() const;
  void set_msg_dst(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_TextMsg)
 private:
  void set_has_msg_dst();
  void clear_has_msg_dst();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> params_;
  ::google::protobuf::int32 msg_dst_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_HudMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_HudMsg) */ {
 public:
  CCSUsrMsg_HudMsg();
  virtual ~CCSUsrMsg_HudMsg();

  CCSUsrMsg_HudMsg(const CCSUsrMsg_HudMsg& from);

  inline CCSUsrMsg_HudMsg& operator=(const CCSUsrMsg_HudMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_HudMsg(CCSUsrMsg_HudMsg&& from) noexcept
    : CCSUsrMsg_HudMsg() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_HudMsg& operator=(CCSUsrMsg_HudMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_HudMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_HudMsg* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_HudMsg*>(
               &_CCSUsrMsg_HudMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(CCSUsrMsg_HudMsg* other);
  friend void swap(CCSUsrMsg_HudMsg& a, CCSUsrMsg_HudMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_HudMsg* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_HudMsg>(NULL);
  }

  CCSUsrMsg_HudMsg* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_HudMsg>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_HudMsg& from);
  void MergeFrom(const CCSUsrMsg_HudMsg& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_HudMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string text = 11;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 11;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // optional .CMsgVector2D pos = 2;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 2;
  private:
  const ::CMsgVector2D& _internal_pos() const;
  public:
  const ::CMsgVector2D& pos() const;
  ::CMsgVector2D* release_pos();
  ::CMsgVector2D* mutable_pos();
  void set_allocated_pos(::CMsgVector2D* pos);

  // optional .CMsgRGBA clr1 = 3;
  bool has_clr1() const;
  void clear_clr1();
  static const int kClr1FieldNumber = 3;
  private:
  const ::CMsgRGBA& _internal_clr1() const;
  public:
  const ::CMsgRGBA& clr1() const;
  ::CMsgRGBA* release_clr1();
  ::CMsgRGBA* mutable_clr1();
  void set_allocated_clr1(::CMsgRGBA* clr1);

  // optional .CMsgRGBA clr2 = 4;
  bool has_clr2() const;
  void clear_clr2();
  static const int kClr2FieldNumber = 4;
  private:
  const ::CMsgRGBA& _internal_clr2() const;
  public:
  const ::CMsgRGBA& clr2() const;
  ::CMsgRGBA* release_clr2();
  ::CMsgRGBA* mutable_clr2();
  void set_allocated_clr2(::CMsgRGBA* clr2);

  // optional int32 channel = 1;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  ::google::protobuf::int32 channel() const;
  void set_channel(::google::protobuf::int32 value);

  // optional int32 effect = 5;
  bool has_effect() const;
  void clear_effect();
  static const int kEffectFieldNumber = 5;
  ::google::protobuf::int32 effect() const;
  void set_effect(::google::protobuf::int32 value);

  // optional float fade_in_time = 6;
  bool has_fade_in_time() const;
  void clear_fade_in_time();
  static const int kFadeInTimeFieldNumber = 6;
  float fade_in_time() const;
  void set_fade_in_time(float value);

  // optional float fade_out_time = 7;
  bool has_fade_out_time() const;
  void clear_fade_out_time();
  static const int kFadeOutTimeFieldNumber = 7;
  float fade_out_time() const;
  void set_fade_out_time(float value);

  // optional float hold_time = 9;
  bool has_hold_time() const;
  void clear_hold_time();
  static const int kHoldTimeFieldNumber = 9;
  float hold_time() const;
  void set_hold_time(float value);

  // optional float fx_time = 10;
  bool has_fx_time() const;
  void clear_fx_time();
  static const int kFxTimeFieldNumber = 10;
  float fx_time() const;
  void set_fx_time(float value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_HudMsg)
 private:
  void set_has_channel();
  void clear_has_channel();
  void set_has_pos();
  void clear_has_pos();
  void set_has_clr1();
  void clear_has_clr1();
  void set_has_clr2();
  void clear_has_clr2();
  void set_has_effect();
  void clear_has_effect();
  void set_has_fade_in_time();
  void clear_has_fade_in_time();
  void set_has_fade_out_time();
  void clear_has_fade_out_time();
  void set_has_hold_time();
  void clear_has_hold_time();
  void set_has_fx_time();
  void clear_has_fx_time();
  void set_has_text();
  void clear_has_text();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::CMsgVector2D* pos_;
  ::CMsgRGBA* clr1_;
  ::CMsgRGBA* clr2_;
  ::google::protobuf::int32 channel_;
  ::google::protobuf::int32 effect_;
  float fade_in_time_;
  float fade_out_time_;
  float hold_time_;
  float fx_time_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_Shake : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_Shake) */ {
 public:
  CCSUsrMsg_Shake();
  virtual ~CCSUsrMsg_Shake();

  CCSUsrMsg_Shake(const CCSUsrMsg_Shake& from);

  inline CCSUsrMsg_Shake& operator=(const CCSUsrMsg_Shake& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_Shake(CCSUsrMsg_Shake&& from) noexcept
    : CCSUsrMsg_Shake() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_Shake& operator=(CCSUsrMsg_Shake&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_Shake& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_Shake* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_Shake*>(
               &_CCSUsrMsg_Shake_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(CCSUsrMsg_Shake* other);
  friend void swap(CCSUsrMsg_Shake& a, CCSUsrMsg_Shake& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_Shake* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_Shake>(NULL);
  }

  CCSUsrMsg_Shake* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_Shake>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_Shake& from);
  void MergeFrom(const CCSUsrMsg_Shake& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_Shake* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 command = 1;
  bool has_command() const;
  void clear_command();
  static const int kCommandFieldNumber = 1;
  ::google::protobuf::int32 command() const;
  void set_command(::google::protobuf::int32 value);

  // optional float local_amplitude = 2;
  bool has_local_amplitude() const;
  void clear_local_amplitude();
  static const int kLocalAmplitudeFieldNumber = 2;
  float local_amplitude() const;
  void set_local_amplitude(float value);

  // optional float frequency = 3;
  bool has_frequency() const;
  void clear_frequency();
  static const int kFrequencyFieldNumber = 3;
  float frequency() const;
  void set_frequency(float value);

  // optional float duration = 4;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 4;
  float duration() const;
  void set_duration(float value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_Shake)
 private:
  void set_has_command();
  void clear_has_command();
  void set_has_local_amplitude();
  void clear_has_local_amplitude();
  void set_has_frequency();
  void clear_has_frequency();
  void set_has_duration();
  void clear_has_duration();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 command_;
  float local_amplitude_;
  float frequency_;
  float duration_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_Fade : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_Fade) */ {
 public:
  CCSUsrMsg_Fade();
  virtual ~CCSUsrMsg_Fade();

  CCSUsrMsg_Fade(const CCSUsrMsg_Fade& from);

  inline CCSUsrMsg_Fade& operator=(const CCSUsrMsg_Fade& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_Fade(CCSUsrMsg_Fade&& from) noexcept
    : CCSUsrMsg_Fade() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_Fade& operator=(CCSUsrMsg_Fade&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_Fade& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_Fade* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_Fade*>(
               &_CCSUsrMsg_Fade_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(CCSUsrMsg_Fade* other);
  friend void swap(CCSUsrMsg_Fade& a, CCSUsrMsg_Fade& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_Fade* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_Fade>(NULL);
  }

  CCSUsrMsg_Fade* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_Fade>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_Fade& from);
  void MergeFrom(const CCSUsrMsg_Fade& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_Fade* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgRGBA clr = 4;
  bool has_clr() const;
  void clear_clr();
  static const int kClrFieldNumber = 4;
  private:
  const ::CMsgRGBA& _internal_clr() const;
  public:
  const ::CMsgRGBA& clr() const;
  ::CMsgRGBA* release_clr();
  ::CMsgRGBA* mutable_clr();
  void set_allocated_clr(::CMsgRGBA* clr);

  // optional int32 duration = 1;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 1;
  ::google::protobuf::int32 duration() const;
  void set_duration(::google::protobuf::int32 value);

  // optional int32 hold_time = 2;
  bool has_hold_time() const;
  void clear_hold_time();
  static const int kHoldTimeFieldNumber = 2;
  ::google::protobuf::int32 hold_time() const;
  void set_hold_time(::google::protobuf::int32 value);

  // optional int32 flags = 3;
  bool has_flags() const;
  void clear_flags();
  static const int kFlagsFieldNumber = 3;
  ::google::protobuf::int32 flags() const;
  void set_flags(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_Fade)
 private:
  void set_has_duration();
  void clear_has_duration();
  void set_has_hold_time();
  void clear_has_hold_time();
  void set_has_flags();
  void clear_has_flags();
  void set_has_clr();
  void clear_has_clr();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::CMsgRGBA* clr_;
  ::google::protobuf::int32 duration_;
  ::google::protobuf::int32 hold_time_;
  ::google::protobuf::int32 flags_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_Rumble : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_Rumble) */ {
 public:
  CCSUsrMsg_Rumble();
  virtual ~CCSUsrMsg_Rumble();

  CCSUsrMsg_Rumble(const CCSUsrMsg_Rumble& from);

  inline CCSUsrMsg_Rumble& operator=(const CCSUsrMsg_Rumble& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_Rumble(CCSUsrMsg_Rumble&& from) noexcept
    : CCSUsrMsg_Rumble() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_Rumble& operator=(CCSUsrMsg_Rumble&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_Rumble& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_Rumble* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_Rumble*>(
               &_CCSUsrMsg_Rumble_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(CCSUsrMsg_Rumble* other);
  friend void swap(CCSUsrMsg_Rumble& a, CCSUsrMsg_Rumble& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_Rumble* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_Rumble>(NULL);
  }

  CCSUsrMsg_Rumble* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_Rumble>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_Rumble& from);
  void MergeFrom(const CCSUsrMsg_Rumble& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_Rumble* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 index = 1;
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // optional int32 data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  ::google::protobuf::int32 data() const;
  void set_data(::google::protobuf::int32 value);

  // optional int32 flags = 3;
  bool has_flags() const;
  void clear_flags();
  static const int kFlagsFieldNumber = 3;
  ::google::protobuf::int32 flags() const;
  void set_flags(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_Rumble)
 private:
  void set_has_index();
  void clear_has_index();
  void set_has_data();
  void clear_has_data();
  void set_has_flags();
  void clear_has_flags();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 data_;
  ::google::protobuf::int32 flags_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_CloseCaption : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_CloseCaption) */ {
 public:
  CCSUsrMsg_CloseCaption();
  virtual ~CCSUsrMsg_CloseCaption();

  CCSUsrMsg_CloseCaption(const CCSUsrMsg_CloseCaption& from);

  inline CCSUsrMsg_CloseCaption& operator=(const CCSUsrMsg_CloseCaption& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_CloseCaption(CCSUsrMsg_CloseCaption&& from) noexcept
    : CCSUsrMsg_CloseCaption() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_CloseCaption& operator=(CCSUsrMsg_CloseCaption&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_CloseCaption& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_CloseCaption* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_CloseCaption*>(
               &_CCSUsrMsg_CloseCaption_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(CCSUsrMsg_CloseCaption* other);
  friend void swap(CCSUsrMsg_CloseCaption& a, CCSUsrMsg_CloseCaption& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_CloseCaption* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_CloseCaption>(NULL);
  }

  CCSUsrMsg_CloseCaption* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_CloseCaption>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_CloseCaption& from);
  void MergeFrom(const CCSUsrMsg_CloseCaption& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_CloseCaption* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hash = 1;
  bool has_hash() const;
  void clear_hash();
  static const int kHashFieldNumber = 1;
  ::google::protobuf::uint32 hash() const;
  void set_hash(::google::protobuf::uint32 value);

  // optional int32 duration = 2;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 2;
  ::google::protobuf::int32 duration() const;
  void set_duration(::google::protobuf::int32 value);

  // optional bool from_player = 3;
  bool has_from_player() const;
  void clear_from_player();
  static const int kFromPlayerFieldNumber = 3;
  bool from_player() const;
  void set_from_player(bool value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_CloseCaption)
 private:
  void set_has_hash();
  void clear_has_hash();
  void set_has_duration();
  void clear_has_duration();
  void set_has_from_player();
  void clear_has_from_player();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 hash_;
  ::google::protobuf::int32 duration_;
  bool from_player_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_CloseCaptionDirect : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_CloseCaptionDirect) */ {
 public:
  CCSUsrMsg_CloseCaptionDirect();
  virtual ~CCSUsrMsg_CloseCaptionDirect();

  CCSUsrMsg_CloseCaptionDirect(const CCSUsrMsg_CloseCaptionDirect& from);

  inline CCSUsrMsg_CloseCaptionDirect& operator=(const CCSUsrMsg_CloseCaptionDirect& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_CloseCaptionDirect(CCSUsrMsg_CloseCaptionDirect&& from) noexcept
    : CCSUsrMsg_CloseCaptionDirect() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_CloseCaptionDirect& operator=(CCSUsrMsg_CloseCaptionDirect&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_CloseCaptionDirect& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_CloseCaptionDirect* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_CloseCaptionDirect*>(
               &_CCSUsrMsg_CloseCaptionDirect_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(CCSUsrMsg_CloseCaptionDirect* other);
  friend void swap(CCSUsrMsg_CloseCaptionDirect& a, CCSUsrMsg_CloseCaptionDirect& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_CloseCaptionDirect* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_CloseCaptionDirect>(NULL);
  }

  CCSUsrMsg_CloseCaptionDirect* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_CloseCaptionDirect>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_CloseCaptionDirect& from);
  void MergeFrom(const CCSUsrMsg_CloseCaptionDirect& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_CloseCaptionDirect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hash = 1;
  bool has_hash() const;
  void clear_hash();
  static const int kHashFieldNumber = 1;
  ::google::protobuf::uint32 hash() const;
  void set_hash(::google::protobuf::uint32 value);

  // optional int32 duration = 2;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 2;
  ::google::protobuf::int32 duration() const;
  void set_duration(::google::protobuf::int32 value);

  // optional bool from_player = 3;
  bool has_from_player() const;
  void clear_from_player();
  static const int kFromPlayerFieldNumber = 3;
  bool from_player() const;
  void set_from_player(bool value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_CloseCaptionDirect)
 private:
  void set_has_hash();
  void clear_has_hash();
  void set_has_duration();
  void clear_has_duration();
  void set_has_from_player();
  void clear_has_from_player();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 hash_;
  ::google::protobuf::int32 duration_;
  bool from_player_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_SendAudio : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_SendAudio) */ {
 public:
  CCSUsrMsg_SendAudio();
  virtual ~CCSUsrMsg_SendAudio();

  CCSUsrMsg_SendAudio(const CCSUsrMsg_SendAudio& from);

  inline CCSUsrMsg_SendAudio& operator=(const CCSUsrMsg_SendAudio& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_SendAudio(CCSUsrMsg_SendAudio&& from) noexcept
    : CCSUsrMsg_SendAudio() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_SendAudio& operator=(CCSUsrMsg_SendAudio&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_SendAudio& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_SendAudio* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_SendAudio*>(
               &_CCSUsrMsg_SendAudio_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(CCSUsrMsg_SendAudio* other);
  friend void swap(CCSUsrMsg_SendAudio& a, CCSUsrMsg_SendAudio& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_SendAudio* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_SendAudio>(NULL);
  }

  CCSUsrMsg_SendAudio* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_SendAudio>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_SendAudio& from);
  void MergeFrom(const CCSUsrMsg_SendAudio& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_SendAudio* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string radio_sound = 1;
  bool has_radio_sound() const;
  void clear_radio_sound();
  static const int kRadioSoundFieldNumber = 1;
  const ::std::string& radio_sound() const;
  void set_radio_sound(const ::std::string& value);
  #if LANG_CXX11
  void set_radio_sound(::std::string&& value);
  #endif
  void set_radio_sound(const char* value);
  void set_radio_sound(const char* value, size_t size);
  ::std::string* mutable_radio_sound();
  ::std::string* release_radio_sound();
  void set_allocated_radio_sound(::std::string* radio_sound);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_SendAudio)
 private:
  void set_has_radio_sound();
  void clear_has_radio_sound();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr radio_sound_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_RawAudio : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_RawAudio) */ {
 public:
  CCSUsrMsg_RawAudio();
  virtual ~CCSUsrMsg_RawAudio();

  CCSUsrMsg_RawAudio(const CCSUsrMsg_RawAudio& from);

  inline CCSUsrMsg_RawAudio& operator=(const CCSUsrMsg_RawAudio& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_RawAudio(CCSUsrMsg_RawAudio&& from) noexcept
    : CCSUsrMsg_RawAudio() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_RawAudio& operator=(CCSUsrMsg_RawAudio&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_RawAudio& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_RawAudio* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_RawAudio*>(
               &_CCSUsrMsg_RawAudio_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(CCSUsrMsg_RawAudio* other);
  friend void swap(CCSUsrMsg_RawAudio& a, CCSUsrMsg_RawAudio& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_RawAudio* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_RawAudio>(NULL);
  }

  CCSUsrMsg_RawAudio* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_RawAudio>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_RawAudio& from);
  void MergeFrom(const CCSUsrMsg_RawAudio& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_RawAudio* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string voice_filename = 4;
  bool has_voice_filename() const;
  void clear_voice_filename();
  static const int kVoiceFilenameFieldNumber = 4;
  const ::std::string& voice_filename() const;
  void set_voice_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_voice_filename(::std::string&& value);
  #endif
  void set_voice_filename(const char* value);
  void set_voice_filename(const char* value, size_t size);
  ::std::string* mutable_voice_filename();
  ::std::string* release_voice_filename();
  void set_allocated_voice_filename(::std::string* voice_filename);

  // optional int32 pitch = 1;
  bool has_pitch() const;
  void clear_pitch();
  static const int kPitchFieldNumber = 1;
  ::google::protobuf::int32 pitch() const;
  void set_pitch(::google::protobuf::int32 value);

  // optional int32 entidx = 2;
  bool has_entidx() const;
  void clear_entidx();
  static const int kEntidxFieldNumber = 2;
  ::google::protobuf::int32 entidx() const;
  void set_entidx(::google::protobuf::int32 value);

  // optional float duration = 3;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 3;
  float duration() const;
  void set_duration(float value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_RawAudio)
 private:
  void set_has_pitch();
  void clear_has_pitch();
  void set_has_entidx();
  void clear_has_entidx();
  void set_has_duration();
  void clear_has_duration();
  void set_has_voice_filename();
  void clear_has_voice_filename();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr voice_filename_;
  ::google::protobuf::int32 pitch_;
  ::google::protobuf::int32 entidx_;
  float duration_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_VoiceMask_PlayerMask : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_VoiceMask.PlayerMask) */ {
 public:
  CCSUsrMsg_VoiceMask_PlayerMask();
  virtual ~CCSUsrMsg_VoiceMask_PlayerMask();

  CCSUsrMsg_VoiceMask_PlayerMask(const CCSUsrMsg_VoiceMask_PlayerMask& from);

  inline CCSUsrMsg_VoiceMask_PlayerMask& operator=(const CCSUsrMsg_VoiceMask_PlayerMask& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_VoiceMask_PlayerMask(CCSUsrMsg_VoiceMask_PlayerMask&& from) noexcept
    : CCSUsrMsg_VoiceMask_PlayerMask() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_VoiceMask_PlayerMask& operator=(CCSUsrMsg_VoiceMask_PlayerMask&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_VoiceMask_PlayerMask& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_VoiceMask_PlayerMask* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_VoiceMask_PlayerMask*>(
               &_CCSUsrMsg_VoiceMask_PlayerMask_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(CCSUsrMsg_VoiceMask_PlayerMask* other);
  friend void swap(CCSUsrMsg_VoiceMask_PlayerMask& a, CCSUsrMsg_VoiceMask_PlayerMask& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_VoiceMask_PlayerMask* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_VoiceMask_PlayerMask>(NULL);
  }

  CCSUsrMsg_VoiceMask_PlayerMask* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_VoiceMask_PlayerMask>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_VoiceMask_PlayerMask& from);
  void MergeFrom(const CCSUsrMsg_VoiceMask_PlayerMask& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_VoiceMask_PlayerMask* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 game_rules_mask = 1;
  bool has_game_rules_mask() const;
  void clear_game_rules_mask();
  static const int kGameRulesMaskFieldNumber = 1;
  ::google::protobuf::int32 game_rules_mask() const;
  void set_game_rules_mask(::google::protobuf::int32 value);

  // optional int32 ban_masks = 2;
  bool has_ban_masks() const;
  void clear_ban_masks();
  static const int kBanMasksFieldNumber = 2;
  ::google::protobuf::int32 ban_masks() const;
  void set_ban_masks(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_VoiceMask.PlayerMask)
 private:
  void set_has_game_rules_mask();
  void clear_has_game_rules_mask();
  void set_has_ban_masks();
  void clear_has_ban_masks();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 game_rules_mask_;
  ::google::protobuf::int32 ban_masks_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_VoiceMask : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_VoiceMask) */ {
 public:
  CCSUsrMsg_VoiceMask();
  virtual ~CCSUsrMsg_VoiceMask();

  CCSUsrMsg_VoiceMask(const CCSUsrMsg_VoiceMask& from);

  inline CCSUsrMsg_VoiceMask& operator=(const CCSUsrMsg_VoiceMask& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_VoiceMask(CCSUsrMsg_VoiceMask&& from) noexcept
    : CCSUsrMsg_VoiceMask() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_VoiceMask& operator=(CCSUsrMsg_VoiceMask&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_VoiceMask& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_VoiceMask* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_VoiceMask*>(
               &_CCSUsrMsg_VoiceMask_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(CCSUsrMsg_VoiceMask* other);
  friend void swap(CCSUsrMsg_VoiceMask& a, CCSUsrMsg_VoiceMask& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_VoiceMask* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_VoiceMask>(NULL);
  }

  CCSUsrMsg_VoiceMask* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_VoiceMask>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_VoiceMask& from);
  void MergeFrom(const CCSUsrMsg_VoiceMask& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_VoiceMask* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CCSUsrMsg_VoiceMask_PlayerMask PlayerMask;

  // accessors -------------------------------------------------------

  // repeated .CCSUsrMsg_VoiceMask.PlayerMask player_masks = 1;
  int player_masks_size() const;
  void clear_player_masks();
  static const int kPlayerMasksFieldNumber = 1;
  ::CCSUsrMsg_VoiceMask_PlayerMask* mutable_player_masks(int index);
  ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_VoiceMask_PlayerMask >*
      mutable_player_masks();
  const ::CCSUsrMsg_VoiceMask_PlayerMask& player_masks(int index) const;
  ::CCSUsrMsg_VoiceMask_PlayerMask* add_player_masks();
  const ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_VoiceMask_PlayerMask >&
      player_masks() const;

  // optional bool player_mod_enable = 2;
  bool has_player_mod_enable() const;
  void clear_player_mod_enable();
  static const int kPlayerModEnableFieldNumber = 2;
  bool player_mod_enable() const;
  void set_player_mod_enable(bool value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_VoiceMask)
 private:
  void set_has_player_mod_enable();
  void clear_has_player_mod_enable();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_VoiceMask_PlayerMask > player_masks_;
  bool player_mod_enable_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_Damage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_Damage) */ {
 public:
  CCSUsrMsg_Damage();
  virtual ~CCSUsrMsg_Damage();

  CCSUsrMsg_Damage(const CCSUsrMsg_Damage& from);

  inline CCSUsrMsg_Damage& operator=(const CCSUsrMsg_Damage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_Damage(CCSUsrMsg_Damage&& from) noexcept
    : CCSUsrMsg_Damage() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_Damage& operator=(CCSUsrMsg_Damage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_Damage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_Damage* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_Damage*>(
               &_CCSUsrMsg_Damage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(CCSUsrMsg_Damage* other);
  friend void swap(CCSUsrMsg_Damage& a, CCSUsrMsg_Damage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_Damage* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_Damage>(NULL);
  }

  CCSUsrMsg_Damage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_Damage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_Damage& from);
  void MergeFrom(const CCSUsrMsg_Damage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_Damage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgVector inflictor_world_pos = 2;
  bool has_inflictor_world_pos() const;
  void clear_inflictor_world_pos();
  static const int kInflictorWorldPosFieldNumber = 2;
  private:
  const ::CMsgVector& _internal_inflictor_world_pos() const;
  public:
  const ::CMsgVector& inflictor_world_pos() const;
  ::CMsgVector* release_inflictor_world_pos();
  ::CMsgVector* mutable_inflictor_world_pos();
  void set_allocated_inflictor_world_pos(::CMsgVector* inflictor_world_pos);

  // optional int32 amount = 1;
  bool has_amount() const;
  void clear_amount();
  static const int kAmountFieldNumber = 1;
  ::google::protobuf::int32 amount() const;
  void set_amount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_Damage)
 private:
  void set_has_amount();
  void clear_has_amount();
  void set_has_inflictor_world_pos();
  void clear_has_inflictor_world_pos();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::CMsgVector* inflictor_world_pos_;
  ::google::protobuf::int32 amount_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_RadioText : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_RadioText) */ {
 public:
  CCSUsrMsg_RadioText();
  virtual ~CCSUsrMsg_RadioText();

  CCSUsrMsg_RadioText(const CCSUsrMsg_RadioText& from);

  inline CCSUsrMsg_RadioText& operator=(const CCSUsrMsg_RadioText& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_RadioText(CCSUsrMsg_RadioText&& from) noexcept
    : CCSUsrMsg_RadioText() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_RadioText& operator=(CCSUsrMsg_RadioText&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_RadioText& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_RadioText* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_RadioText*>(
               &_CCSUsrMsg_RadioText_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(CCSUsrMsg_RadioText* other);
  friend void swap(CCSUsrMsg_RadioText& a, CCSUsrMsg_RadioText& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_RadioText* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_RadioText>(NULL);
  }

  CCSUsrMsg_RadioText* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_RadioText>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_RadioText& from);
  void MergeFrom(const CCSUsrMsg_RadioText& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_RadioText* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string params = 4;
  int params_size() const;
  void clear_params();
  static const int kParamsFieldNumber = 4;
  const ::std::string& params(int index) const;
  ::std::string* mutable_params(int index);
  void set_params(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_params(int index, ::std::string&& value);
  #endif
  void set_params(int index, const char* value);
  void set_params(int index, const char* value, size_t size);
  ::std::string* add_params();
  void add_params(const ::std::string& value);
  #if LANG_CXX11
  void add_params(::std::string&& value);
  #endif
  void add_params(const char* value);
  void add_params(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& params() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_params();

  // optional string msg_name = 3;
  bool has_msg_name() const;
  void clear_msg_name();
  static const int kMsgNameFieldNumber = 3;
  const ::std::string& msg_name() const;
  void set_msg_name(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_name(::std::string&& value);
  #endif
  void set_msg_name(const char* value);
  void set_msg_name(const char* value, size_t size);
  ::std::string* mutable_msg_name();
  ::std::string* release_msg_name();
  void set_allocated_msg_name(::std::string* msg_name);

  // optional int32 msg_dst = 1;
  bool has_msg_dst() const;
  void clear_msg_dst();
  static const int kMsgDstFieldNumber = 1;
  ::google::protobuf::int32 msg_dst() const;
  void set_msg_dst(::google::protobuf::int32 value);

  // optional int32 client = 2;
  bool has_client() const;
  void clear_client();
  static const int kClientFieldNumber = 2;
  ::google::protobuf::int32 client() const;
  void set_client(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_RadioText)
 private:
  void set_has_msg_dst();
  void clear_has_msg_dst();
  void set_has_client();
  void clear_has_client();
  void set_has_msg_name();
  void clear_has_msg_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> params_;
  ::google::protobuf::internal::ArenaStringPtr msg_name_;
  ::google::protobuf::int32 msg_dst_;
  ::google::protobuf::int32 client_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_HintText : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_HintText) */ {
 public:
  CCSUsrMsg_HintText();
  virtual ~CCSUsrMsg_HintText();

  CCSUsrMsg_HintText(const CCSUsrMsg_HintText& from);

  inline CCSUsrMsg_HintText& operator=(const CCSUsrMsg_HintText& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_HintText(CCSUsrMsg_HintText&& from) noexcept
    : CCSUsrMsg_HintText() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_HintText& operator=(CCSUsrMsg_HintText&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_HintText& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_HintText* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_HintText*>(
               &_CCSUsrMsg_HintText_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(CCSUsrMsg_HintText* other);
  friend void swap(CCSUsrMsg_HintText& a, CCSUsrMsg_HintText& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_HintText* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_HintText>(NULL);
  }

  CCSUsrMsg_HintText* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_HintText>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_HintText& from);
  void MergeFrom(const CCSUsrMsg_HintText& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_HintText* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string text = 1;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 1;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_HintText)
 private:
  void set_has_text();
  void clear_has_text();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_KeyHintText : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_KeyHintText) */ {
 public:
  CCSUsrMsg_KeyHintText();
  virtual ~CCSUsrMsg_KeyHintText();

  CCSUsrMsg_KeyHintText(const CCSUsrMsg_KeyHintText& from);

  inline CCSUsrMsg_KeyHintText& operator=(const CCSUsrMsg_KeyHintText& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_KeyHintText(CCSUsrMsg_KeyHintText&& from) noexcept
    : CCSUsrMsg_KeyHintText() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_KeyHintText& operator=(CCSUsrMsg_KeyHintText&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_KeyHintText& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_KeyHintText* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_KeyHintText*>(
               &_CCSUsrMsg_KeyHintText_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(CCSUsrMsg_KeyHintText* other);
  friend void swap(CCSUsrMsg_KeyHintText& a, CCSUsrMsg_KeyHintText& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_KeyHintText* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_KeyHintText>(NULL);
  }

  CCSUsrMsg_KeyHintText* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_KeyHintText>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_KeyHintText& from);
  void MergeFrom(const CCSUsrMsg_KeyHintText& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_KeyHintText* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string hints = 1;
  int hints_size() const;
  void clear_hints();
  static const int kHintsFieldNumber = 1;
  const ::std::string& hints(int index) const;
  ::std::string* mutable_hints(int index);
  void set_hints(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_hints(int index, ::std::string&& value);
  #endif
  void set_hints(int index, const char* value);
  void set_hints(int index, const char* value, size_t size);
  ::std::string* add_hints();
  void add_hints(const ::std::string& value);
  #if LANG_CXX11
  void add_hints(::std::string&& value);
  #endif
  void add_hints(const char* value);
  void add_hints(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& hints() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_hints();

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_KeyHintText)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> hints_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate) */ {
 public:
  CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate();
  virtual ~CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate();

  CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate(const CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& from);

  inline CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& operator=(const CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate(CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate&& from) noexcept
    : CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& operator=(CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate*>(
               &_CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* other);
  friend void swap(CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& a, CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate>(NULL);
  }

  CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& from);
  void MergeFrom(const CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 entity_idx = 1;
  bool has_entity_idx() const;
  void clear_entity_idx();
  static const int kEntityIdxFieldNumber = 1;
  ::google::protobuf::int32 entity_idx() const;
  void set_entity_idx(::google::protobuf::int32 value);

  // optional int32 class_id = 2;
  bool has_class_id() const;
  void clear_class_id();
  static const int kClassIdFieldNumber = 2;
  ::google::protobuf::int32 class_id() const;
  void set_class_id(::google::protobuf::int32 value);

  // optional int32 origin_x = 3;
  bool has_origin_x() const;
  void clear_origin_x();
  static const int kOriginXFieldNumber = 3;
  ::google::protobuf::int32 origin_x() const;
  void set_origin_x(::google::protobuf::int32 value);

  // optional int32 origin_y = 4;
  bool has_origin_y() const;
  void clear_origin_y();
  static const int kOriginYFieldNumber = 4;
  ::google::protobuf::int32 origin_y() const;
  void set_origin_y(::google::protobuf::int32 value);

  // optional int32 origin_z = 5;
  bool has_origin_z() const;
  void clear_origin_z();
  static const int kOriginZFieldNumber = 5;
  ::google::protobuf::int32 origin_z() const;
  void set_origin_z(::google::protobuf::int32 value);

  // optional int32 angle_y = 6;
  bool has_angle_y() const;
  void clear_angle_y();
  static const int kAngleYFieldNumber = 6;
  ::google::protobuf::int32 angle_y() const;
  void set_angle_y(::google::protobuf::int32 value);

  // optional bool defuser = 7;
  bool has_defuser() const;
  void clear_defuser();
  static const int kDefuserFieldNumber = 7;
  bool defuser() const;
  void set_defuser(bool value);

  // optional bool player_has_defuser = 8;
  bool has_player_has_defuser() const;
  void clear_player_has_defuser();
  static const int kPlayerHasDefuserFieldNumber = 8;
  bool player_has_defuser() const;
  void set_player_has_defuser(bool value);

  // optional bool player_has_c4 = 9;
  bool has_player_has_c4() const;
  void clear_player_has_c4();
  static const int kPlayerHasC4FieldNumber = 9;
  bool player_has_c4() const;
  void set_player_has_c4(bool value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
 private:
  void set_has_entity_idx();
  void clear_has_entity_idx();
  void set_has_class_id();
  void clear_has_class_id();
  void set_has_origin_x();
  void clear_has_origin_x();
  void set_has_origin_y();
  void clear_has_origin_y();
  void set_has_origin_z();
  void clear_has_origin_z();
  void set_has_angle_y();
  void clear_has_angle_y();
  void set_has_defuser();
  void clear_has_defuser();
  void set_has_player_has_defuser();
  void clear_has_player_has_defuser();
  void set_has_player_has_c4();
  void clear_has_player_has_c4();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 entity_idx_;
  ::google::protobuf::int32 class_id_;
  ::google::protobuf::int32 origin_x_;
  ::google::protobuf::int32 origin_y_;
  ::google::protobuf::int32 origin_z_;
  ::google::protobuf::int32 angle_y_;
  bool defuser_;
  bool player_has_defuser_;
  bool player_has_c4_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ProcessSpottedEntityUpdate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_ProcessSpottedEntityUpdate) */ {
 public:
  CCSUsrMsg_ProcessSpottedEntityUpdate();
  virtual ~CCSUsrMsg_ProcessSpottedEntityUpdate();

  CCSUsrMsg_ProcessSpottedEntityUpdate(const CCSUsrMsg_ProcessSpottedEntityUpdate& from);

  inline CCSUsrMsg_ProcessSpottedEntityUpdate& operator=(const CCSUsrMsg_ProcessSpottedEntityUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_ProcessSpottedEntityUpdate(CCSUsrMsg_ProcessSpottedEntityUpdate&& from) noexcept
    : CCSUsrMsg_ProcessSpottedEntityUpdate() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_ProcessSpottedEntityUpdate& operator=(CCSUsrMsg_ProcessSpottedEntityUpdate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_ProcessSpottedEntityUpdate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_ProcessSpottedEntityUpdate* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_ProcessSpottedEntityUpdate*>(
               &_CCSUsrMsg_ProcessSpottedEntityUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(CCSUsrMsg_ProcessSpottedEntityUpdate* other);
  friend void swap(CCSUsrMsg_ProcessSpottedEntityUpdate& a, CCSUsrMsg_ProcessSpottedEntityUpdate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_ProcessSpottedEntityUpdate* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_ProcessSpottedEntityUpdate>(NULL);
  }

  CCSUsrMsg_ProcessSpottedEntityUpdate* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_ProcessSpottedEntityUpdate>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_ProcessSpottedEntityUpdate& from);
  void MergeFrom(const CCSUsrMsg_ProcessSpottedEntityUpdate& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_ProcessSpottedEntityUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate SpottedEntityUpdate;

  // accessors -------------------------------------------------------

  // repeated .CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate entity_updates = 2;
  int entity_updates_size() const;
  void clear_entity_updates();
  static const int kEntityUpdatesFieldNumber = 2;
  ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* mutable_entity_updates(int index);
  ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate >*
      mutable_entity_updates();
  const ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& entity_updates(int index) const;
  ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* add_entity_updates();
  const ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate >&
      entity_updates() const;

  // optional bool new_update = 1;
  bool has_new_update() const;
  void clear_new_update();
  static const int kNewUpdateFieldNumber = 1;
  bool new_update() const;
  void set_new_update(bool value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ProcessSpottedEntityUpdate)
 private:
  void set_has_new_update();
  void clear_has_new_update();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate > entity_updates_;
  bool new_update_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ReloadEffect : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_ReloadEffect) */ {
 public:
  CCSUsrMsg_ReloadEffect();
  virtual ~CCSUsrMsg_ReloadEffect();

  CCSUsrMsg_ReloadEffect(const CCSUsrMsg_ReloadEffect& from);

  inline CCSUsrMsg_ReloadEffect& operator=(const CCSUsrMsg_ReloadEffect& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_ReloadEffect(CCSUsrMsg_ReloadEffect&& from) noexcept
    : CCSUsrMsg_ReloadEffect() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_ReloadEffect& operator=(CCSUsrMsg_ReloadEffect&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_ReloadEffect& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_ReloadEffect* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_ReloadEffect*>(
               &_CCSUsrMsg_ReloadEffect_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(CCSUsrMsg_ReloadEffect* other);
  friend void swap(CCSUsrMsg_ReloadEffect& a, CCSUsrMsg_ReloadEffect& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_ReloadEffect* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_ReloadEffect>(NULL);
  }

  CCSUsrMsg_ReloadEffect* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_ReloadEffect>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_ReloadEffect& from);
  void MergeFrom(const CCSUsrMsg_ReloadEffect& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_ReloadEffect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 entidx = 1;
  bool has_entidx() const;
  void clear_entidx();
  static const int kEntidxFieldNumber = 1;
  ::google::protobuf::int32 entidx() const;
  void set_entidx(::google::protobuf::int32 value);

  // optional int32 actanim = 2;
  bool has_actanim() const;
  void clear_actanim();
  static const int kActanimFieldNumber = 2;
  ::google::protobuf::int32 actanim() const;
  void set_actanim(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ReloadEffect)
 private:
  void set_has_entidx();
  void clear_has_entidx();
  void set_has_actanim();
  void clear_has_actanim();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 entidx_;
  ::google::protobuf::int32 actanim_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_AdjustMoney : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_AdjustMoney) */ {
 public:
  CCSUsrMsg_AdjustMoney();
  virtual ~CCSUsrMsg_AdjustMoney();

  CCSUsrMsg_AdjustMoney(const CCSUsrMsg_AdjustMoney& from);

  inline CCSUsrMsg_AdjustMoney& operator=(const CCSUsrMsg_AdjustMoney& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_AdjustMoney(CCSUsrMsg_AdjustMoney&& from) noexcept
    : CCSUsrMsg_AdjustMoney() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_AdjustMoney& operator=(CCSUsrMsg_AdjustMoney&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_AdjustMoney& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_AdjustMoney* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_AdjustMoney*>(
               &_CCSUsrMsg_AdjustMoney_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(CCSUsrMsg_AdjustMoney* other);
  friend void swap(CCSUsrMsg_AdjustMoney& a, CCSUsrMsg_AdjustMoney& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_AdjustMoney* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_AdjustMoney>(NULL);
  }

  CCSUsrMsg_AdjustMoney* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_AdjustMoney>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_AdjustMoney& from);
  void MergeFrom(const CCSUsrMsg_AdjustMoney& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_AdjustMoney* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 amount = 1;
  bool has_amount() const;
  void clear_amount();
  static const int kAmountFieldNumber = 1;
  ::google::protobuf::int32 amount() const;
  void set_amount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_AdjustMoney)
 private:
  void set_has_amount();
  void clear_has_amount();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 amount_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_KillCam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_KillCam) */ {
 public:
  CCSUsrMsg_KillCam();
  virtual ~CCSUsrMsg_KillCam();

  CCSUsrMsg_KillCam(const CCSUsrMsg_KillCam& from);

  inline CCSUsrMsg_KillCam& operator=(const CCSUsrMsg_KillCam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_KillCam(CCSUsrMsg_KillCam&& from) noexcept
    : CCSUsrMsg_KillCam() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_KillCam& operator=(CCSUsrMsg_KillCam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_KillCam& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_KillCam* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_KillCam*>(
               &_CCSUsrMsg_KillCam_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(CCSUsrMsg_KillCam* other);
  friend void swap(CCSUsrMsg_KillCam& a, CCSUsrMsg_KillCam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_KillCam* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_KillCam>(NULL);
  }

  CCSUsrMsg_KillCam* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_KillCam>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_KillCam& from);
  void MergeFrom(const CCSUsrMsg_KillCam& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_KillCam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 obs_mode = 1;
  bool has_obs_mode() const;
  void clear_obs_mode();
  static const int kObsModeFieldNumber = 1;
  ::google::protobuf::int32 obs_mode() const;
  void set_obs_mode(::google::protobuf::int32 value);

  // optional int32 first_target = 2;
  bool has_first_target() const;
  void clear_first_target();
  static const int kFirstTargetFieldNumber = 2;
  ::google::protobuf::int32 first_target() const;
  void set_first_target(::google::protobuf::int32 value);

  // optional int32 second_target = 3;
  bool has_second_target() const;
  void clear_second_target();
  static const int kSecondTargetFieldNumber = 3;
  ::google::protobuf::int32 second_target() const;
  void set_second_target(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_KillCam)
 private:
  void set_has_obs_mode();
  void clear_has_obs_mode();
  void set_has_first_target();
  void clear_has_first_target();
  void set_has_second_target();
  void clear_has_second_target();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 obs_mode_;
  ::google::protobuf::int32 first_target_;
  ::google::protobuf::int32 second_target_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_DesiredTimescale : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_DesiredTimescale) */ {
 public:
  CCSUsrMsg_DesiredTimescale();
  virtual ~CCSUsrMsg_DesiredTimescale();

  CCSUsrMsg_DesiredTimescale(const CCSUsrMsg_DesiredTimescale& from);

  inline CCSUsrMsg_DesiredTimescale& operator=(const CCSUsrMsg_DesiredTimescale& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_DesiredTimescale(CCSUsrMsg_DesiredTimescale&& from) noexcept
    : CCSUsrMsg_DesiredTimescale() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_DesiredTimescale& operator=(CCSUsrMsg_DesiredTimescale&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_DesiredTimescale& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_DesiredTimescale* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_DesiredTimescale*>(
               &_CCSUsrMsg_DesiredTimescale_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void Swap(CCSUsrMsg_DesiredTimescale* other);
  friend void swap(CCSUsrMsg_DesiredTimescale& a, CCSUsrMsg_DesiredTimescale& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_DesiredTimescale* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_DesiredTimescale>(NULL);
  }

  CCSUsrMsg_DesiredTimescale* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_DesiredTimescale>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_DesiredTimescale& from);
  void MergeFrom(const CCSUsrMsg_DesiredTimescale& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_DesiredTimescale* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float desired_timescale = 1;
  bool has_desired_timescale() const;
  void clear_desired_timescale();
  static const int kDesiredTimescaleFieldNumber = 1;
  float desired_timescale() const;
  void set_desired_timescale(float value);

  // optional float duration_realtime_sec = 2;
  bool has_duration_realtime_sec() const;
  void clear_duration_realtime_sec();
  static const int kDurationRealtimeSecFieldNumber = 2;
  float duration_realtime_sec() const;
  void set_duration_realtime_sec(float value);

  // optional int32 interpolator_type = 3;
  bool has_interpolator_type() const;
  void clear_interpolator_type();
  static const int kInterpolatorTypeFieldNumber = 3;
  ::google::protobuf::int32 interpolator_type() const;
  void set_interpolator_type(::google::protobuf::int32 value);

  // optional float start_blend_time = 4;
  bool has_start_blend_time() const;
  void clear_start_blend_time();
  static const int kStartBlendTimeFieldNumber = 4;
  float start_blend_time() const;
  void set_start_blend_time(float value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_DesiredTimescale)
 private:
  void set_has_desired_timescale();
  void clear_has_desired_timescale();
  void set_has_duration_realtime_sec();
  void clear_has_duration_realtime_sec();
  void set_has_interpolator_type();
  void clear_has_interpolator_type();
  void set_has_start_blend_time();
  void clear_has_start_blend_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  float desired_timescale_;
  float duration_realtime_sec_;
  ::google::protobuf::int32 interpolator_type_;
  float start_blend_time_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_CurrentTimescale : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_CurrentTimescale) */ {
 public:
  CCSUsrMsg_CurrentTimescale();
  virtual ~CCSUsrMsg_CurrentTimescale();

  CCSUsrMsg_CurrentTimescale(const CCSUsrMsg_CurrentTimescale& from);

  inline CCSUsrMsg_CurrentTimescale& operator=(const CCSUsrMsg_CurrentTimescale& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_CurrentTimescale(CCSUsrMsg_CurrentTimescale&& from) noexcept
    : CCSUsrMsg_CurrentTimescale() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_CurrentTimescale& operator=(CCSUsrMsg_CurrentTimescale&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_CurrentTimescale& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_CurrentTimescale* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_CurrentTimescale*>(
               &_CCSUsrMsg_CurrentTimescale_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void Swap(CCSUsrMsg_CurrentTimescale* other);
  friend void swap(CCSUsrMsg_CurrentTimescale& a, CCSUsrMsg_CurrentTimescale& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_CurrentTimescale* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_CurrentTimescale>(NULL);
  }

  CCSUsrMsg_CurrentTimescale* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_CurrentTimescale>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_CurrentTimescale& from);
  void MergeFrom(const CCSUsrMsg_CurrentTimescale& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_CurrentTimescale* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float cur_timescale = 1;
  bool has_cur_timescale() const;
  void clear_cur_timescale();
  static const int kCurTimescaleFieldNumber = 1;
  float cur_timescale() const;
  void set_cur_timescale(float value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_CurrentTimescale)
 private:
  void set_has_cur_timescale();
  void clear_has_cur_timescale();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  float cur_timescale_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_AchievementEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_AchievementEvent) */ {
 public:
  CCSUsrMsg_AchievementEvent();
  virtual ~CCSUsrMsg_AchievementEvent();

  CCSUsrMsg_AchievementEvent(const CCSUsrMsg_AchievementEvent& from);

  inline CCSUsrMsg_AchievementEvent& operator=(const CCSUsrMsg_AchievementEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_AchievementEvent(CCSUsrMsg_AchievementEvent&& from) noexcept
    : CCSUsrMsg_AchievementEvent() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_AchievementEvent& operator=(CCSUsrMsg_AchievementEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_AchievementEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_AchievementEvent* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_AchievementEvent*>(
               &_CCSUsrMsg_AchievementEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void Swap(CCSUsrMsg_AchievementEvent* other);
  friend void swap(CCSUsrMsg_AchievementEvent& a, CCSUsrMsg_AchievementEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_AchievementEvent* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_AchievementEvent>(NULL);
  }

  CCSUsrMsg_AchievementEvent* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_AchievementEvent>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_AchievementEvent& from);
  void MergeFrom(const CCSUsrMsg_AchievementEvent& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_AchievementEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 achievement = 1;
  bool has_achievement() const;
  void clear_achievement();
  static const int kAchievementFieldNumber = 1;
  ::google::protobuf::int32 achievement() const;
  void set_achievement(::google::protobuf::int32 value);

  // optional int32 count = 2;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // optional int32 user_id = 3;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 3;
  ::google::protobuf::int32 user_id() const;
  void set_user_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_AchievementEvent)
 private:
  void set_has_achievement();
  void clear_has_achievement();
  void set_has_count();
  void clear_has_count();
  void set_has_user_id();
  void clear_has_user_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 achievement_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::int32 user_id_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_MatchEndConditions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_MatchEndConditions) */ {
 public:
  CCSUsrMsg_MatchEndConditions();
  virtual ~CCSUsrMsg_MatchEndConditions();

  CCSUsrMsg_MatchEndConditions(const CCSUsrMsg_MatchEndConditions& from);

  inline CCSUsrMsg_MatchEndConditions& operator=(const CCSUsrMsg_MatchEndConditions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_MatchEndConditions(CCSUsrMsg_MatchEndConditions&& from) noexcept
    : CCSUsrMsg_MatchEndConditions() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_MatchEndConditions& operator=(CCSUsrMsg_MatchEndConditions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_MatchEndConditions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_MatchEndConditions* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_MatchEndConditions*>(
               &_CCSUsrMsg_MatchEndConditions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  void Swap(CCSUsrMsg_MatchEndConditions* other);
  friend void swap(CCSUsrMsg_MatchEndConditions& a, CCSUsrMsg_MatchEndConditions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_MatchEndConditions* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_MatchEndConditions>(NULL);
  }

  CCSUsrMsg_MatchEndConditions* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_MatchEndConditions>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_MatchEndConditions& from);
  void MergeFrom(const CCSUsrMsg_MatchEndConditions& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_MatchEndConditions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 fraglimit = 1;
  bool has_fraglimit() const;
  void clear_fraglimit();
  static const int kFraglimitFieldNumber = 1;
  ::google::protobuf::int32 fraglimit() const;
  void set_fraglimit(::google::protobuf::int32 value);

  // optional int32 mp_maxrounds = 2;
  bool has_mp_maxrounds() const;
  void clear_mp_maxrounds();
  static const int kMpMaxroundsFieldNumber = 2;
  ::google::protobuf::int32 mp_maxrounds() const;
  void set_mp_maxrounds(::google::protobuf::int32 value);

  // optional int32 mp_winlimit = 3;
  bool has_mp_winlimit() const;
  void clear_mp_winlimit();
  static const int kMpWinlimitFieldNumber = 3;
  ::google::protobuf::int32 mp_winlimit() const;
  void set_mp_winlimit(::google::protobuf::int32 value);

  // optional int32 mp_timelimit = 4;
  bool has_mp_timelimit() const;
  void clear_mp_timelimit();
  static const int kMpTimelimitFieldNumber = 4;
  ::google::protobuf::int32 mp_timelimit() const;
  void set_mp_timelimit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_MatchEndConditions)
 private:
  void set_has_fraglimit();
  void clear_has_fraglimit();
  void set_has_mp_maxrounds();
  void clear_has_mp_maxrounds();
  void set_has_mp_winlimit();
  void clear_has_mp_winlimit();
  void set_has_mp_timelimit();
  void clear_has_mp_timelimit();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 fraglimit_;
  ::google::protobuf::int32 mp_maxrounds_;
  ::google::protobuf::int32 mp_winlimit_;
  ::google::protobuf::int32 mp_timelimit_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_DisplayInventory : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_DisplayInventory) */ {
 public:
  CCSUsrMsg_DisplayInventory();
  virtual ~CCSUsrMsg_DisplayInventory();

  CCSUsrMsg_DisplayInventory(const CCSUsrMsg_DisplayInventory& from);

  inline CCSUsrMsg_DisplayInventory& operator=(const CCSUsrMsg_DisplayInventory& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_DisplayInventory(CCSUsrMsg_DisplayInventory&& from) noexcept
    : CCSUsrMsg_DisplayInventory() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_DisplayInventory& operator=(CCSUsrMsg_DisplayInventory&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_DisplayInventory& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_DisplayInventory* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_DisplayInventory*>(
               &_CCSUsrMsg_DisplayInventory_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  void Swap(CCSUsrMsg_DisplayInventory* other);
  friend void swap(CCSUsrMsg_DisplayInventory& a, CCSUsrMsg_DisplayInventory& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_DisplayInventory* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_DisplayInventory>(NULL);
  }

  CCSUsrMsg_DisplayInventory* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_DisplayInventory>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_DisplayInventory& from);
  void MergeFrom(const CCSUsrMsg_DisplayInventory& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_DisplayInventory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool display = 1;
  bool has_display() const;
  void clear_display();
  static const int kDisplayFieldNumber = 1;
  bool display() const;
  void set_display(bool value);

  // optional int32 user_id = 2;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  ::google::protobuf::int32 user_id() const;
  void set_user_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_DisplayInventory)
 private:
  void set_has_display();
  void clear_has_display();
  void set_has_user_id();
  void clear_has_user_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool display_;
  ::google::protobuf::int32 user_id_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_CallVoteFailed : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_CallVoteFailed) */ {
 public:
  CCSUsrMsg_CallVoteFailed();
  virtual ~CCSUsrMsg_CallVoteFailed();

  CCSUsrMsg_CallVoteFailed(const CCSUsrMsg_CallVoteFailed& from);

  inline CCSUsrMsg_CallVoteFailed& operator=(const CCSUsrMsg_CallVoteFailed& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_CallVoteFailed(CCSUsrMsg_CallVoteFailed&& from) noexcept
    : CCSUsrMsg_CallVoteFailed() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_CallVoteFailed& operator=(CCSUsrMsg_CallVoteFailed&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_CallVoteFailed& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_CallVoteFailed* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_CallVoteFailed*>(
               &_CCSUsrMsg_CallVoteFailed_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  void Swap(CCSUsrMsg_CallVoteFailed* other);
  friend void swap(CCSUsrMsg_CallVoteFailed& a, CCSUsrMsg_CallVoteFailed& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_CallVoteFailed* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_CallVoteFailed>(NULL);
  }

  CCSUsrMsg_CallVoteFailed* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_CallVoteFailed>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_CallVoteFailed& from);
  void MergeFrom(const CCSUsrMsg_CallVoteFailed& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_CallVoteFailed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 reason = 1;
  bool has_reason() const;
  void clear_reason();
  static const int kReasonFieldNumber = 1;
  ::google::protobuf::int32 reason() const;
  void set_reason(::google::protobuf::int32 value);

  // optional int32 time = 2;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_CallVoteFailed)
 private:
  void set_has_reason();
  void clear_has_reason();
  void set_has_time();
  void clear_has_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 reason_;
  ::google::protobuf::int32 time_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_VoteStart : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_VoteStart) */ {
 public:
  CCSUsrMsg_VoteStart();
  virtual ~CCSUsrMsg_VoteStart();

  CCSUsrMsg_VoteStart(const CCSUsrMsg_VoteStart& from);

  inline CCSUsrMsg_VoteStart& operator=(const CCSUsrMsg_VoteStart& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_VoteStart(CCSUsrMsg_VoteStart&& from) noexcept
    : CCSUsrMsg_VoteStart() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_VoteStart& operator=(CCSUsrMsg_VoteStart&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_VoteStart& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_VoteStart* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_VoteStart*>(
               &_CCSUsrMsg_VoteStart_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  void Swap(CCSUsrMsg_VoteStart* other);
  friend void swap(CCSUsrMsg_VoteStart& a, CCSUsrMsg_VoteStart& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_VoteStart* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_VoteStart>(NULL);
  }

  CCSUsrMsg_VoteStart* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_VoteStart>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_VoteStart& from);
  void MergeFrom(const CCSUsrMsg_VoteStart& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_VoteStart* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string disp_str = 4;
  bool has_disp_str() const;
  void clear_disp_str();
  static const int kDispStrFieldNumber = 4;
  const ::std::string& disp_str() const;
  void set_disp_str(const ::std::string& value);
  #if LANG_CXX11
  void set_disp_str(::std::string&& value);
  #endif
  void set_disp_str(const char* value);
  void set_disp_str(const char* value, size_t size);
  ::std::string* mutable_disp_str();
  ::std::string* release_disp_str();
  void set_allocated_disp_str(::std::string* disp_str);

  // optional string details_str = 5;
  bool has_details_str() const;
  void clear_details_str();
  static const int kDetailsStrFieldNumber = 5;
  const ::std::string& details_str() const;
  void set_details_str(const ::std::string& value);
  #if LANG_CXX11
  void set_details_str(::std::string&& value);
  #endif
  void set_details_str(const char* value);
  void set_details_str(const char* value, size_t size);
  ::std::string* mutable_details_str();
  ::std::string* release_details_str();
  void set_allocated_details_str(::std::string* details_str);

  // optional string other_team_str = 6;
  bool has_other_team_str() const;
  void clear_other_team_str();
  static const int kOtherTeamStrFieldNumber = 6;
  const ::std::string& other_team_str() const;
  void set_other_team_str(const ::std::string& value);
  #if LANG_CXX11
  void set_other_team_str(::std::string&& value);
  #endif
  void set_other_team_str(const char* value);
  void set_other_team_str(const char* value, size_t size);
  ::std::string* mutable_other_team_str();
  ::std::string* release_other_team_str();
  void set_allocated_other_team_str(::std::string* other_team_str);

  // optional int32 team = 1;
  bool has_team() const;
  void clear_team();
  static const int kTeamFieldNumber = 1;
  ::google::protobuf::int32 team() const;
  void set_team(::google::protobuf::int32 value);

  // optional int32 ent_idx = 2;
  bool has_ent_idx() const;
  void clear_ent_idx();
  static const int kEntIdxFieldNumber = 2;
  ::google::protobuf::int32 ent_idx() const;
  void set_ent_idx(::google::protobuf::int32 value);

  // optional int32 vote_type = 3;
  bool has_vote_type() const;
  void clear_vote_type();
  static const int kVoteTypeFieldNumber = 3;
  ::google::protobuf::int32 vote_type() const;
  void set_vote_type(::google::protobuf::int32 value);

  // optional bool is_yes_no_vote = 7;
  bool has_is_yes_no_vote() const;
  void clear_is_yes_no_vote();
  static const int kIsYesNoVoteFieldNumber = 7;
  bool is_yes_no_vote() const;
  void set_is_yes_no_vote(bool value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_VoteStart)
 private:
  void set_has_team();
  void clear_has_team();
  void set_has_ent_idx();
  void clear_has_ent_idx();
  void set_has_vote_type();
  void clear_has_vote_type();
  void set_has_disp_str();
  void clear_has_disp_str();
  void set_has_details_str();
  void clear_has_details_str();
  void set_has_other_team_str();
  void clear_has_other_team_str();
  void set_has_is_yes_no_vote();
  void clear_has_is_yes_no_vote();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr disp_str_;
  ::google::protobuf::internal::ArenaStringPtr details_str_;
  ::google::protobuf::internal::ArenaStringPtr other_team_str_;
  ::google::protobuf::int32 team_;
  ::google::protobuf::int32 ent_idx_;
  ::google::protobuf::int32 vote_type_;
  bool is_yes_no_vote_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_VotePass : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_VotePass) */ {
 public:
  CCSUsrMsg_VotePass();
  virtual ~CCSUsrMsg_VotePass();

  CCSUsrMsg_VotePass(const CCSUsrMsg_VotePass& from);

  inline CCSUsrMsg_VotePass& operator=(const CCSUsrMsg_VotePass& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_VotePass(CCSUsrMsg_VotePass&& from) noexcept
    : CCSUsrMsg_VotePass() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_VotePass& operator=(CCSUsrMsg_VotePass&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_VotePass& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_VotePass* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_VotePass*>(
               &_CCSUsrMsg_VotePass_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  void Swap(CCSUsrMsg_VotePass* other);
  friend void swap(CCSUsrMsg_VotePass& a, CCSUsrMsg_VotePass& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_VotePass* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_VotePass>(NULL);
  }

  CCSUsrMsg_VotePass* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_VotePass>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_VotePass& from);
  void MergeFrom(const CCSUsrMsg_VotePass& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_VotePass* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string disp_str = 3;
  bool has_disp_str() const;
  void clear_disp_str();
  static const int kDispStrFieldNumber = 3;
  const ::std::string& disp_str() const;
  void set_disp_str(const ::std::string& value);
  #if LANG_CXX11
  void set_disp_str(::std::string&& value);
  #endif
  void set_disp_str(const char* value);
  void set_disp_str(const char* value, size_t size);
  ::std::string* mutable_disp_str();
  ::std::string* release_disp_str();
  void set_allocated_disp_str(::std::string* disp_str);

  // optional string details_str = 4;
  bool has_details_str() const;
  void clear_details_str();
  static const int kDetailsStrFieldNumber = 4;
  const ::std::string& details_str() const;
  void set_details_str(const ::std::string& value);
  #if LANG_CXX11
  void set_details_str(::std::string&& value);
  #endif
  void set_details_str(const char* value);
  void set_details_str(const char* value, size_t size);
  ::std::string* mutable_details_str();
  ::std::string* release_details_str();
  void set_allocated_details_str(::std::string* details_str);

  // optional int32 team = 1;
  bool has_team() const;
  void clear_team();
  static const int kTeamFieldNumber = 1;
  ::google::protobuf::int32 team() const;
  void set_team(::google::protobuf::int32 value);

  // optional int32 vote_type = 2;
  bool has_vote_type() const;
  void clear_vote_type();
  static const int kVoteTypeFieldNumber = 2;
  ::google::protobuf::int32 vote_type() const;
  void set_vote_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_VotePass)
 private:
  void set_has_team();
  void clear_has_team();
  void set_has_vote_type();
  void clear_has_vote_type();
  void set_has_disp_str();
  void clear_has_disp_str();
  void set_has_details_str();
  void clear_has_details_str();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr disp_str_;
  ::google::protobuf::internal::ArenaStringPtr details_str_;
  ::google::protobuf::int32 team_;
  ::google::protobuf::int32 vote_type_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_VoteFailed : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_VoteFailed) */ {
 public:
  CCSUsrMsg_VoteFailed();
  virtual ~CCSUsrMsg_VoteFailed();

  CCSUsrMsg_VoteFailed(const CCSUsrMsg_VoteFailed& from);

  inline CCSUsrMsg_VoteFailed& operator=(const CCSUsrMsg_VoteFailed& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_VoteFailed(CCSUsrMsg_VoteFailed&& from) noexcept
    : CCSUsrMsg_VoteFailed() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_VoteFailed& operator=(CCSUsrMsg_VoteFailed&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_VoteFailed& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_VoteFailed* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_VoteFailed*>(
               &_CCSUsrMsg_VoteFailed_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  void Swap(CCSUsrMsg_VoteFailed* other);
  friend void swap(CCSUsrMsg_VoteFailed& a, CCSUsrMsg_VoteFailed& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_VoteFailed* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_VoteFailed>(NULL);
  }

  CCSUsrMsg_VoteFailed* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_VoteFailed>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_VoteFailed& from);
  void MergeFrom(const CCSUsrMsg_VoteFailed& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_VoteFailed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 team = 1;
  bool has_team() const;
  void clear_team();
  static const int kTeamFieldNumber = 1;
  ::google::protobuf::int32 team() const;
  void set_team(::google::protobuf::int32 value);

  // optional int32 reason = 2;
  bool has_reason() const;
  void clear_reason();
  static const int kReasonFieldNumber = 2;
  ::google::protobuf::int32 reason() const;
  void set_reason(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_VoteFailed)
 private:
  void set_has_team();
  void clear_has_team();
  void set_has_reason();
  void clear_has_reason();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 team_;
  ::google::protobuf::int32 reason_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_VoteSetup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_VoteSetup) */ {
 public:
  CCSUsrMsg_VoteSetup();
  virtual ~CCSUsrMsg_VoteSetup();

  CCSUsrMsg_VoteSetup(const CCSUsrMsg_VoteSetup& from);

  inline CCSUsrMsg_VoteSetup& operator=(const CCSUsrMsg_VoteSetup& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_VoteSetup(CCSUsrMsg_VoteSetup&& from) noexcept
    : CCSUsrMsg_VoteSetup() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_VoteSetup& operator=(CCSUsrMsg_VoteSetup&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_VoteSetup& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_VoteSetup* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_VoteSetup*>(
               &_CCSUsrMsg_VoteSetup_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  void Swap(CCSUsrMsg_VoteSetup* other);
  friend void swap(CCSUsrMsg_VoteSetup& a, CCSUsrMsg_VoteSetup& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_VoteSetup* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_VoteSetup>(NULL);
  }

  CCSUsrMsg_VoteSetup* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_VoteSetup>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_VoteSetup& from);
  void MergeFrom(const CCSUsrMsg_VoteSetup& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_VoteSetup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string potential_issues = 1;
  int potential_issues_size() const;
  void clear_potential_issues();
  static const int kPotentialIssuesFieldNumber = 1;
  const ::std::string& potential_issues(int index) const;
  ::std::string* mutable_potential_issues(int index);
  void set_potential_issues(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_potential_issues(int index, ::std::string&& value);
  #endif
  void set_potential_issues(int index, const char* value);
  void set_potential_issues(int index, const char* value, size_t size);
  ::std::string* add_potential_issues();
  void add_potential_issues(const ::std::string& value);
  #if LANG_CXX11
  void add_potential_issues(::std::string&& value);
  #endif
  void add_potential_issues(const char* value);
  void add_potential_issues(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& potential_issues() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_potential_issues();

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_VoteSetup)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> potential_issues_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_SendLastKillerDamageToClient : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_SendLastKillerDamageToClient) */ {
 public:
  CCSUsrMsg_SendLastKillerDamageToClient();
  virtual ~CCSUsrMsg_SendLastKillerDamageToClient();

  CCSUsrMsg_SendLastKillerDamageToClient(const CCSUsrMsg_SendLastKillerDamageToClient& from);

  inline CCSUsrMsg_SendLastKillerDamageToClient& operator=(const CCSUsrMsg_SendLastKillerDamageToClient& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_SendLastKillerDamageToClient(CCSUsrMsg_SendLastKillerDamageToClient&& from) noexcept
    : CCSUsrMsg_SendLastKillerDamageToClient() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_SendLastKillerDamageToClient& operator=(CCSUsrMsg_SendLastKillerDamageToClient&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_SendLastKillerDamageToClient& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_SendLastKillerDamageToClient* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_SendLastKillerDamageToClient*>(
               &_CCSUsrMsg_SendLastKillerDamageToClient_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  void Swap(CCSUsrMsg_SendLastKillerDamageToClient* other);
  friend void swap(CCSUsrMsg_SendLastKillerDamageToClient& a, CCSUsrMsg_SendLastKillerDamageToClient& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_SendLastKillerDamageToClient* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_SendLastKillerDamageToClient>(NULL);
  }

  CCSUsrMsg_SendLastKillerDamageToClient* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_SendLastKillerDamageToClient>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_SendLastKillerDamageToClient& from);
  void MergeFrom(const CCSUsrMsg_SendLastKillerDamageToClient& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_SendLastKillerDamageToClient* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 num_hits_given = 1;
  bool has_num_hits_given() const;
  void clear_num_hits_given();
  static const int kNumHitsGivenFieldNumber = 1;
  ::google::protobuf::int32 num_hits_given() const;
  void set_num_hits_given(::google::protobuf::int32 value);

  // optional int32 damage_given = 2;
  bool has_damage_given() const;
  void clear_damage_given();
  static const int kDamageGivenFieldNumber = 2;
  ::google::protobuf::int32 damage_given() const;
  void set_damage_given(::google::protobuf::int32 value);

  // optional int32 num_hits_taken = 3;
  bool has_num_hits_taken() const;
  void clear_num_hits_taken();
  static const int kNumHitsTakenFieldNumber = 3;
  ::google::protobuf::int32 num_hits_taken() const;
  void set_num_hits_taken(::google::protobuf::int32 value);

  // optional int32 damage_taken = 4;
  bool has_damage_taken() const;
  void clear_damage_taken();
  static const int kDamageTakenFieldNumber = 4;
  ::google::protobuf::int32 damage_taken() const;
  void set_damage_taken(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_SendLastKillerDamageToClient)
 private:
  void set_has_num_hits_given();
  void clear_has_num_hits_given();
  void set_has_damage_given();
  void clear_has_damage_given();
  void set_has_num_hits_taken();
  void clear_has_num_hits_taken();
  void set_has_damage_taken();
  void clear_has_damage_taken();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 num_hits_given_;
  ::google::protobuf::int32 damage_given_;
  ::google::protobuf::int32 num_hits_taken_;
  ::google::protobuf::int32 damage_taken_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ItemPickup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_ItemPickup) */ {
 public:
  CCSUsrMsg_ItemPickup();
  virtual ~CCSUsrMsg_ItemPickup();

  CCSUsrMsg_ItemPickup(const CCSUsrMsg_ItemPickup& from);

  inline CCSUsrMsg_ItemPickup& operator=(const CCSUsrMsg_ItemPickup& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_ItemPickup(CCSUsrMsg_ItemPickup&& from) noexcept
    : CCSUsrMsg_ItemPickup() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_ItemPickup& operator=(CCSUsrMsg_ItemPickup&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_ItemPickup& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_ItemPickup* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_ItemPickup*>(
               &_CCSUsrMsg_ItemPickup_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  void Swap(CCSUsrMsg_ItemPickup* other);
  friend void swap(CCSUsrMsg_ItemPickup& a, CCSUsrMsg_ItemPickup& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_ItemPickup* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_ItemPickup>(NULL);
  }

  CCSUsrMsg_ItemPickup* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_ItemPickup>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_ItemPickup& from);
  void MergeFrom(const CCSUsrMsg_ItemPickup& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_ItemPickup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string item = 1;
  bool has_item() const;
  void clear_item();
  static const int kItemFieldNumber = 1;
  const ::std::string& item() const;
  void set_item(const ::std::string& value);
  #if LANG_CXX11
  void set_item(::std::string&& value);
  #endif
  void set_item(const char* value);
  void set_item(const char* value, size_t size);
  ::std::string* mutable_item();
  ::std::string* release_item();
  void set_allocated_item(::std::string* item);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ItemPickup)
 private:
  void set_has_item();
  void clear_has_item();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr item_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ShowMenu : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_ShowMenu) */ {
 public:
  CCSUsrMsg_ShowMenu();
  virtual ~CCSUsrMsg_ShowMenu();

  CCSUsrMsg_ShowMenu(const CCSUsrMsg_ShowMenu& from);

  inline CCSUsrMsg_ShowMenu& operator=(const CCSUsrMsg_ShowMenu& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_ShowMenu(CCSUsrMsg_ShowMenu&& from) noexcept
    : CCSUsrMsg_ShowMenu() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_ShowMenu& operator=(CCSUsrMsg_ShowMenu&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_ShowMenu& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_ShowMenu* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_ShowMenu*>(
               &_CCSUsrMsg_ShowMenu_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  void Swap(CCSUsrMsg_ShowMenu* other);
  friend void swap(CCSUsrMsg_ShowMenu& a, CCSUsrMsg_ShowMenu& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_ShowMenu* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_ShowMenu>(NULL);
  }

  CCSUsrMsg_ShowMenu* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_ShowMenu>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_ShowMenu& from);
  void MergeFrom(const CCSUsrMsg_ShowMenu& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_ShowMenu* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string menu_string = 3;
  bool has_menu_string() const;
  void clear_menu_string();
  static const int kMenuStringFieldNumber = 3;
  const ::std::string& menu_string() const;
  void set_menu_string(const ::std::string& value);
  #if LANG_CXX11
  void set_menu_string(::std::string&& value);
  #endif
  void set_menu_string(const char* value);
  void set_menu_string(const char* value, size_t size);
  ::std::string* mutable_menu_string();
  ::std::string* release_menu_string();
  void set_allocated_menu_string(::std::string* menu_string);

  // optional int32 bits_valid_slots = 1;
  bool has_bits_valid_slots() const;
  void clear_bits_valid_slots();
  static const int kBitsValidSlotsFieldNumber = 1;
  ::google::protobuf::int32 bits_valid_slots() const;
  void set_bits_valid_slots(::google::protobuf::int32 value);

  // optional int32 display_time = 2;
  bool has_display_time() const;
  void clear_display_time();
  static const int kDisplayTimeFieldNumber = 2;
  ::google::protobuf::int32 display_time() const;
  void set_display_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ShowMenu)
 private:
  void set_has_bits_valid_slots();
  void clear_has_bits_valid_slots();
  void set_has_display_time();
  void clear_has_display_time();
  void set_has_menu_string();
  void clear_has_menu_string();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr menu_string_;
  ::google::protobuf::int32 bits_valid_slots_;
  ::google::protobuf::int32 display_time_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_BarTime : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_BarTime) */ {
 public:
  CCSUsrMsg_BarTime();
  virtual ~CCSUsrMsg_BarTime();

  CCSUsrMsg_BarTime(const CCSUsrMsg_BarTime& from);

  inline CCSUsrMsg_BarTime& operator=(const CCSUsrMsg_BarTime& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_BarTime(CCSUsrMsg_BarTime&& from) noexcept
    : CCSUsrMsg_BarTime() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_BarTime& operator=(CCSUsrMsg_BarTime&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_BarTime& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_BarTime* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_BarTime*>(
               &_CCSUsrMsg_BarTime_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  void Swap(CCSUsrMsg_BarTime* other);
  friend void swap(CCSUsrMsg_BarTime& a, CCSUsrMsg_BarTime& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_BarTime* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_BarTime>(NULL);
  }

  CCSUsrMsg_BarTime* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_BarTime>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_BarTime& from);
  void MergeFrom(const CCSUsrMsg_BarTime& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_BarTime* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string time = 1;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  const ::std::string& time() const;
  void set_time(const ::std::string& value);
  #if LANG_CXX11
  void set_time(::std::string&& value);
  #endif
  void set_time(const char* value);
  void set_time(const char* value, size_t size);
  ::std::string* mutable_time();
  ::std::string* release_time();
  void set_allocated_time(::std::string* time);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_BarTime)
 private:
  void set_has_time();
  void clear_has_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr time_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_AmmoDenied : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_AmmoDenied) */ {
 public:
  CCSUsrMsg_AmmoDenied();
  virtual ~CCSUsrMsg_AmmoDenied();

  CCSUsrMsg_AmmoDenied(const CCSUsrMsg_AmmoDenied& from);

  inline CCSUsrMsg_AmmoDenied& operator=(const CCSUsrMsg_AmmoDenied& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_AmmoDenied(CCSUsrMsg_AmmoDenied&& from) noexcept
    : CCSUsrMsg_AmmoDenied() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_AmmoDenied& operator=(CCSUsrMsg_AmmoDenied&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_AmmoDenied& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_AmmoDenied* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_AmmoDenied*>(
               &_CCSUsrMsg_AmmoDenied_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  void Swap(CCSUsrMsg_AmmoDenied* other);
  friend void swap(CCSUsrMsg_AmmoDenied& a, CCSUsrMsg_AmmoDenied& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_AmmoDenied* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_AmmoDenied>(NULL);
  }

  CCSUsrMsg_AmmoDenied* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_AmmoDenied>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_AmmoDenied& from);
  void MergeFrom(const CCSUsrMsg_AmmoDenied& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_AmmoDenied* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ammoIdx = 1;
  bool has_ammoidx() const;
  void clear_ammoidx();
  static const int kAmmoIdxFieldNumber = 1;
  ::google::protobuf::int32 ammoidx() const;
  void set_ammoidx(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_AmmoDenied)
 private:
  void set_has_ammoidx();
  void clear_has_ammoidx();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 ammoidx_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_MarkAchievement : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_MarkAchievement) */ {
 public:
  CCSUsrMsg_MarkAchievement();
  virtual ~CCSUsrMsg_MarkAchievement();

  CCSUsrMsg_MarkAchievement(const CCSUsrMsg_MarkAchievement& from);

  inline CCSUsrMsg_MarkAchievement& operator=(const CCSUsrMsg_MarkAchievement& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_MarkAchievement(CCSUsrMsg_MarkAchievement&& from) noexcept
    : CCSUsrMsg_MarkAchievement() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_MarkAchievement& operator=(CCSUsrMsg_MarkAchievement&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_MarkAchievement& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_MarkAchievement* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_MarkAchievement*>(
               &_CCSUsrMsg_MarkAchievement_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  void Swap(CCSUsrMsg_MarkAchievement* other);
  friend void swap(CCSUsrMsg_MarkAchievement& a, CCSUsrMsg_MarkAchievement& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_MarkAchievement* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_MarkAchievement>(NULL);
  }

  CCSUsrMsg_MarkAchievement* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_MarkAchievement>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_MarkAchievement& from);
  void MergeFrom(const CCSUsrMsg_MarkAchievement& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_MarkAchievement* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string achievement = 1;
  bool has_achievement() const;
  void clear_achievement();
  static const int kAchievementFieldNumber = 1;
  const ::std::string& achievement() const;
  void set_achievement(const ::std::string& value);
  #if LANG_CXX11
  void set_achievement(::std::string&& value);
  #endif
  void set_achievement(const char* value);
  void set_achievement(const char* value, size_t size);
  ::std::string* mutable_achievement();
  ::std::string* release_achievement();
  void set_allocated_achievement(::std::string* achievement);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_MarkAchievement)
 private:
  void set_has_achievement();
  void clear_has_achievement();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr achievement_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ItemDrop : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_ItemDrop) */ {
 public:
  CCSUsrMsg_ItemDrop();
  virtual ~CCSUsrMsg_ItemDrop();

  CCSUsrMsg_ItemDrop(const CCSUsrMsg_ItemDrop& from);

  inline CCSUsrMsg_ItemDrop& operator=(const CCSUsrMsg_ItemDrop& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_ItemDrop(CCSUsrMsg_ItemDrop&& from) noexcept
    : CCSUsrMsg_ItemDrop() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_ItemDrop& operator=(CCSUsrMsg_ItemDrop&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_ItemDrop& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_ItemDrop* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_ItemDrop*>(
               &_CCSUsrMsg_ItemDrop_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  void Swap(CCSUsrMsg_ItemDrop* other);
  friend void swap(CCSUsrMsg_ItemDrop& a, CCSUsrMsg_ItemDrop& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_ItemDrop* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_ItemDrop>(NULL);
  }

  CCSUsrMsg_ItemDrop* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_ItemDrop>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_ItemDrop& from);
  void MergeFrom(const CCSUsrMsg_ItemDrop& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_ItemDrop* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 itemid = 1;
  bool has_itemid() const;
  void clear_itemid();
  static const int kItemidFieldNumber = 1;
  ::google::protobuf::int64 itemid() const;
  void set_itemid(::google::protobuf::int64 value);

  // optional bool death = 2;
  bool has_death() const;
  void clear_death();
  static const int kDeathFieldNumber = 2;
  bool death() const;
  void set_death(bool value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ItemDrop)
 private:
  void set_has_itemid();
  void clear_has_itemid();
  void set_has_death();
  void clear_has_death();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 itemid_;
  bool death_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_GlowPropTurnOff : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_GlowPropTurnOff) */ {
 public:
  CCSUsrMsg_GlowPropTurnOff();
  virtual ~CCSUsrMsg_GlowPropTurnOff();

  CCSUsrMsg_GlowPropTurnOff(const CCSUsrMsg_GlowPropTurnOff& from);

  inline CCSUsrMsg_GlowPropTurnOff& operator=(const CCSUsrMsg_GlowPropTurnOff& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_GlowPropTurnOff(CCSUsrMsg_GlowPropTurnOff&& from) noexcept
    : CCSUsrMsg_GlowPropTurnOff() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_GlowPropTurnOff& operator=(CCSUsrMsg_GlowPropTurnOff&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_GlowPropTurnOff& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_GlowPropTurnOff* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_GlowPropTurnOff*>(
               &_CCSUsrMsg_GlowPropTurnOff_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  void Swap(CCSUsrMsg_GlowPropTurnOff* other);
  friend void swap(CCSUsrMsg_GlowPropTurnOff& a, CCSUsrMsg_GlowPropTurnOff& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_GlowPropTurnOff* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_GlowPropTurnOff>(NULL);
  }

  CCSUsrMsg_GlowPropTurnOff* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_GlowPropTurnOff>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_GlowPropTurnOff& from);
  void MergeFrom(const CCSUsrMsg_GlowPropTurnOff& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_GlowPropTurnOff* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 entidx = 1;
  bool has_entidx() const;
  void clear_entidx();
  static const int kEntidxFieldNumber = 1;
  ::google::protobuf::int32 entidx() const;
  void set_entidx(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_GlowPropTurnOff)
 private:
  void set_has_entidx();
  void clear_has_entidx();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 entidx_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_RoundBackupFilenames : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_RoundBackupFilenames) */ {
 public:
  CCSUsrMsg_RoundBackupFilenames();
  virtual ~CCSUsrMsg_RoundBackupFilenames();

  CCSUsrMsg_RoundBackupFilenames(const CCSUsrMsg_RoundBackupFilenames& from);

  inline CCSUsrMsg_RoundBackupFilenames& operator=(const CCSUsrMsg_RoundBackupFilenames& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_RoundBackupFilenames(CCSUsrMsg_RoundBackupFilenames&& from) noexcept
    : CCSUsrMsg_RoundBackupFilenames() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_RoundBackupFilenames& operator=(CCSUsrMsg_RoundBackupFilenames&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_RoundBackupFilenames& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_RoundBackupFilenames* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_RoundBackupFilenames*>(
               &_CCSUsrMsg_RoundBackupFilenames_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  void Swap(CCSUsrMsg_RoundBackupFilenames* other);
  friend void swap(CCSUsrMsg_RoundBackupFilenames& a, CCSUsrMsg_RoundBackupFilenames& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_RoundBackupFilenames* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_RoundBackupFilenames>(NULL);
  }

  CCSUsrMsg_RoundBackupFilenames* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_RoundBackupFilenames>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_RoundBackupFilenames& from);
  void MergeFrom(const CCSUsrMsg_RoundBackupFilenames& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_RoundBackupFilenames* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string filename = 3;
  bool has_filename() const;
  void clear_filename();
  static const int kFilenameFieldNumber = 3;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_filename(::std::string&& value);
  #endif
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // optional string nicename = 4;
  bool has_nicename() const;
  void clear_nicename();
  static const int kNicenameFieldNumber = 4;
  const ::std::string& nicename() const;
  void set_nicename(const ::std::string& value);
  #if LANG_CXX11
  void set_nicename(::std::string&& value);
  #endif
  void set_nicename(const char* value);
  void set_nicename(const char* value, size_t size);
  ::std::string* mutable_nicename();
  ::std::string* release_nicename();
  void set_allocated_nicename(::std::string* nicename);

  // optional int32 count = 1;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // optional int32 index = 2;
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 2;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_RoundBackupFilenames)
 private:
  void set_has_count();
  void clear_has_count();
  void set_has_index();
  void clear_has_index();
  void set_has_filename();
  void clear_has_filename();
  void set_has_nicename();
  void clear_has_nicename();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  ::google::protobuf::internal::ArenaStringPtr nicename_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::int32 index_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ResetHud : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_ResetHud) */ {
 public:
  CCSUsrMsg_ResetHud();
  virtual ~CCSUsrMsg_ResetHud();

  CCSUsrMsg_ResetHud(const CCSUsrMsg_ResetHud& from);

  inline CCSUsrMsg_ResetHud& operator=(const CCSUsrMsg_ResetHud& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_ResetHud(CCSUsrMsg_ResetHud&& from) noexcept
    : CCSUsrMsg_ResetHud() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_ResetHud& operator=(CCSUsrMsg_ResetHud&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_ResetHud& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_ResetHud* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_ResetHud*>(
               &_CCSUsrMsg_ResetHud_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  void Swap(CCSUsrMsg_ResetHud* other);
  friend void swap(CCSUsrMsg_ResetHud& a, CCSUsrMsg_ResetHud& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_ResetHud* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_ResetHud>(NULL);
  }

  CCSUsrMsg_ResetHud* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_ResetHud>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_ResetHud& from);
  void MergeFrom(const CCSUsrMsg_ResetHud& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_ResetHud* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool reset = 1;
  bool has_reset() const;
  void clear_reset();
  static const int kResetFieldNumber = 1;
  bool reset() const;
  void set_reset(bool value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ResetHud)
 private:
  void set_has_reset();
  void clear_has_reset();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool reset_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_GameTitle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_GameTitle) */ {
 public:
  CCSUsrMsg_GameTitle();
  virtual ~CCSUsrMsg_GameTitle();

  CCSUsrMsg_GameTitle(const CCSUsrMsg_GameTitle& from);

  inline CCSUsrMsg_GameTitle& operator=(const CCSUsrMsg_GameTitle& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_GameTitle(CCSUsrMsg_GameTitle&& from) noexcept
    : CCSUsrMsg_GameTitle() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_GameTitle& operator=(CCSUsrMsg_GameTitle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_GameTitle& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_GameTitle* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_GameTitle*>(
               &_CCSUsrMsg_GameTitle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  void Swap(CCSUsrMsg_GameTitle* other);
  friend void swap(CCSUsrMsg_GameTitle& a, CCSUsrMsg_GameTitle& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_GameTitle* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_GameTitle>(NULL);
  }

  CCSUsrMsg_GameTitle* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_GameTitle>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_GameTitle& from);
  void MergeFrom(const CCSUsrMsg_GameTitle& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_GameTitle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 dummy = 1;
  bool has_dummy() const;
  void clear_dummy();
  static const int kDummyFieldNumber = 1;
  ::google::protobuf::int32 dummy() const;
  void set_dummy(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_GameTitle)
 private:
  void set_has_dummy();
  void clear_has_dummy();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 dummy_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_RequestState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_RequestState) */ {
 public:
  CCSUsrMsg_RequestState();
  virtual ~CCSUsrMsg_RequestState();

  CCSUsrMsg_RequestState(const CCSUsrMsg_RequestState& from);

  inline CCSUsrMsg_RequestState& operator=(const CCSUsrMsg_RequestState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_RequestState(CCSUsrMsg_RequestState&& from) noexcept
    : CCSUsrMsg_RequestState() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_RequestState& operator=(CCSUsrMsg_RequestState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_RequestState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_RequestState* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_RequestState*>(
               &_CCSUsrMsg_RequestState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  void Swap(CCSUsrMsg_RequestState* other);
  friend void swap(CCSUsrMsg_RequestState& a, CCSUsrMsg_RequestState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_RequestState* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_RequestState>(NULL);
  }

  CCSUsrMsg_RequestState* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_RequestState>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_RequestState& from);
  void MergeFrom(const CCSUsrMsg_RequestState& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_RequestState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 dummy = 1;
  bool has_dummy() const;
  void clear_dummy();
  static const int kDummyFieldNumber = 1;
  ::google::protobuf::int32 dummy() const;
  void set_dummy(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_RequestState)
 private:
  void set_has_dummy();
  void clear_has_dummy();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 dummy_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_StopSpectatorMode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_StopSpectatorMode) */ {
 public:
  CCSUsrMsg_StopSpectatorMode();
  virtual ~CCSUsrMsg_StopSpectatorMode();

  CCSUsrMsg_StopSpectatorMode(const CCSUsrMsg_StopSpectatorMode& from);

  inline CCSUsrMsg_StopSpectatorMode& operator=(const CCSUsrMsg_StopSpectatorMode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_StopSpectatorMode(CCSUsrMsg_StopSpectatorMode&& from) noexcept
    : CCSUsrMsg_StopSpectatorMode() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_StopSpectatorMode& operator=(CCSUsrMsg_StopSpectatorMode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_StopSpectatorMode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_StopSpectatorMode* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_StopSpectatorMode*>(
               &_CCSUsrMsg_StopSpectatorMode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  void Swap(CCSUsrMsg_StopSpectatorMode* other);
  friend void swap(CCSUsrMsg_StopSpectatorMode& a, CCSUsrMsg_StopSpectatorMode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_StopSpectatorMode* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_StopSpectatorMode>(NULL);
  }

  CCSUsrMsg_StopSpectatorMode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_StopSpectatorMode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_StopSpectatorMode& from);
  void MergeFrom(const CCSUsrMsg_StopSpectatorMode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_StopSpectatorMode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 dummy = 1;
  bool has_dummy() const;
  void clear_dummy();
  static const int kDummyFieldNumber = 1;
  ::google::protobuf::int32 dummy() const;
  void set_dummy(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_StopSpectatorMode)
 private:
  void set_has_dummy();
  void clear_has_dummy();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 dummy_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_DisconnectToLobby : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_DisconnectToLobby) */ {
 public:
  CCSUsrMsg_DisconnectToLobby();
  virtual ~CCSUsrMsg_DisconnectToLobby();

  CCSUsrMsg_DisconnectToLobby(const CCSUsrMsg_DisconnectToLobby& from);

  inline CCSUsrMsg_DisconnectToLobby& operator=(const CCSUsrMsg_DisconnectToLobby& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_DisconnectToLobby(CCSUsrMsg_DisconnectToLobby&& from) noexcept
    : CCSUsrMsg_DisconnectToLobby() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_DisconnectToLobby& operator=(CCSUsrMsg_DisconnectToLobby&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_DisconnectToLobby& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_DisconnectToLobby* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_DisconnectToLobby*>(
               &_CCSUsrMsg_DisconnectToLobby_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  void Swap(CCSUsrMsg_DisconnectToLobby* other);
  friend void swap(CCSUsrMsg_DisconnectToLobby& a, CCSUsrMsg_DisconnectToLobby& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_DisconnectToLobby* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_DisconnectToLobby>(NULL);
  }

  CCSUsrMsg_DisconnectToLobby* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_DisconnectToLobby>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_DisconnectToLobby& from);
  void MergeFrom(const CCSUsrMsg_DisconnectToLobby& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_DisconnectToLobby* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 dummy = 1;
  bool has_dummy() const;
  void clear_dummy();
  static const int kDummyFieldNumber = 1;
  ::google::protobuf::int32 dummy() const;
  void set_dummy(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_DisconnectToLobby)
 private:
  void set_has_dummy();
  void clear_has_dummy();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 dummy_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_WarmupHasEnded : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_WarmupHasEnded) */ {
 public:
  CCSUsrMsg_WarmupHasEnded();
  virtual ~CCSUsrMsg_WarmupHasEnded();

  CCSUsrMsg_WarmupHasEnded(const CCSUsrMsg_WarmupHasEnded& from);

  inline CCSUsrMsg_WarmupHasEnded& operator=(const CCSUsrMsg_WarmupHasEnded& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_WarmupHasEnded(CCSUsrMsg_WarmupHasEnded&& from) noexcept
    : CCSUsrMsg_WarmupHasEnded() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_WarmupHasEnded& operator=(CCSUsrMsg_WarmupHasEnded&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_WarmupHasEnded& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_WarmupHasEnded* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_WarmupHasEnded*>(
               &_CCSUsrMsg_WarmupHasEnded_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  void Swap(CCSUsrMsg_WarmupHasEnded* other);
  friend void swap(CCSUsrMsg_WarmupHasEnded& a, CCSUsrMsg_WarmupHasEnded& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_WarmupHasEnded* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_WarmupHasEnded>(NULL);
  }

  CCSUsrMsg_WarmupHasEnded* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_WarmupHasEnded>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_WarmupHasEnded& from);
  void MergeFrom(const CCSUsrMsg_WarmupHasEnded& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_WarmupHasEnded* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 dummy = 1;
  bool has_dummy() const;
  void clear_dummy();
  static const int kDummyFieldNumber = 1;
  ::google::protobuf::int32 dummy() const;
  void set_dummy(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_WarmupHasEnded)
 private:
  void set_has_dummy();
  void clear_has_dummy();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 dummy_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ClientInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCSUsrMsg_ClientInfo) */ {
 public:
  CCSUsrMsg_ClientInfo();
  virtual ~CCSUsrMsg_ClientInfo();

  CCSUsrMsg_ClientInfo(const CCSUsrMsg_ClientInfo& from);

  inline CCSUsrMsg_ClientInfo& operator=(const CCSUsrMsg_ClientInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCSUsrMsg_ClientInfo(CCSUsrMsg_ClientInfo&& from) noexcept
    : CCSUsrMsg_ClientInfo() {
    *this = ::std::move(from);
  }

  inline CCSUsrMsg_ClientInfo& operator=(CCSUsrMsg_ClientInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_ClientInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCSUsrMsg_ClientInfo* internal_default_instance() {
    return reinterpret_cast<const CCSUsrMsg_ClientInfo*>(
               &_CCSUsrMsg_ClientInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  void Swap(CCSUsrMsg_ClientInfo* other);
  friend void swap(CCSUsrMsg_ClientInfo& a, CCSUsrMsg_ClientInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCSUsrMsg_ClientInfo* New() const final {
    return CreateMaybeMessage<CCSUsrMsg_ClientInfo>(NULL);
  }

  CCSUsrMsg_ClientInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCSUsrMsg_ClientInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCSUsrMsg_ClientInfo& from);
  void MergeFrom(const CCSUsrMsg_ClientInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCSUsrMsg_ClientInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 dummy = 1;
  bool has_dummy() const;
  void clear_dummy();
  static const int kDummyFieldNumber = 1;
  ::google::protobuf::int32 dummy() const;
  void set_dummy(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ClientInfo)
 private:
  void set_has_dummy();
  void clear_has_dummy();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 dummy_;
  friend struct ::protobuf_cstrike15_5fusermessages_5fpublic_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CCSUsrMsg_VGUIMenu_Subkey

// optional string name = 1;
inline bool CCSUsrMsg_VGUIMenu_Subkey::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_VGUIMenu_Subkey::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_VGUIMenu_Subkey::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_VGUIMenu_Subkey::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CCSUsrMsg_VGUIMenu_Subkey::name() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VGUIMenu.Subkey.name)
  return name_.GetNoArena();
}
inline void CCSUsrMsg_VGUIMenu_Subkey::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VGUIMenu.Subkey.name)
}
#if LANG_CXX11
inline void CCSUsrMsg_VGUIMenu_Subkey::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_VGUIMenu.Subkey.name)
}
#endif
inline void CCSUsrMsg_VGUIMenu_Subkey::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_VGUIMenu.Subkey.name)
}
inline void CCSUsrMsg_VGUIMenu_Subkey::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_VGUIMenu.Subkey.name)
}
inline ::std::string* CCSUsrMsg_VGUIMenu_Subkey::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_VGUIMenu.Subkey.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCSUsrMsg_VGUIMenu_Subkey::release_name() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_VGUIMenu.Subkey.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCSUsrMsg_VGUIMenu_Subkey::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_VGUIMenu.Subkey.name)
}

// optional string str = 2;
inline bool CCSUsrMsg_VGUIMenu_Subkey::has_str() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_VGUIMenu_Subkey::set_has_str() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_VGUIMenu_Subkey::clear_has_str() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_VGUIMenu_Subkey::clear_str() {
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_str();
}
inline const ::std::string& CCSUsrMsg_VGUIMenu_Subkey::str() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VGUIMenu.Subkey.str)
  return str_.GetNoArena();
}
inline void CCSUsrMsg_VGUIMenu_Subkey::set_str(const ::std::string& value) {
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VGUIMenu.Subkey.str)
}
#if LANG_CXX11
inline void CCSUsrMsg_VGUIMenu_Subkey::set_str(::std::string&& value) {
  set_has_str();
  str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_VGUIMenu.Subkey.str)
}
#endif
inline void CCSUsrMsg_VGUIMenu_Subkey::set_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_VGUIMenu.Subkey.str)
}
inline void CCSUsrMsg_VGUIMenu_Subkey::set_str(const char* value, size_t size) {
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_VGUIMenu.Subkey.str)
}
inline ::std::string* CCSUsrMsg_VGUIMenu_Subkey::mutable_str() {
  set_has_str();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_VGUIMenu.Subkey.str)
  return str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCSUsrMsg_VGUIMenu_Subkey::release_str() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_VGUIMenu.Subkey.str)
  if (!has_str()) {
    return NULL;
  }
  clear_has_str();
  return str_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCSUsrMsg_VGUIMenu_Subkey::set_allocated_str(::std::string* str) {
  if (str != NULL) {
    set_has_str();
  } else {
    clear_has_str();
  }
  str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_VGUIMenu.Subkey.str)
}

// -------------------------------------------------------------------

// CCSUsrMsg_VGUIMenu

// optional string name = 1;
inline bool CCSUsrMsg_VGUIMenu::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_VGUIMenu::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_VGUIMenu::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_VGUIMenu::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CCSUsrMsg_VGUIMenu::name() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VGUIMenu.name)
  return name_.GetNoArena();
}
inline void CCSUsrMsg_VGUIMenu::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VGUIMenu.name)
}
#if LANG_CXX11
inline void CCSUsrMsg_VGUIMenu::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_VGUIMenu.name)
}
#endif
inline void CCSUsrMsg_VGUIMenu::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_VGUIMenu.name)
}
inline void CCSUsrMsg_VGUIMenu::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_VGUIMenu.name)
}
inline ::std::string* CCSUsrMsg_VGUIMenu::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_VGUIMenu.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCSUsrMsg_VGUIMenu::release_name() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_VGUIMenu.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCSUsrMsg_VGUIMenu::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_VGUIMenu.name)
}

// optional bool show = 2;
inline bool CCSUsrMsg_VGUIMenu::has_show() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_VGUIMenu::set_has_show() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_VGUIMenu::clear_has_show() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_VGUIMenu::clear_show() {
  show_ = false;
  clear_has_show();
}
inline bool CCSUsrMsg_VGUIMenu::show() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VGUIMenu.show)
  return show_;
}
inline void CCSUsrMsg_VGUIMenu::set_show(bool value) {
  set_has_show();
  show_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VGUIMenu.show)
}

// repeated .CCSUsrMsg_VGUIMenu.Subkey subkeys = 3;
inline int CCSUsrMsg_VGUIMenu::subkeys_size() const {
  return subkeys_.size();
}
inline void CCSUsrMsg_VGUIMenu::clear_subkeys() {
  subkeys_.Clear();
}
inline ::CCSUsrMsg_VGUIMenu_Subkey* CCSUsrMsg_VGUIMenu::mutable_subkeys(int index) {
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_VGUIMenu.subkeys)
  return subkeys_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_VGUIMenu_Subkey >*
CCSUsrMsg_VGUIMenu::mutable_subkeys() {
  // @@protoc_insertion_point(field_mutable_list:CCSUsrMsg_VGUIMenu.subkeys)
  return &subkeys_;
}
inline const ::CCSUsrMsg_VGUIMenu_Subkey& CCSUsrMsg_VGUIMenu::subkeys(int index) const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VGUIMenu.subkeys)
  return subkeys_.Get(index);
}
inline ::CCSUsrMsg_VGUIMenu_Subkey* CCSUsrMsg_VGUIMenu::add_subkeys() {
  // @@protoc_insertion_point(field_add:CCSUsrMsg_VGUIMenu.subkeys)
  return subkeys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_VGUIMenu_Subkey >&
CCSUsrMsg_VGUIMenu::subkeys() const {
  // @@protoc_insertion_point(field_list:CCSUsrMsg_VGUIMenu.subkeys)
  return subkeys_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_Geiger

// optional int32 range = 1;
inline bool CCSUsrMsg_Geiger::has_range() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_Geiger::set_has_range() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_Geiger::clear_has_range() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_Geiger::clear_range() {
  range_ = 0;
  clear_has_range();
}
inline ::google::protobuf::int32 CCSUsrMsg_Geiger::range() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Geiger.range)
  return range_;
}
inline void CCSUsrMsg_Geiger::set_range(::google::protobuf::int32 value) {
  set_has_range();
  range_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Geiger.range)
}

// -------------------------------------------------------------------

// CCSUsrMsg_Train

// optional int32 train = 1;
inline bool CCSUsrMsg_Train::has_train() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_Train::set_has_train() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_Train::clear_has_train() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_Train::clear_train() {
  train_ = 0;
  clear_has_train();
}
inline ::google::protobuf::int32 CCSUsrMsg_Train::train() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Train.train)
  return train_;
}
inline void CCSUsrMsg_Train::set_train(::google::protobuf::int32 value) {
  set_has_train();
  train_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Train.train)
}

// -------------------------------------------------------------------

// CCSUsrMsg_HudText

// optional string text = 1;
inline bool CCSUsrMsg_HudText::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_HudText::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_HudText::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_HudText::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& CCSUsrMsg_HudText::text() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_HudText.text)
  return text_.GetNoArena();
}
inline void CCSUsrMsg_HudText::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_HudText.text)
}
#if LANG_CXX11
inline void CCSUsrMsg_HudText::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_HudText.text)
}
#endif
inline void CCSUsrMsg_HudText::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_HudText.text)
}
inline void CCSUsrMsg_HudText::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_HudText.text)
}
inline ::std::string* CCSUsrMsg_HudText::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_HudText.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCSUsrMsg_HudText::release_text() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_HudText.text)
  if (!has_text()) {
    return NULL;
  }
  clear_has_text();
  return text_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCSUsrMsg_HudText::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_HudText.text)
}

// -------------------------------------------------------------------

// CCSUsrMsg_SayText

// optional int32 ent_idx = 1;
inline bool CCSUsrMsg_SayText::has_ent_idx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_SayText::set_has_ent_idx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_SayText::clear_has_ent_idx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_SayText::clear_ent_idx() {
  ent_idx_ = 0;
  clear_has_ent_idx();
}
inline ::google::protobuf::int32 CCSUsrMsg_SayText::ent_idx() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SayText.ent_idx)
  return ent_idx_;
}
inline void CCSUsrMsg_SayText::set_ent_idx(::google::protobuf::int32 value) {
  set_has_ent_idx();
  ent_idx_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SayText.ent_idx)
}

// optional string text = 2;
inline bool CCSUsrMsg_SayText::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_SayText::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_SayText::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_SayText::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& CCSUsrMsg_SayText::text() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SayText.text)
  return text_.GetNoArena();
}
inline void CCSUsrMsg_SayText::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SayText.text)
}
#if LANG_CXX11
inline void CCSUsrMsg_SayText::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_SayText.text)
}
#endif
inline void CCSUsrMsg_SayText::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_SayText.text)
}
inline void CCSUsrMsg_SayText::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_SayText.text)
}
inline ::std::string* CCSUsrMsg_SayText::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_SayText.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCSUsrMsg_SayText::release_text() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_SayText.text)
  if (!has_text()) {
    return NULL;
  }
  clear_has_text();
  return text_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCSUsrMsg_SayText::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_SayText.text)
}

// optional bool chat = 3;
inline bool CCSUsrMsg_SayText::has_chat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_SayText::set_has_chat() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_SayText::clear_has_chat() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_SayText::clear_chat() {
  chat_ = false;
  clear_has_chat();
}
inline bool CCSUsrMsg_SayText::chat() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SayText.chat)
  return chat_;
}
inline void CCSUsrMsg_SayText::set_chat(bool value) {
  set_has_chat();
  chat_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SayText.chat)
}

// optional bool textallchat = 4;
inline bool CCSUsrMsg_SayText::has_textallchat() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCSUsrMsg_SayText::set_has_textallchat() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCSUsrMsg_SayText::clear_has_textallchat() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCSUsrMsg_SayText::clear_textallchat() {
  textallchat_ = false;
  clear_has_textallchat();
}
inline bool CCSUsrMsg_SayText::textallchat() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SayText.textallchat)
  return textallchat_;
}
inline void CCSUsrMsg_SayText::set_textallchat(bool value) {
  set_has_textallchat();
  textallchat_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SayText.textallchat)
}

// -------------------------------------------------------------------

// CCSUsrMsg_SayText2

// optional int32 ent_idx = 1;
inline bool CCSUsrMsg_SayText2::has_ent_idx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_SayText2::set_has_ent_idx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_SayText2::clear_has_ent_idx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_SayText2::clear_ent_idx() {
  ent_idx_ = 0;
  clear_has_ent_idx();
}
inline ::google::protobuf::int32 CCSUsrMsg_SayText2::ent_idx() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SayText2.ent_idx)
  return ent_idx_;
}
inline void CCSUsrMsg_SayText2::set_ent_idx(::google::protobuf::int32 value) {
  set_has_ent_idx();
  ent_idx_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SayText2.ent_idx)
}

// optional bool chat = 2;
inline bool CCSUsrMsg_SayText2::has_chat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_SayText2::set_has_chat() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_SayText2::clear_has_chat() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_SayText2::clear_chat() {
  chat_ = false;
  clear_has_chat();
}
inline bool CCSUsrMsg_SayText2::chat() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SayText2.chat)
  return chat_;
}
inline void CCSUsrMsg_SayText2::set_chat(bool value) {
  set_has_chat();
  chat_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SayText2.chat)
}

// optional string msg_name = 3;
inline bool CCSUsrMsg_SayText2::has_msg_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_SayText2::set_has_msg_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_SayText2::clear_has_msg_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_SayText2::clear_msg_name() {
  msg_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg_name();
}
inline const ::std::string& CCSUsrMsg_SayText2::msg_name() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SayText2.msg_name)
  return msg_name_.GetNoArena();
}
inline void CCSUsrMsg_SayText2::set_msg_name(const ::std::string& value) {
  set_has_msg_name();
  msg_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SayText2.msg_name)
}
#if LANG_CXX11
inline void CCSUsrMsg_SayText2::set_msg_name(::std::string&& value) {
  set_has_msg_name();
  msg_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_SayText2.msg_name)
}
#endif
inline void CCSUsrMsg_SayText2::set_msg_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg_name();
  msg_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_SayText2.msg_name)
}
inline void CCSUsrMsg_SayText2::set_msg_name(const char* value, size_t size) {
  set_has_msg_name();
  msg_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_SayText2.msg_name)
}
inline ::std::string* CCSUsrMsg_SayText2::mutable_msg_name() {
  set_has_msg_name();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_SayText2.msg_name)
  return msg_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCSUsrMsg_SayText2::release_msg_name() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_SayText2.msg_name)
  if (!has_msg_name()) {
    return NULL;
  }
  clear_has_msg_name();
  return msg_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCSUsrMsg_SayText2::set_allocated_msg_name(::std::string* msg_name) {
  if (msg_name != NULL) {
    set_has_msg_name();
  } else {
    clear_has_msg_name();
  }
  msg_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_name);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_SayText2.msg_name)
}

// repeated string params = 4;
inline int CCSUsrMsg_SayText2::params_size() const {
  return params_.size();
}
inline void CCSUsrMsg_SayText2::clear_params() {
  params_.Clear();
}
inline const ::std::string& CCSUsrMsg_SayText2::params(int index) const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SayText2.params)
  return params_.Get(index);
}
inline ::std::string* CCSUsrMsg_SayText2::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_SayText2.params)
  return params_.Mutable(index);
}
inline void CCSUsrMsg_SayText2::set_params(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SayText2.params)
  params_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CCSUsrMsg_SayText2::set_params(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SayText2.params)
  params_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CCSUsrMsg_SayText2::set_params(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  params_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_SayText2.params)
}
inline void CCSUsrMsg_SayText2::set_params(int index, const char* value, size_t size) {
  params_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_SayText2.params)
}
inline ::std::string* CCSUsrMsg_SayText2::add_params() {
  // @@protoc_insertion_point(field_add_mutable:CCSUsrMsg_SayText2.params)
  return params_.Add();
}
inline void CCSUsrMsg_SayText2::add_params(const ::std::string& value) {
  params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CCSUsrMsg_SayText2.params)
}
#if LANG_CXX11
inline void CCSUsrMsg_SayText2::add_params(::std::string&& value) {
  params_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CCSUsrMsg_SayText2.params)
}
#endif
inline void CCSUsrMsg_SayText2::add_params(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CCSUsrMsg_SayText2.params)
}
inline void CCSUsrMsg_SayText2::add_params(const char* value, size_t size) {
  params_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CCSUsrMsg_SayText2.params)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CCSUsrMsg_SayText2::params() const {
  // @@protoc_insertion_point(field_list:CCSUsrMsg_SayText2.params)
  return params_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CCSUsrMsg_SayText2::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:CCSUsrMsg_SayText2.params)
  return &params_;
}

// optional bool textallchat = 5;
inline bool CCSUsrMsg_SayText2::has_textallchat() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCSUsrMsg_SayText2::set_has_textallchat() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCSUsrMsg_SayText2::clear_has_textallchat() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCSUsrMsg_SayText2::clear_textallchat() {
  textallchat_ = false;
  clear_has_textallchat();
}
inline bool CCSUsrMsg_SayText2::textallchat() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SayText2.textallchat)
  return textallchat_;
}
inline void CCSUsrMsg_SayText2::set_textallchat(bool value) {
  set_has_textallchat();
  textallchat_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SayText2.textallchat)
}

// -------------------------------------------------------------------

// CCSUsrMsg_TextMsg

// optional int32 msg_dst = 1;
inline bool CCSUsrMsg_TextMsg::has_msg_dst() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_TextMsg::set_has_msg_dst() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_TextMsg::clear_has_msg_dst() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_TextMsg::clear_msg_dst() {
  msg_dst_ = 0;
  clear_has_msg_dst();
}
inline ::google::protobuf::int32 CCSUsrMsg_TextMsg::msg_dst() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_TextMsg.msg_dst)
  return msg_dst_;
}
inline void CCSUsrMsg_TextMsg::set_msg_dst(::google::protobuf::int32 value) {
  set_has_msg_dst();
  msg_dst_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_TextMsg.msg_dst)
}

// repeated string params = 3;
inline int CCSUsrMsg_TextMsg::params_size() const {
  return params_.size();
}
inline void CCSUsrMsg_TextMsg::clear_params() {
  params_.Clear();
}
inline const ::std::string& CCSUsrMsg_TextMsg::params(int index) const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_TextMsg.params)
  return params_.Get(index);
}
inline ::std::string* CCSUsrMsg_TextMsg::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_TextMsg.params)
  return params_.Mutable(index);
}
inline void CCSUsrMsg_TextMsg::set_params(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CCSUsrMsg_TextMsg.params)
  params_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CCSUsrMsg_TextMsg::set_params(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:CCSUsrMsg_TextMsg.params)
  params_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CCSUsrMsg_TextMsg::set_params(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  params_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_TextMsg.params)
}
inline void CCSUsrMsg_TextMsg::set_params(int index, const char* value, size_t size) {
  params_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_TextMsg.params)
}
inline ::std::string* CCSUsrMsg_TextMsg::add_params() {
  // @@protoc_insertion_point(field_add_mutable:CCSUsrMsg_TextMsg.params)
  return params_.Add();
}
inline void CCSUsrMsg_TextMsg::add_params(const ::std::string& value) {
  params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CCSUsrMsg_TextMsg.params)
}
#if LANG_CXX11
inline void CCSUsrMsg_TextMsg::add_params(::std::string&& value) {
  params_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CCSUsrMsg_TextMsg.params)
}
#endif
inline void CCSUsrMsg_TextMsg::add_params(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CCSUsrMsg_TextMsg.params)
}
inline void CCSUsrMsg_TextMsg::add_params(const char* value, size_t size) {
  params_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CCSUsrMsg_TextMsg.params)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CCSUsrMsg_TextMsg::params() const {
  // @@protoc_insertion_point(field_list:CCSUsrMsg_TextMsg.params)
  return params_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CCSUsrMsg_TextMsg::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:CCSUsrMsg_TextMsg.params)
  return &params_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_HudMsg

// optional int32 channel = 1;
inline bool CCSUsrMsg_HudMsg::has_channel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CCSUsrMsg_HudMsg::set_has_channel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CCSUsrMsg_HudMsg::clear_has_channel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CCSUsrMsg_HudMsg::clear_channel() {
  channel_ = 0;
  clear_has_channel();
}
inline ::google::protobuf::int32 CCSUsrMsg_HudMsg::channel() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_HudMsg.channel)
  return channel_;
}
inline void CCSUsrMsg_HudMsg::set_channel(::google::protobuf::int32 value) {
  set_has_channel();
  channel_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_HudMsg.channel)
}

// optional .CMsgVector2D pos = 2;
inline bool CCSUsrMsg_HudMsg::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_HudMsg::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_HudMsg::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::CMsgVector2D& CCSUsrMsg_HudMsg::_internal_pos() const {
  return *pos_;
}
inline const ::CMsgVector2D& CCSUsrMsg_HudMsg::pos() const {
  const ::CMsgVector2D* p = pos_;
  // @@protoc_insertion_point(field_get:CCSUsrMsg_HudMsg.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::CMsgVector2D*>(
      &::_CMsgVector2D_default_instance_);
}
inline ::CMsgVector2D* CCSUsrMsg_HudMsg::release_pos() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_HudMsg.pos)
  clear_has_pos();
  ::CMsgVector2D* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline ::CMsgVector2D* CCSUsrMsg_HudMsg::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) {
    auto* p = CreateMaybeMessage<::CMsgVector2D>(GetArenaNoVirtual());
    pos_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_HudMsg.pos)
  return pos_;
}
inline void CCSUsrMsg_HudMsg::set_allocated_pos(::CMsgVector2D* pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pos_);
  }
  if (pos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pos, submessage_arena);
    }
    set_has_pos();
  } else {
    clear_has_pos();
  }
  pos_ = pos;
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_HudMsg.pos)
}

// optional .CMsgRGBA clr1 = 3;
inline bool CCSUsrMsg_HudMsg::has_clr1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_HudMsg::set_has_clr1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_HudMsg::clear_has_clr1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::CMsgRGBA& CCSUsrMsg_HudMsg::_internal_clr1() const {
  return *clr1_;
}
inline const ::CMsgRGBA& CCSUsrMsg_HudMsg::clr1() const {
  const ::CMsgRGBA* p = clr1_;
  // @@protoc_insertion_point(field_get:CCSUsrMsg_HudMsg.clr1)
  return p != NULL ? *p : *reinterpret_cast<const ::CMsgRGBA*>(
      &::_CMsgRGBA_default_instance_);
}
inline ::CMsgRGBA* CCSUsrMsg_HudMsg::release_clr1() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_HudMsg.clr1)
  clear_has_clr1();
  ::CMsgRGBA* temp = clr1_;
  clr1_ = NULL;
  return temp;
}
inline ::CMsgRGBA* CCSUsrMsg_HudMsg::mutable_clr1() {
  set_has_clr1();
  if (clr1_ == NULL) {
    auto* p = CreateMaybeMessage<::CMsgRGBA>(GetArenaNoVirtual());
    clr1_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_HudMsg.clr1)
  return clr1_;
}
inline void CCSUsrMsg_HudMsg::set_allocated_clr1(::CMsgRGBA* clr1) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(clr1_);
  }
  if (clr1) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      clr1 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, clr1, submessage_arena);
    }
    set_has_clr1();
  } else {
    clear_has_clr1();
  }
  clr1_ = clr1;
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_HudMsg.clr1)
}

// optional .CMsgRGBA clr2 = 4;
inline bool CCSUsrMsg_HudMsg::has_clr2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCSUsrMsg_HudMsg::set_has_clr2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCSUsrMsg_HudMsg::clear_has_clr2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::CMsgRGBA& CCSUsrMsg_HudMsg::_internal_clr2() const {
  return *clr2_;
}
inline const ::CMsgRGBA& CCSUsrMsg_HudMsg::clr2() const {
  const ::CMsgRGBA* p = clr2_;
  // @@protoc_insertion_point(field_get:CCSUsrMsg_HudMsg.clr2)
  return p != NULL ? *p : *reinterpret_cast<const ::CMsgRGBA*>(
      &::_CMsgRGBA_default_instance_);
}
inline ::CMsgRGBA* CCSUsrMsg_HudMsg::release_clr2() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_HudMsg.clr2)
  clear_has_clr2();
  ::CMsgRGBA* temp = clr2_;
  clr2_ = NULL;
  return temp;
}
inline ::CMsgRGBA* CCSUsrMsg_HudMsg::mutable_clr2() {
  set_has_clr2();
  if (clr2_ == NULL) {
    auto* p = CreateMaybeMessage<::CMsgRGBA>(GetArenaNoVirtual());
    clr2_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_HudMsg.clr2)
  return clr2_;
}
inline void CCSUsrMsg_HudMsg::set_allocated_clr2(::CMsgRGBA* clr2) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(clr2_);
  }
  if (clr2) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      clr2 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, clr2, submessage_arena);
    }
    set_has_clr2();
  } else {
    clear_has_clr2();
  }
  clr2_ = clr2;
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_HudMsg.clr2)
}

// optional int32 effect = 5;
inline bool CCSUsrMsg_HudMsg::has_effect() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CCSUsrMsg_HudMsg::set_has_effect() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CCSUsrMsg_HudMsg::clear_has_effect() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CCSUsrMsg_HudMsg::clear_effect() {
  effect_ = 0;
  clear_has_effect();
}
inline ::google::protobuf::int32 CCSUsrMsg_HudMsg::effect() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_HudMsg.effect)
  return effect_;
}
inline void CCSUsrMsg_HudMsg::set_effect(::google::protobuf::int32 value) {
  set_has_effect();
  effect_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_HudMsg.effect)
}

// optional float fade_in_time = 6;
inline bool CCSUsrMsg_HudMsg::has_fade_in_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CCSUsrMsg_HudMsg::set_has_fade_in_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CCSUsrMsg_HudMsg::clear_has_fade_in_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CCSUsrMsg_HudMsg::clear_fade_in_time() {
  fade_in_time_ = 0;
  clear_has_fade_in_time();
}
inline float CCSUsrMsg_HudMsg::fade_in_time() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_HudMsg.fade_in_time)
  return fade_in_time_;
}
inline void CCSUsrMsg_HudMsg::set_fade_in_time(float value) {
  set_has_fade_in_time();
  fade_in_time_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_HudMsg.fade_in_time)
}

// optional float fade_out_time = 7;
inline bool CCSUsrMsg_HudMsg::has_fade_out_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CCSUsrMsg_HudMsg::set_has_fade_out_time() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CCSUsrMsg_HudMsg::clear_has_fade_out_time() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CCSUsrMsg_HudMsg::clear_fade_out_time() {
  fade_out_time_ = 0;
  clear_has_fade_out_time();
}
inline float CCSUsrMsg_HudMsg::fade_out_time() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_HudMsg.fade_out_time)
  return fade_out_time_;
}
inline void CCSUsrMsg_HudMsg::set_fade_out_time(float value) {
  set_has_fade_out_time();
  fade_out_time_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_HudMsg.fade_out_time)
}

// optional float hold_time = 9;
inline bool CCSUsrMsg_HudMsg::has_hold_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CCSUsrMsg_HudMsg::set_has_hold_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CCSUsrMsg_HudMsg::clear_has_hold_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CCSUsrMsg_HudMsg::clear_hold_time() {
  hold_time_ = 0;
  clear_has_hold_time();
}
inline float CCSUsrMsg_HudMsg::hold_time() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_HudMsg.hold_time)
  return hold_time_;
}
inline void CCSUsrMsg_HudMsg::set_hold_time(float value) {
  set_has_hold_time();
  hold_time_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_HudMsg.hold_time)
}

// optional float fx_time = 10;
inline bool CCSUsrMsg_HudMsg::has_fx_time() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CCSUsrMsg_HudMsg::set_has_fx_time() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CCSUsrMsg_HudMsg::clear_has_fx_time() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CCSUsrMsg_HudMsg::clear_fx_time() {
  fx_time_ = 0;
  clear_has_fx_time();
}
inline float CCSUsrMsg_HudMsg::fx_time() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_HudMsg.fx_time)
  return fx_time_;
}
inline void CCSUsrMsg_HudMsg::set_fx_time(float value) {
  set_has_fx_time();
  fx_time_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_HudMsg.fx_time)
}

// optional string text = 11;
inline bool CCSUsrMsg_HudMsg::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_HudMsg::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_HudMsg::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_HudMsg::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& CCSUsrMsg_HudMsg::text() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_HudMsg.text)
  return text_.GetNoArena();
}
inline void CCSUsrMsg_HudMsg::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_HudMsg.text)
}
#if LANG_CXX11
inline void CCSUsrMsg_HudMsg::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_HudMsg.text)
}
#endif
inline void CCSUsrMsg_HudMsg::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_HudMsg.text)
}
inline void CCSUsrMsg_HudMsg::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_HudMsg.text)
}
inline ::std::string* CCSUsrMsg_HudMsg::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_HudMsg.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCSUsrMsg_HudMsg::release_text() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_HudMsg.text)
  if (!has_text()) {
    return NULL;
  }
  clear_has_text();
  return text_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCSUsrMsg_HudMsg::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_HudMsg.text)
}

// -------------------------------------------------------------------

// CCSUsrMsg_Shake

// optional int32 command = 1;
inline bool CCSUsrMsg_Shake::has_command() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_Shake::set_has_command() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_Shake::clear_has_command() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_Shake::clear_command() {
  command_ = 0;
  clear_has_command();
}
inline ::google::protobuf::int32 CCSUsrMsg_Shake::command() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Shake.command)
  return command_;
}
inline void CCSUsrMsg_Shake::set_command(::google::protobuf::int32 value) {
  set_has_command();
  command_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Shake.command)
}

// optional float local_amplitude = 2;
inline bool CCSUsrMsg_Shake::has_local_amplitude() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_Shake::set_has_local_amplitude() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_Shake::clear_has_local_amplitude() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_Shake::clear_local_amplitude() {
  local_amplitude_ = 0;
  clear_has_local_amplitude();
}
inline float CCSUsrMsg_Shake::local_amplitude() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Shake.local_amplitude)
  return local_amplitude_;
}
inline void CCSUsrMsg_Shake::set_local_amplitude(float value) {
  set_has_local_amplitude();
  local_amplitude_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Shake.local_amplitude)
}

// optional float frequency = 3;
inline bool CCSUsrMsg_Shake::has_frequency() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_Shake::set_has_frequency() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_Shake::clear_has_frequency() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_Shake::clear_frequency() {
  frequency_ = 0;
  clear_has_frequency();
}
inline float CCSUsrMsg_Shake::frequency() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Shake.frequency)
  return frequency_;
}
inline void CCSUsrMsg_Shake::set_frequency(float value) {
  set_has_frequency();
  frequency_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Shake.frequency)
}

// optional float duration = 4;
inline bool CCSUsrMsg_Shake::has_duration() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCSUsrMsg_Shake::set_has_duration() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCSUsrMsg_Shake::clear_has_duration() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCSUsrMsg_Shake::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
inline float CCSUsrMsg_Shake::duration() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Shake.duration)
  return duration_;
}
inline void CCSUsrMsg_Shake::set_duration(float value) {
  set_has_duration();
  duration_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Shake.duration)
}

// -------------------------------------------------------------------

// CCSUsrMsg_Fade

// optional int32 duration = 1;
inline bool CCSUsrMsg_Fade::has_duration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_Fade::set_has_duration() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_Fade::clear_has_duration() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_Fade::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
inline ::google::protobuf::int32 CCSUsrMsg_Fade::duration() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Fade.duration)
  return duration_;
}
inline void CCSUsrMsg_Fade::set_duration(::google::protobuf::int32 value) {
  set_has_duration();
  duration_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Fade.duration)
}

// optional int32 hold_time = 2;
inline bool CCSUsrMsg_Fade::has_hold_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_Fade::set_has_hold_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_Fade::clear_has_hold_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_Fade::clear_hold_time() {
  hold_time_ = 0;
  clear_has_hold_time();
}
inline ::google::protobuf::int32 CCSUsrMsg_Fade::hold_time() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Fade.hold_time)
  return hold_time_;
}
inline void CCSUsrMsg_Fade::set_hold_time(::google::protobuf::int32 value) {
  set_has_hold_time();
  hold_time_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Fade.hold_time)
}

// optional int32 flags = 3;
inline bool CCSUsrMsg_Fade::has_flags() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCSUsrMsg_Fade::set_has_flags() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCSUsrMsg_Fade::clear_has_flags() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCSUsrMsg_Fade::clear_flags() {
  flags_ = 0;
  clear_has_flags();
}
inline ::google::protobuf::int32 CCSUsrMsg_Fade::flags() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Fade.flags)
  return flags_;
}
inline void CCSUsrMsg_Fade::set_flags(::google::protobuf::int32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Fade.flags)
}

// optional .CMsgRGBA clr = 4;
inline bool CCSUsrMsg_Fade::has_clr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_Fade::set_has_clr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_Fade::clear_has_clr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgRGBA& CCSUsrMsg_Fade::_internal_clr() const {
  return *clr_;
}
inline const ::CMsgRGBA& CCSUsrMsg_Fade::clr() const {
  const ::CMsgRGBA* p = clr_;
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Fade.clr)
  return p != NULL ? *p : *reinterpret_cast<const ::CMsgRGBA*>(
      &::_CMsgRGBA_default_instance_);
}
inline ::CMsgRGBA* CCSUsrMsg_Fade::release_clr() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_Fade.clr)
  clear_has_clr();
  ::CMsgRGBA* temp = clr_;
  clr_ = NULL;
  return temp;
}
inline ::CMsgRGBA* CCSUsrMsg_Fade::mutable_clr() {
  set_has_clr();
  if (clr_ == NULL) {
    auto* p = CreateMaybeMessage<::CMsgRGBA>(GetArenaNoVirtual());
    clr_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_Fade.clr)
  return clr_;
}
inline void CCSUsrMsg_Fade::set_allocated_clr(::CMsgRGBA* clr) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(clr_);
  }
  if (clr) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      clr = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, clr, submessage_arena);
    }
    set_has_clr();
  } else {
    clear_has_clr();
  }
  clr_ = clr;
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_Fade.clr)
}

// -------------------------------------------------------------------

// CCSUsrMsg_Rumble

// optional int32 index = 1;
inline bool CCSUsrMsg_Rumble::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_Rumble::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_Rumble::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_Rumble::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 CCSUsrMsg_Rumble::index() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Rumble.index)
  return index_;
}
inline void CCSUsrMsg_Rumble::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Rumble.index)
}

// optional int32 data = 2;
inline bool CCSUsrMsg_Rumble::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_Rumble::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_Rumble::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_Rumble::clear_data() {
  data_ = 0;
  clear_has_data();
}
inline ::google::protobuf::int32 CCSUsrMsg_Rumble::data() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Rumble.data)
  return data_;
}
inline void CCSUsrMsg_Rumble::set_data(::google::protobuf::int32 value) {
  set_has_data();
  data_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Rumble.data)
}

// optional int32 flags = 3;
inline bool CCSUsrMsg_Rumble::has_flags() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_Rumble::set_has_flags() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_Rumble::clear_has_flags() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_Rumble::clear_flags() {
  flags_ = 0;
  clear_has_flags();
}
inline ::google::protobuf::int32 CCSUsrMsg_Rumble::flags() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Rumble.flags)
  return flags_;
}
inline void CCSUsrMsg_Rumble::set_flags(::google::protobuf::int32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Rumble.flags)
}

// -------------------------------------------------------------------

// CCSUsrMsg_CloseCaption

// optional uint32 hash = 1;
inline bool CCSUsrMsg_CloseCaption::has_hash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_CloseCaption::set_has_hash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_CloseCaption::clear_has_hash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_CloseCaption::clear_hash() {
  hash_ = 0u;
  clear_has_hash();
}
inline ::google::protobuf::uint32 CCSUsrMsg_CloseCaption::hash() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_CloseCaption.hash)
  return hash_;
}
inline void CCSUsrMsg_CloseCaption::set_hash(::google::protobuf::uint32 value) {
  set_has_hash();
  hash_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_CloseCaption.hash)
}

// optional int32 duration = 2;
inline bool CCSUsrMsg_CloseCaption::has_duration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_CloseCaption::set_has_duration() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_CloseCaption::clear_has_duration() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_CloseCaption::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
inline ::google::protobuf::int32 CCSUsrMsg_CloseCaption::duration() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_CloseCaption.duration)
  return duration_;
}
inline void CCSUsrMsg_CloseCaption::set_duration(::google::protobuf::int32 value) {
  set_has_duration();
  duration_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_CloseCaption.duration)
}

// optional bool from_player = 3;
inline bool CCSUsrMsg_CloseCaption::has_from_player() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_CloseCaption::set_has_from_player() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_CloseCaption::clear_has_from_player() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_CloseCaption::clear_from_player() {
  from_player_ = false;
  clear_has_from_player();
}
inline bool CCSUsrMsg_CloseCaption::from_player() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_CloseCaption.from_player)
  return from_player_;
}
inline void CCSUsrMsg_CloseCaption::set_from_player(bool value) {
  set_has_from_player();
  from_player_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_CloseCaption.from_player)
}

// -------------------------------------------------------------------

// CCSUsrMsg_CloseCaptionDirect

// optional uint32 hash = 1;
inline bool CCSUsrMsg_CloseCaptionDirect::has_hash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_CloseCaptionDirect::set_has_hash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_CloseCaptionDirect::clear_has_hash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_CloseCaptionDirect::clear_hash() {
  hash_ = 0u;
  clear_has_hash();
}
inline ::google::protobuf::uint32 CCSUsrMsg_CloseCaptionDirect::hash() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_CloseCaptionDirect.hash)
  return hash_;
}
inline void CCSUsrMsg_CloseCaptionDirect::set_hash(::google::protobuf::uint32 value) {
  set_has_hash();
  hash_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_CloseCaptionDirect.hash)
}

// optional int32 duration = 2;
inline bool CCSUsrMsg_CloseCaptionDirect::has_duration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_CloseCaptionDirect::set_has_duration() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_CloseCaptionDirect::clear_has_duration() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_CloseCaptionDirect::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
inline ::google::protobuf::int32 CCSUsrMsg_CloseCaptionDirect::duration() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_CloseCaptionDirect.duration)
  return duration_;
}
inline void CCSUsrMsg_CloseCaptionDirect::set_duration(::google::protobuf::int32 value) {
  set_has_duration();
  duration_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_CloseCaptionDirect.duration)
}

// optional bool from_player = 3;
inline bool CCSUsrMsg_CloseCaptionDirect::has_from_player() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_CloseCaptionDirect::set_has_from_player() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_CloseCaptionDirect::clear_has_from_player() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_CloseCaptionDirect::clear_from_player() {
  from_player_ = false;
  clear_has_from_player();
}
inline bool CCSUsrMsg_CloseCaptionDirect::from_player() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_CloseCaptionDirect.from_player)
  return from_player_;
}
inline void CCSUsrMsg_CloseCaptionDirect::set_from_player(bool value) {
  set_has_from_player();
  from_player_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_CloseCaptionDirect.from_player)
}

// -------------------------------------------------------------------

// CCSUsrMsg_SendAudio

// optional string radio_sound = 1;
inline bool CCSUsrMsg_SendAudio::has_radio_sound() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_SendAudio::set_has_radio_sound() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_SendAudio::clear_has_radio_sound() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_SendAudio::clear_radio_sound() {
  radio_sound_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_radio_sound();
}
inline const ::std::string& CCSUsrMsg_SendAudio::radio_sound() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SendAudio.radio_sound)
  return radio_sound_.GetNoArena();
}
inline void CCSUsrMsg_SendAudio::set_radio_sound(const ::std::string& value) {
  set_has_radio_sound();
  radio_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SendAudio.radio_sound)
}
#if LANG_CXX11
inline void CCSUsrMsg_SendAudio::set_radio_sound(::std::string&& value) {
  set_has_radio_sound();
  radio_sound_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_SendAudio.radio_sound)
}
#endif
inline void CCSUsrMsg_SendAudio::set_radio_sound(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_radio_sound();
  radio_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_SendAudio.radio_sound)
}
inline void CCSUsrMsg_SendAudio::set_radio_sound(const char* value, size_t size) {
  set_has_radio_sound();
  radio_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_SendAudio.radio_sound)
}
inline ::std::string* CCSUsrMsg_SendAudio::mutable_radio_sound() {
  set_has_radio_sound();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_SendAudio.radio_sound)
  return radio_sound_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCSUsrMsg_SendAudio::release_radio_sound() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_SendAudio.radio_sound)
  if (!has_radio_sound()) {
    return NULL;
  }
  clear_has_radio_sound();
  return radio_sound_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCSUsrMsg_SendAudio::set_allocated_radio_sound(::std::string* radio_sound) {
  if (radio_sound != NULL) {
    set_has_radio_sound();
  } else {
    clear_has_radio_sound();
  }
  radio_sound_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), radio_sound);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_SendAudio.radio_sound)
}

// -------------------------------------------------------------------

// CCSUsrMsg_RawAudio

// optional int32 pitch = 1;
inline bool CCSUsrMsg_RawAudio::has_pitch() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_RawAudio::set_has_pitch() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_RawAudio::clear_has_pitch() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_RawAudio::clear_pitch() {
  pitch_ = 0;
  clear_has_pitch();
}
inline ::google::protobuf::int32 CCSUsrMsg_RawAudio::pitch() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_RawAudio.pitch)
  return pitch_;
}
inline void CCSUsrMsg_RawAudio::set_pitch(::google::protobuf::int32 value) {
  set_has_pitch();
  pitch_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RawAudio.pitch)
}

// optional int32 entidx = 2;
inline bool CCSUsrMsg_RawAudio::has_entidx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_RawAudio::set_has_entidx() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_RawAudio::clear_has_entidx() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_RawAudio::clear_entidx() {
  entidx_ = 0;
  clear_has_entidx();
}
inline ::google::protobuf::int32 CCSUsrMsg_RawAudio::entidx() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_RawAudio.entidx)
  return entidx_;
}
inline void CCSUsrMsg_RawAudio::set_entidx(::google::protobuf::int32 value) {
  set_has_entidx();
  entidx_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RawAudio.entidx)
}

// optional float duration = 3;
inline bool CCSUsrMsg_RawAudio::has_duration() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCSUsrMsg_RawAudio::set_has_duration() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCSUsrMsg_RawAudio::clear_has_duration() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCSUsrMsg_RawAudio::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
inline float CCSUsrMsg_RawAudio::duration() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_RawAudio.duration)
  return duration_;
}
inline void CCSUsrMsg_RawAudio::set_duration(float value) {
  set_has_duration();
  duration_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RawAudio.duration)
}

// optional string voice_filename = 4;
inline bool CCSUsrMsg_RawAudio::has_voice_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_RawAudio::set_has_voice_filename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_RawAudio::clear_has_voice_filename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_RawAudio::clear_voice_filename() {
  voice_filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_voice_filename();
}
inline const ::std::string& CCSUsrMsg_RawAudio::voice_filename() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_RawAudio.voice_filename)
  return voice_filename_.GetNoArena();
}
inline void CCSUsrMsg_RawAudio::set_voice_filename(const ::std::string& value) {
  set_has_voice_filename();
  voice_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RawAudio.voice_filename)
}
#if LANG_CXX11
inline void CCSUsrMsg_RawAudio::set_voice_filename(::std::string&& value) {
  set_has_voice_filename();
  voice_filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_RawAudio.voice_filename)
}
#endif
inline void CCSUsrMsg_RawAudio::set_voice_filename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_voice_filename();
  voice_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_RawAudio.voice_filename)
}
inline void CCSUsrMsg_RawAudio::set_voice_filename(const char* value, size_t size) {
  set_has_voice_filename();
  voice_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_RawAudio.voice_filename)
}
inline ::std::string* CCSUsrMsg_RawAudio::mutable_voice_filename() {
  set_has_voice_filename();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_RawAudio.voice_filename)
  return voice_filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCSUsrMsg_RawAudio::release_voice_filename() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_RawAudio.voice_filename)
  if (!has_voice_filename()) {
    return NULL;
  }
  clear_has_voice_filename();
  return voice_filename_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCSUsrMsg_RawAudio::set_allocated_voice_filename(::std::string* voice_filename) {
  if (voice_filename != NULL) {
    set_has_voice_filename();
  } else {
    clear_has_voice_filename();
  }
  voice_filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), voice_filename);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_RawAudio.voice_filename)
}

// -------------------------------------------------------------------

// CCSUsrMsg_VoiceMask_PlayerMask

// optional int32 game_rules_mask = 1;
inline bool CCSUsrMsg_VoiceMask_PlayerMask::has_game_rules_mask() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_VoiceMask_PlayerMask::set_has_game_rules_mask() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_VoiceMask_PlayerMask::clear_has_game_rules_mask() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_VoiceMask_PlayerMask::clear_game_rules_mask() {
  game_rules_mask_ = 0;
  clear_has_game_rules_mask();
}
inline ::google::protobuf::int32 CCSUsrMsg_VoiceMask_PlayerMask::game_rules_mask() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoiceMask.PlayerMask.game_rules_mask)
  return game_rules_mask_;
}
inline void CCSUsrMsg_VoiceMask_PlayerMask::set_game_rules_mask(::google::protobuf::int32 value) {
  set_has_game_rules_mask();
  game_rules_mask_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoiceMask.PlayerMask.game_rules_mask)
}

// optional int32 ban_masks = 2;
inline bool CCSUsrMsg_VoiceMask_PlayerMask::has_ban_masks() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_VoiceMask_PlayerMask::set_has_ban_masks() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_VoiceMask_PlayerMask::clear_has_ban_masks() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_VoiceMask_PlayerMask::clear_ban_masks() {
  ban_masks_ = 0;
  clear_has_ban_masks();
}
inline ::google::protobuf::int32 CCSUsrMsg_VoiceMask_PlayerMask::ban_masks() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoiceMask.PlayerMask.ban_masks)
  return ban_masks_;
}
inline void CCSUsrMsg_VoiceMask_PlayerMask::set_ban_masks(::google::protobuf::int32 value) {
  set_has_ban_masks();
  ban_masks_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoiceMask.PlayerMask.ban_masks)
}

// -------------------------------------------------------------------

// CCSUsrMsg_VoiceMask

// repeated .CCSUsrMsg_VoiceMask.PlayerMask player_masks = 1;
inline int CCSUsrMsg_VoiceMask::player_masks_size() const {
  return player_masks_.size();
}
inline void CCSUsrMsg_VoiceMask::clear_player_masks() {
  player_masks_.Clear();
}
inline ::CCSUsrMsg_VoiceMask_PlayerMask* CCSUsrMsg_VoiceMask::mutable_player_masks(int index) {
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_VoiceMask.player_masks)
  return player_masks_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_VoiceMask_PlayerMask >*
CCSUsrMsg_VoiceMask::mutable_player_masks() {
  // @@protoc_insertion_point(field_mutable_list:CCSUsrMsg_VoiceMask.player_masks)
  return &player_masks_;
}
inline const ::CCSUsrMsg_VoiceMask_PlayerMask& CCSUsrMsg_VoiceMask::player_masks(int index) const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoiceMask.player_masks)
  return player_masks_.Get(index);
}
inline ::CCSUsrMsg_VoiceMask_PlayerMask* CCSUsrMsg_VoiceMask::add_player_masks() {
  // @@protoc_insertion_point(field_add:CCSUsrMsg_VoiceMask.player_masks)
  return player_masks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_VoiceMask_PlayerMask >&
CCSUsrMsg_VoiceMask::player_masks() const {
  // @@protoc_insertion_point(field_list:CCSUsrMsg_VoiceMask.player_masks)
  return player_masks_;
}

// optional bool player_mod_enable = 2;
inline bool CCSUsrMsg_VoiceMask::has_player_mod_enable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_VoiceMask::set_has_player_mod_enable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_VoiceMask::clear_has_player_mod_enable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_VoiceMask::clear_player_mod_enable() {
  player_mod_enable_ = false;
  clear_has_player_mod_enable();
}
inline bool CCSUsrMsg_VoiceMask::player_mod_enable() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoiceMask.player_mod_enable)
  return player_mod_enable_;
}
inline void CCSUsrMsg_VoiceMask::set_player_mod_enable(bool value) {
  set_has_player_mod_enable();
  player_mod_enable_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoiceMask.player_mod_enable)
}

// -------------------------------------------------------------------

// CCSUsrMsg_Damage

// optional int32 amount = 1;
inline bool CCSUsrMsg_Damage::has_amount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_Damage::set_has_amount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_Damage::clear_has_amount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_Damage::clear_amount() {
  amount_ = 0;
  clear_has_amount();
}
inline ::google::protobuf::int32 CCSUsrMsg_Damage::amount() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Damage.amount)
  return amount_;
}
inline void CCSUsrMsg_Damage::set_amount(::google::protobuf::int32 value) {
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_Damage.amount)
}

// optional .CMsgVector inflictor_world_pos = 2;
inline bool CCSUsrMsg_Damage::has_inflictor_world_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_Damage::set_has_inflictor_world_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_Damage::clear_has_inflictor_world_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgVector& CCSUsrMsg_Damage::_internal_inflictor_world_pos() const {
  return *inflictor_world_pos_;
}
inline const ::CMsgVector& CCSUsrMsg_Damage::inflictor_world_pos() const {
  const ::CMsgVector* p = inflictor_world_pos_;
  // @@protoc_insertion_point(field_get:CCSUsrMsg_Damage.inflictor_world_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::CMsgVector*>(
      &::_CMsgVector_default_instance_);
}
inline ::CMsgVector* CCSUsrMsg_Damage::release_inflictor_world_pos() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_Damage.inflictor_world_pos)
  clear_has_inflictor_world_pos();
  ::CMsgVector* temp = inflictor_world_pos_;
  inflictor_world_pos_ = NULL;
  return temp;
}
inline ::CMsgVector* CCSUsrMsg_Damage::mutable_inflictor_world_pos() {
  set_has_inflictor_world_pos();
  if (inflictor_world_pos_ == NULL) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArenaNoVirtual());
    inflictor_world_pos_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_Damage.inflictor_world_pos)
  return inflictor_world_pos_;
}
inline void CCSUsrMsg_Damage::set_allocated_inflictor_world_pos(::CMsgVector* inflictor_world_pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(inflictor_world_pos_);
  }
  if (inflictor_world_pos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      inflictor_world_pos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, inflictor_world_pos, submessage_arena);
    }
    set_has_inflictor_world_pos();
  } else {
    clear_has_inflictor_world_pos();
  }
  inflictor_world_pos_ = inflictor_world_pos;
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_Damage.inflictor_world_pos)
}

// -------------------------------------------------------------------

// CCSUsrMsg_RadioText

// optional int32 msg_dst = 1;
inline bool CCSUsrMsg_RadioText::has_msg_dst() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_RadioText::set_has_msg_dst() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_RadioText::clear_has_msg_dst() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_RadioText::clear_msg_dst() {
  msg_dst_ = 0;
  clear_has_msg_dst();
}
inline ::google::protobuf::int32 CCSUsrMsg_RadioText::msg_dst() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_RadioText.msg_dst)
  return msg_dst_;
}
inline void CCSUsrMsg_RadioText::set_msg_dst(::google::protobuf::int32 value) {
  set_has_msg_dst();
  msg_dst_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RadioText.msg_dst)
}

// optional int32 client = 2;
inline bool CCSUsrMsg_RadioText::has_client() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_RadioText::set_has_client() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_RadioText::clear_has_client() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_RadioText::clear_client() {
  client_ = 0;
  clear_has_client();
}
inline ::google::protobuf::int32 CCSUsrMsg_RadioText::client() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_RadioText.client)
  return client_;
}
inline void CCSUsrMsg_RadioText::set_client(::google::protobuf::int32 value) {
  set_has_client();
  client_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RadioText.client)
}

// optional string msg_name = 3;
inline bool CCSUsrMsg_RadioText::has_msg_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_RadioText::set_has_msg_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_RadioText::clear_has_msg_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_RadioText::clear_msg_name() {
  msg_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg_name();
}
inline const ::std::string& CCSUsrMsg_RadioText::msg_name() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_RadioText.msg_name)
  return msg_name_.GetNoArena();
}
inline void CCSUsrMsg_RadioText::set_msg_name(const ::std::string& value) {
  set_has_msg_name();
  msg_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RadioText.msg_name)
}
#if LANG_CXX11
inline void CCSUsrMsg_RadioText::set_msg_name(::std::string&& value) {
  set_has_msg_name();
  msg_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_RadioText.msg_name)
}
#endif
inline void CCSUsrMsg_RadioText::set_msg_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg_name();
  msg_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_RadioText.msg_name)
}
inline void CCSUsrMsg_RadioText::set_msg_name(const char* value, size_t size) {
  set_has_msg_name();
  msg_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_RadioText.msg_name)
}
inline ::std::string* CCSUsrMsg_RadioText::mutable_msg_name() {
  set_has_msg_name();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_RadioText.msg_name)
  return msg_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCSUsrMsg_RadioText::release_msg_name() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_RadioText.msg_name)
  if (!has_msg_name()) {
    return NULL;
  }
  clear_has_msg_name();
  return msg_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCSUsrMsg_RadioText::set_allocated_msg_name(::std::string* msg_name) {
  if (msg_name != NULL) {
    set_has_msg_name();
  } else {
    clear_has_msg_name();
  }
  msg_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_name);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_RadioText.msg_name)
}

// repeated string params = 4;
inline int CCSUsrMsg_RadioText::params_size() const {
  return params_.size();
}
inline void CCSUsrMsg_RadioText::clear_params() {
  params_.Clear();
}
inline const ::std::string& CCSUsrMsg_RadioText::params(int index) const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_RadioText.params)
  return params_.Get(index);
}
inline ::std::string* CCSUsrMsg_RadioText::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_RadioText.params)
  return params_.Mutable(index);
}
inline void CCSUsrMsg_RadioText::set_params(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RadioText.params)
  params_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CCSUsrMsg_RadioText::set_params(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RadioText.params)
  params_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CCSUsrMsg_RadioText::set_params(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  params_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_RadioText.params)
}
inline void CCSUsrMsg_RadioText::set_params(int index, const char* value, size_t size) {
  params_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_RadioText.params)
}
inline ::std::string* CCSUsrMsg_RadioText::add_params() {
  // @@protoc_insertion_point(field_add_mutable:CCSUsrMsg_RadioText.params)
  return params_.Add();
}
inline void CCSUsrMsg_RadioText::add_params(const ::std::string& value) {
  params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CCSUsrMsg_RadioText.params)
}
#if LANG_CXX11
inline void CCSUsrMsg_RadioText::add_params(::std::string&& value) {
  params_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CCSUsrMsg_RadioText.params)
}
#endif
inline void CCSUsrMsg_RadioText::add_params(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CCSUsrMsg_RadioText.params)
}
inline void CCSUsrMsg_RadioText::add_params(const char* value, size_t size) {
  params_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CCSUsrMsg_RadioText.params)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CCSUsrMsg_RadioText::params() const {
  // @@protoc_insertion_point(field_list:CCSUsrMsg_RadioText.params)
  return params_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CCSUsrMsg_RadioText::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:CCSUsrMsg_RadioText.params)
  return &params_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_HintText

// optional string text = 1;
inline bool CCSUsrMsg_HintText::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_HintText::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_HintText::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_HintText::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& CCSUsrMsg_HintText::text() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_HintText.text)
  return text_.GetNoArena();
}
inline void CCSUsrMsg_HintText::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_HintText.text)
}
#if LANG_CXX11
inline void CCSUsrMsg_HintText::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_HintText.text)
}
#endif
inline void CCSUsrMsg_HintText::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_HintText.text)
}
inline void CCSUsrMsg_HintText::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_HintText.text)
}
inline ::std::string* CCSUsrMsg_HintText::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_HintText.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCSUsrMsg_HintText::release_text() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_HintText.text)
  if (!has_text()) {
    return NULL;
  }
  clear_has_text();
  return text_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCSUsrMsg_HintText::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_HintText.text)
}

// -------------------------------------------------------------------

// CCSUsrMsg_KeyHintText

// repeated string hints = 1;
inline int CCSUsrMsg_KeyHintText::hints_size() const {
  return hints_.size();
}
inline void CCSUsrMsg_KeyHintText::clear_hints() {
  hints_.Clear();
}
inline const ::std::string& CCSUsrMsg_KeyHintText::hints(int index) const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_KeyHintText.hints)
  return hints_.Get(index);
}
inline ::std::string* CCSUsrMsg_KeyHintText::mutable_hints(int index) {
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_KeyHintText.hints)
  return hints_.Mutable(index);
}
inline void CCSUsrMsg_KeyHintText::set_hints(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CCSUsrMsg_KeyHintText.hints)
  hints_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CCSUsrMsg_KeyHintText::set_hints(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:CCSUsrMsg_KeyHintText.hints)
  hints_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CCSUsrMsg_KeyHintText::set_hints(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  hints_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_KeyHintText.hints)
}
inline void CCSUsrMsg_KeyHintText::set_hints(int index, const char* value, size_t size) {
  hints_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_KeyHintText.hints)
}
inline ::std::string* CCSUsrMsg_KeyHintText::add_hints() {
  // @@protoc_insertion_point(field_add_mutable:CCSUsrMsg_KeyHintText.hints)
  return hints_.Add();
}
inline void CCSUsrMsg_KeyHintText::add_hints(const ::std::string& value) {
  hints_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CCSUsrMsg_KeyHintText.hints)
}
#if LANG_CXX11
inline void CCSUsrMsg_KeyHintText::add_hints(::std::string&& value) {
  hints_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CCSUsrMsg_KeyHintText.hints)
}
#endif
inline void CCSUsrMsg_KeyHintText::add_hints(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  hints_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CCSUsrMsg_KeyHintText.hints)
}
inline void CCSUsrMsg_KeyHintText::add_hints(const char* value, size_t size) {
  hints_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CCSUsrMsg_KeyHintText.hints)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CCSUsrMsg_KeyHintText::hints() const {
  // @@protoc_insertion_point(field_list:CCSUsrMsg_KeyHintText.hints)
  return hints_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CCSUsrMsg_KeyHintText::mutable_hints() {
  // @@protoc_insertion_point(field_mutable_list:CCSUsrMsg_KeyHintText.hints)
  return &hints_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate

// optional int32 entity_idx = 1;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_entity_idx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_has_entity_idx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_has_entity_idx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_entity_idx() {
  entity_idx_ = 0;
  clear_has_entity_idx();
}
inline ::google::protobuf::int32 CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::entity_idx() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.entity_idx)
  return entity_idx_;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_entity_idx(::google::protobuf::int32 value) {
  set_has_entity_idx();
  entity_idx_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.entity_idx)
}

// optional int32 class_id = 2;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_class_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_has_class_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_has_class_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_class_id() {
  class_id_ = 0;
  clear_has_class_id();
}
inline ::google::protobuf::int32 CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::class_id() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.class_id)
  return class_id_;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_class_id(::google::protobuf::int32 value) {
  set_has_class_id();
  class_id_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.class_id)
}

// optional int32 origin_x = 3;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_origin_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_has_origin_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_has_origin_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_origin_x() {
  origin_x_ = 0;
  clear_has_origin_x();
}
inline ::google::protobuf::int32 CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::origin_x() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.origin_x)
  return origin_x_;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_origin_x(::google::protobuf::int32 value) {
  set_has_origin_x();
  origin_x_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.origin_x)
}

// optional int32 origin_y = 4;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_origin_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_has_origin_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_has_origin_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_origin_y() {
  origin_y_ = 0;
  clear_has_origin_y();
}
inline ::google::protobuf::int32 CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::origin_y() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.origin_y)
  return origin_y_;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_origin_y(::google::protobuf::int32 value) {
  set_has_origin_y();
  origin_y_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.origin_y)
}

// optional int32 origin_z = 5;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_origin_z() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_has_origin_z() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_has_origin_z() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_origin_z() {
  origin_z_ = 0;
  clear_has_origin_z();
}
inline ::google::protobuf::int32 CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::origin_z() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.origin_z)
  return origin_z_;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_origin_z(::google::protobuf::int32 value) {
  set_has_origin_z();
  origin_z_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.origin_z)
}

// optional int32 angle_y = 6;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_angle_y() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_has_angle_y() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_has_angle_y() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_angle_y() {
  angle_y_ = 0;
  clear_has_angle_y();
}
inline ::google::protobuf::int32 CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::angle_y() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.angle_y)
  return angle_y_;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_angle_y(::google::protobuf::int32 value) {
  set_has_angle_y();
  angle_y_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.angle_y)
}

// optional bool defuser = 7;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_defuser() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_has_defuser() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_has_defuser() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_defuser() {
  defuser_ = false;
  clear_has_defuser();
}
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::defuser() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.defuser)
  return defuser_;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_defuser(bool value) {
  set_has_defuser();
  defuser_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.defuser)
}

// optional bool player_has_defuser = 8;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_player_has_defuser() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_has_player_has_defuser() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_has_player_has_defuser() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_player_has_defuser() {
  player_has_defuser_ = false;
  clear_has_player_has_defuser();
}
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::player_has_defuser() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.player_has_defuser)
  return player_has_defuser_;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_player_has_defuser(bool value) {
  set_has_player_has_defuser();
  player_has_defuser_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.player_has_defuser)
}

// optional bool player_has_c4 = 9;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_player_has_c4() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_has_player_has_c4() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_has_player_has_c4() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_player_has_c4() {
  player_has_c4_ = false;
  clear_has_player_has_c4();
}
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::player_has_c4() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.player_has_c4)
  return player_has_c4_;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_player_has_c4(bool value) {
  set_has_player_has_c4();
  player_has_c4_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate.player_has_c4)
}

// -------------------------------------------------------------------

// CCSUsrMsg_ProcessSpottedEntityUpdate

// optional bool new_update = 1;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate::has_new_update() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate::set_has_new_update() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate::clear_has_new_update() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate::clear_new_update() {
  new_update_ = false;
  clear_has_new_update();
}
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate::new_update() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ProcessSpottedEntityUpdate.new_update)
  return new_update_;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate::set_new_update(bool value) {
  set_has_new_update();
  new_update_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ProcessSpottedEntityUpdate.new_update)
}

// repeated .CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate entity_updates = 2;
inline int CCSUsrMsg_ProcessSpottedEntityUpdate::entity_updates_size() const {
  return entity_updates_.size();
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate::clear_entity_updates() {
  entity_updates_.Clear();
}
inline ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* CCSUsrMsg_ProcessSpottedEntityUpdate::mutable_entity_updates(int index) {
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_ProcessSpottedEntityUpdate.entity_updates)
  return entity_updates_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate >*
CCSUsrMsg_ProcessSpottedEntityUpdate::mutable_entity_updates() {
  // @@protoc_insertion_point(field_mutable_list:CCSUsrMsg_ProcessSpottedEntityUpdate.entity_updates)
  return &entity_updates_;
}
inline const ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& CCSUsrMsg_ProcessSpottedEntityUpdate::entity_updates(int index) const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ProcessSpottedEntityUpdate.entity_updates)
  return entity_updates_.Get(index);
}
inline ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* CCSUsrMsg_ProcessSpottedEntityUpdate::add_entity_updates() {
  // @@protoc_insertion_point(field_add:CCSUsrMsg_ProcessSpottedEntityUpdate.entity_updates)
  return entity_updates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate >&
CCSUsrMsg_ProcessSpottedEntityUpdate::entity_updates() const {
  // @@protoc_insertion_point(field_list:CCSUsrMsg_ProcessSpottedEntityUpdate.entity_updates)
  return entity_updates_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_ReloadEffect

// optional int32 entidx = 1;
inline bool CCSUsrMsg_ReloadEffect::has_entidx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_ReloadEffect::set_has_entidx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_ReloadEffect::clear_has_entidx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_ReloadEffect::clear_entidx() {
  entidx_ = 0;
  clear_has_entidx();
}
inline ::google::protobuf::int32 CCSUsrMsg_ReloadEffect::entidx() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ReloadEffect.entidx)
  return entidx_;
}
inline void CCSUsrMsg_ReloadEffect::set_entidx(::google::protobuf::int32 value) {
  set_has_entidx();
  entidx_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ReloadEffect.entidx)
}

// optional int32 actanim = 2;
inline bool CCSUsrMsg_ReloadEffect::has_actanim() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_ReloadEffect::set_has_actanim() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_ReloadEffect::clear_has_actanim() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_ReloadEffect::clear_actanim() {
  actanim_ = 0;
  clear_has_actanim();
}
inline ::google::protobuf::int32 CCSUsrMsg_ReloadEffect::actanim() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ReloadEffect.actanim)
  return actanim_;
}
inline void CCSUsrMsg_ReloadEffect::set_actanim(::google::protobuf::int32 value) {
  set_has_actanim();
  actanim_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ReloadEffect.actanim)
}

// -------------------------------------------------------------------

// CCSUsrMsg_AdjustMoney

// optional int32 amount = 1;
inline bool CCSUsrMsg_AdjustMoney::has_amount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_AdjustMoney::set_has_amount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_AdjustMoney::clear_has_amount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_AdjustMoney::clear_amount() {
  amount_ = 0;
  clear_has_amount();
}
inline ::google::protobuf::int32 CCSUsrMsg_AdjustMoney::amount() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_AdjustMoney.amount)
  return amount_;
}
inline void CCSUsrMsg_AdjustMoney::set_amount(::google::protobuf::int32 value) {
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_AdjustMoney.amount)
}

// -------------------------------------------------------------------

// CCSUsrMsg_KillCam

// optional int32 obs_mode = 1;
inline bool CCSUsrMsg_KillCam::has_obs_mode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_KillCam::set_has_obs_mode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_KillCam::clear_has_obs_mode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_KillCam::clear_obs_mode() {
  obs_mode_ = 0;
  clear_has_obs_mode();
}
inline ::google::protobuf::int32 CCSUsrMsg_KillCam::obs_mode() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_KillCam.obs_mode)
  return obs_mode_;
}
inline void CCSUsrMsg_KillCam::set_obs_mode(::google::protobuf::int32 value) {
  set_has_obs_mode();
  obs_mode_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_KillCam.obs_mode)
}

// optional int32 first_target = 2;
inline bool CCSUsrMsg_KillCam::has_first_target() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_KillCam::set_has_first_target() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_KillCam::clear_has_first_target() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_KillCam::clear_first_target() {
  first_target_ = 0;
  clear_has_first_target();
}
inline ::google::protobuf::int32 CCSUsrMsg_KillCam::first_target() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_KillCam.first_target)
  return first_target_;
}
inline void CCSUsrMsg_KillCam::set_first_target(::google::protobuf::int32 value) {
  set_has_first_target();
  first_target_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_KillCam.first_target)
}

// optional int32 second_target = 3;
inline bool CCSUsrMsg_KillCam::has_second_target() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_KillCam::set_has_second_target() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_KillCam::clear_has_second_target() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_KillCam::clear_second_target() {
  second_target_ = 0;
  clear_has_second_target();
}
inline ::google::protobuf::int32 CCSUsrMsg_KillCam::second_target() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_KillCam.second_target)
  return second_target_;
}
inline void CCSUsrMsg_KillCam::set_second_target(::google::protobuf::int32 value) {
  set_has_second_target();
  second_target_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_KillCam.second_target)
}

// -------------------------------------------------------------------

// CCSUsrMsg_DesiredTimescale

// optional float desired_timescale = 1;
inline bool CCSUsrMsg_DesiredTimescale::has_desired_timescale() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_DesiredTimescale::set_has_desired_timescale() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_DesiredTimescale::clear_has_desired_timescale() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_DesiredTimescale::clear_desired_timescale() {
  desired_timescale_ = 0;
  clear_has_desired_timescale();
}
inline float CCSUsrMsg_DesiredTimescale::desired_timescale() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_DesiredTimescale.desired_timescale)
  return desired_timescale_;
}
inline void CCSUsrMsg_DesiredTimescale::set_desired_timescale(float value) {
  set_has_desired_timescale();
  desired_timescale_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_DesiredTimescale.desired_timescale)
}

// optional float duration_realtime_sec = 2;
inline bool CCSUsrMsg_DesiredTimescale::has_duration_realtime_sec() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_DesiredTimescale::set_has_duration_realtime_sec() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_DesiredTimescale::clear_has_duration_realtime_sec() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_DesiredTimescale::clear_duration_realtime_sec() {
  duration_realtime_sec_ = 0;
  clear_has_duration_realtime_sec();
}
inline float CCSUsrMsg_DesiredTimescale::duration_realtime_sec() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_DesiredTimescale.duration_realtime_sec)
  return duration_realtime_sec_;
}
inline void CCSUsrMsg_DesiredTimescale::set_duration_realtime_sec(float value) {
  set_has_duration_realtime_sec();
  duration_realtime_sec_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_DesiredTimescale.duration_realtime_sec)
}

// optional int32 interpolator_type = 3;
inline bool CCSUsrMsg_DesiredTimescale::has_interpolator_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_DesiredTimescale::set_has_interpolator_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_DesiredTimescale::clear_has_interpolator_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_DesiredTimescale::clear_interpolator_type() {
  interpolator_type_ = 0;
  clear_has_interpolator_type();
}
inline ::google::protobuf::int32 CCSUsrMsg_DesiredTimescale::interpolator_type() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_DesiredTimescale.interpolator_type)
  return interpolator_type_;
}
inline void CCSUsrMsg_DesiredTimescale::set_interpolator_type(::google::protobuf::int32 value) {
  set_has_interpolator_type();
  interpolator_type_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_DesiredTimescale.interpolator_type)
}

// optional float start_blend_time = 4;
inline bool CCSUsrMsg_DesiredTimescale::has_start_blend_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCSUsrMsg_DesiredTimescale::set_has_start_blend_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCSUsrMsg_DesiredTimescale::clear_has_start_blend_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCSUsrMsg_DesiredTimescale::clear_start_blend_time() {
  start_blend_time_ = 0;
  clear_has_start_blend_time();
}
inline float CCSUsrMsg_DesiredTimescale::start_blend_time() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_DesiredTimescale.start_blend_time)
  return start_blend_time_;
}
inline void CCSUsrMsg_DesiredTimescale::set_start_blend_time(float value) {
  set_has_start_blend_time();
  start_blend_time_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_DesiredTimescale.start_blend_time)
}

// -------------------------------------------------------------------

// CCSUsrMsg_CurrentTimescale

// optional float cur_timescale = 1;
inline bool CCSUsrMsg_CurrentTimescale::has_cur_timescale() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_CurrentTimescale::set_has_cur_timescale() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_CurrentTimescale::clear_has_cur_timescale() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_CurrentTimescale::clear_cur_timescale() {
  cur_timescale_ = 0;
  clear_has_cur_timescale();
}
inline float CCSUsrMsg_CurrentTimescale::cur_timescale() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_CurrentTimescale.cur_timescale)
  return cur_timescale_;
}
inline void CCSUsrMsg_CurrentTimescale::set_cur_timescale(float value) {
  set_has_cur_timescale();
  cur_timescale_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_CurrentTimescale.cur_timescale)
}

// -------------------------------------------------------------------

// CCSUsrMsg_AchievementEvent

// optional int32 achievement = 1;
inline bool CCSUsrMsg_AchievementEvent::has_achievement() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_AchievementEvent::set_has_achievement() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_AchievementEvent::clear_has_achievement() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_AchievementEvent::clear_achievement() {
  achievement_ = 0;
  clear_has_achievement();
}
inline ::google::protobuf::int32 CCSUsrMsg_AchievementEvent::achievement() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_AchievementEvent.achievement)
  return achievement_;
}
inline void CCSUsrMsg_AchievementEvent::set_achievement(::google::protobuf::int32 value) {
  set_has_achievement();
  achievement_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_AchievementEvent.achievement)
}

// optional int32 count = 2;
inline bool CCSUsrMsg_AchievementEvent::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_AchievementEvent::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_AchievementEvent::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_AchievementEvent::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 CCSUsrMsg_AchievementEvent::count() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_AchievementEvent.count)
  return count_;
}
inline void CCSUsrMsg_AchievementEvent::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_AchievementEvent.count)
}

// optional int32 user_id = 3;
inline bool CCSUsrMsg_AchievementEvent::has_user_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_AchievementEvent::set_has_user_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_AchievementEvent::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_AchievementEvent::clear_user_id() {
  user_id_ = 0;
  clear_has_user_id();
}
inline ::google::protobuf::int32 CCSUsrMsg_AchievementEvent::user_id() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_AchievementEvent.user_id)
  return user_id_;
}
inline void CCSUsrMsg_AchievementEvent::set_user_id(::google::protobuf::int32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_AchievementEvent.user_id)
}

// -------------------------------------------------------------------

// CCSUsrMsg_MatchEndConditions

// optional int32 fraglimit = 1;
inline bool CCSUsrMsg_MatchEndConditions::has_fraglimit() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_MatchEndConditions::set_has_fraglimit() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_MatchEndConditions::clear_has_fraglimit() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_MatchEndConditions::clear_fraglimit() {
  fraglimit_ = 0;
  clear_has_fraglimit();
}
inline ::google::protobuf::int32 CCSUsrMsg_MatchEndConditions::fraglimit() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_MatchEndConditions.fraglimit)
  return fraglimit_;
}
inline void CCSUsrMsg_MatchEndConditions::set_fraglimit(::google::protobuf::int32 value) {
  set_has_fraglimit();
  fraglimit_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_MatchEndConditions.fraglimit)
}

// optional int32 mp_maxrounds = 2;
inline bool CCSUsrMsg_MatchEndConditions::has_mp_maxrounds() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_MatchEndConditions::set_has_mp_maxrounds() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_MatchEndConditions::clear_has_mp_maxrounds() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_MatchEndConditions::clear_mp_maxrounds() {
  mp_maxrounds_ = 0;
  clear_has_mp_maxrounds();
}
inline ::google::protobuf::int32 CCSUsrMsg_MatchEndConditions::mp_maxrounds() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_MatchEndConditions.mp_maxrounds)
  return mp_maxrounds_;
}
inline void CCSUsrMsg_MatchEndConditions::set_mp_maxrounds(::google::protobuf::int32 value) {
  set_has_mp_maxrounds();
  mp_maxrounds_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_MatchEndConditions.mp_maxrounds)
}

// optional int32 mp_winlimit = 3;
inline bool CCSUsrMsg_MatchEndConditions::has_mp_winlimit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_MatchEndConditions::set_has_mp_winlimit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_MatchEndConditions::clear_has_mp_winlimit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_MatchEndConditions::clear_mp_winlimit() {
  mp_winlimit_ = 0;
  clear_has_mp_winlimit();
}
inline ::google::protobuf::int32 CCSUsrMsg_MatchEndConditions::mp_winlimit() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_MatchEndConditions.mp_winlimit)
  return mp_winlimit_;
}
inline void CCSUsrMsg_MatchEndConditions::set_mp_winlimit(::google::protobuf::int32 value) {
  set_has_mp_winlimit();
  mp_winlimit_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_MatchEndConditions.mp_winlimit)
}

// optional int32 mp_timelimit = 4;
inline bool CCSUsrMsg_MatchEndConditions::has_mp_timelimit() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCSUsrMsg_MatchEndConditions::set_has_mp_timelimit() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCSUsrMsg_MatchEndConditions::clear_has_mp_timelimit() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCSUsrMsg_MatchEndConditions::clear_mp_timelimit() {
  mp_timelimit_ = 0;
  clear_has_mp_timelimit();
}
inline ::google::protobuf::int32 CCSUsrMsg_MatchEndConditions::mp_timelimit() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_MatchEndConditions.mp_timelimit)
  return mp_timelimit_;
}
inline void CCSUsrMsg_MatchEndConditions::set_mp_timelimit(::google::protobuf::int32 value) {
  set_has_mp_timelimit();
  mp_timelimit_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_MatchEndConditions.mp_timelimit)
}

// -------------------------------------------------------------------

// CCSUsrMsg_DisplayInventory

// optional bool display = 1;
inline bool CCSUsrMsg_DisplayInventory::has_display() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_DisplayInventory::set_has_display() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_DisplayInventory::clear_has_display() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_DisplayInventory::clear_display() {
  display_ = false;
  clear_has_display();
}
inline bool CCSUsrMsg_DisplayInventory::display() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_DisplayInventory.display)
  return display_;
}
inline void CCSUsrMsg_DisplayInventory::set_display(bool value) {
  set_has_display();
  display_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_DisplayInventory.display)
}

// optional int32 user_id = 2;
inline bool CCSUsrMsg_DisplayInventory::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_DisplayInventory::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_DisplayInventory::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_DisplayInventory::clear_user_id() {
  user_id_ = 0;
  clear_has_user_id();
}
inline ::google::protobuf::int32 CCSUsrMsg_DisplayInventory::user_id() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_DisplayInventory.user_id)
  return user_id_;
}
inline void CCSUsrMsg_DisplayInventory::set_user_id(::google::protobuf::int32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_DisplayInventory.user_id)
}

// -------------------------------------------------------------------

// CCSUsrMsg_CallVoteFailed

// optional int32 reason = 1;
inline bool CCSUsrMsg_CallVoteFailed::has_reason() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_CallVoteFailed::set_has_reason() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_CallVoteFailed::clear_has_reason() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_CallVoteFailed::clear_reason() {
  reason_ = 0;
  clear_has_reason();
}
inline ::google::protobuf::int32 CCSUsrMsg_CallVoteFailed::reason() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_CallVoteFailed.reason)
  return reason_;
}
inline void CCSUsrMsg_CallVoteFailed::set_reason(::google::protobuf::int32 value) {
  set_has_reason();
  reason_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_CallVoteFailed.reason)
}

// optional int32 time = 2;
inline bool CCSUsrMsg_CallVoteFailed::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_CallVoteFailed::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_CallVoteFailed::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_CallVoteFailed::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 CCSUsrMsg_CallVoteFailed::time() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_CallVoteFailed.time)
  return time_;
}
inline void CCSUsrMsg_CallVoteFailed::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_CallVoteFailed.time)
}

// -------------------------------------------------------------------

// CCSUsrMsg_VoteStart

// optional int32 team = 1;
inline bool CCSUsrMsg_VoteStart::has_team() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCSUsrMsg_VoteStart::set_has_team() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCSUsrMsg_VoteStart::clear_has_team() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCSUsrMsg_VoteStart::clear_team() {
  team_ = 0;
  clear_has_team();
}
inline ::google::protobuf::int32 CCSUsrMsg_VoteStart::team() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoteStart.team)
  return team_;
}
inline void CCSUsrMsg_VoteStart::set_team(::google::protobuf::int32 value) {
  set_has_team();
  team_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoteStart.team)
}

// optional int32 ent_idx = 2;
inline bool CCSUsrMsg_VoteStart::has_ent_idx() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CCSUsrMsg_VoteStart::set_has_ent_idx() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CCSUsrMsg_VoteStart::clear_has_ent_idx() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CCSUsrMsg_VoteStart::clear_ent_idx() {
  ent_idx_ = 0;
  clear_has_ent_idx();
}
inline ::google::protobuf::int32 CCSUsrMsg_VoteStart::ent_idx() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoteStart.ent_idx)
  return ent_idx_;
}
inline void CCSUsrMsg_VoteStart::set_ent_idx(::google::protobuf::int32 value) {
  set_has_ent_idx();
  ent_idx_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoteStart.ent_idx)
}

// optional int32 vote_type = 3;
inline bool CCSUsrMsg_VoteStart::has_vote_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CCSUsrMsg_VoteStart::set_has_vote_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CCSUsrMsg_VoteStart::clear_has_vote_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CCSUsrMsg_VoteStart::clear_vote_type() {
  vote_type_ = 0;
  clear_has_vote_type();
}
inline ::google::protobuf::int32 CCSUsrMsg_VoteStart::vote_type() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoteStart.vote_type)
  return vote_type_;
}
inline void CCSUsrMsg_VoteStart::set_vote_type(::google::protobuf::int32 value) {
  set_has_vote_type();
  vote_type_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoteStart.vote_type)
}

// optional string disp_str = 4;
inline bool CCSUsrMsg_VoteStart::has_disp_str() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_VoteStart::set_has_disp_str() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_VoteStart::clear_has_disp_str() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_VoteStart::clear_disp_str() {
  disp_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_disp_str();
}
inline const ::std::string& CCSUsrMsg_VoteStart::disp_str() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoteStart.disp_str)
  return disp_str_.GetNoArena();
}
inline void CCSUsrMsg_VoteStart::set_disp_str(const ::std::string& value) {
  set_has_disp_str();
  disp_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoteStart.disp_str)
}
#if LANG_CXX11
inline void CCSUsrMsg_VoteStart::set_disp_str(::std::string&& value) {
  set_has_disp_str();
  disp_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_VoteStart.disp_str)
}
#endif
inline void CCSUsrMsg_VoteStart::set_disp_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_disp_str();
  disp_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_VoteStart.disp_str)
}
inline void CCSUsrMsg_VoteStart::set_disp_str(const char* value, size_t size) {
  set_has_disp_str();
  disp_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_VoteStart.disp_str)
}
inline ::std::string* CCSUsrMsg_VoteStart::mutable_disp_str() {
  set_has_disp_str();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_VoteStart.disp_str)
  return disp_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCSUsrMsg_VoteStart::release_disp_str() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_VoteStart.disp_str)
  if (!has_disp_str()) {
    return NULL;
  }
  clear_has_disp_str();
  return disp_str_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCSUsrMsg_VoteStart::set_allocated_disp_str(::std::string* disp_str) {
  if (disp_str != NULL) {
    set_has_disp_str();
  } else {
    clear_has_disp_str();
  }
  disp_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), disp_str);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_VoteStart.disp_str)
}

// optional string details_str = 5;
inline bool CCSUsrMsg_VoteStart::has_details_str() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_VoteStart::set_has_details_str() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_VoteStart::clear_has_details_str() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_VoteStart::clear_details_str() {
  details_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_details_str();
}
inline const ::std::string& CCSUsrMsg_VoteStart::details_str() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoteStart.details_str)
  return details_str_.GetNoArena();
}
inline void CCSUsrMsg_VoteStart::set_details_str(const ::std::string& value) {
  set_has_details_str();
  details_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoteStart.details_str)
}
#if LANG_CXX11
inline void CCSUsrMsg_VoteStart::set_details_str(::std::string&& value) {
  set_has_details_str();
  details_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_VoteStart.details_str)
}
#endif
inline void CCSUsrMsg_VoteStart::set_details_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_details_str();
  details_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_VoteStart.details_str)
}
inline void CCSUsrMsg_VoteStart::set_details_str(const char* value, size_t size) {
  set_has_details_str();
  details_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_VoteStart.details_str)
}
inline ::std::string* CCSUsrMsg_VoteStart::mutable_details_str() {
  set_has_details_str();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_VoteStart.details_str)
  return details_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCSUsrMsg_VoteStart::release_details_str() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_VoteStart.details_str)
  if (!has_details_str()) {
    return NULL;
  }
  clear_has_details_str();
  return details_str_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCSUsrMsg_VoteStart::set_allocated_details_str(::std::string* details_str) {
  if (details_str != NULL) {
    set_has_details_str();
  } else {
    clear_has_details_str();
  }
  details_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), details_str);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_VoteStart.details_str)
}

// optional string other_team_str = 6;
inline bool CCSUsrMsg_VoteStart::has_other_team_str() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_VoteStart::set_has_other_team_str() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_VoteStart::clear_has_other_team_str() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_VoteStart::clear_other_team_str() {
  other_team_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_other_team_str();
}
inline const ::std::string& CCSUsrMsg_VoteStart::other_team_str() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoteStart.other_team_str)
  return other_team_str_.GetNoArena();
}
inline void CCSUsrMsg_VoteStart::set_other_team_str(const ::std::string& value) {
  set_has_other_team_str();
  other_team_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoteStart.other_team_str)
}
#if LANG_CXX11
inline void CCSUsrMsg_VoteStart::set_other_team_str(::std::string&& value) {
  set_has_other_team_str();
  other_team_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_VoteStart.other_team_str)
}
#endif
inline void CCSUsrMsg_VoteStart::set_other_team_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_other_team_str();
  other_team_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_VoteStart.other_team_str)
}
inline void CCSUsrMsg_VoteStart::set_other_team_str(const char* value, size_t size) {
  set_has_other_team_str();
  other_team_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_VoteStart.other_team_str)
}
inline ::std::string* CCSUsrMsg_VoteStart::mutable_other_team_str() {
  set_has_other_team_str();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_VoteStart.other_team_str)
  return other_team_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCSUsrMsg_VoteStart::release_other_team_str() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_VoteStart.other_team_str)
  if (!has_other_team_str()) {
    return NULL;
  }
  clear_has_other_team_str();
  return other_team_str_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCSUsrMsg_VoteStart::set_allocated_other_team_str(::std::string* other_team_str) {
  if (other_team_str != NULL) {
    set_has_other_team_str();
  } else {
    clear_has_other_team_str();
  }
  other_team_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), other_team_str);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_VoteStart.other_team_str)
}

// optional bool is_yes_no_vote = 7;
inline bool CCSUsrMsg_VoteStart::has_is_yes_no_vote() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CCSUsrMsg_VoteStart::set_has_is_yes_no_vote() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CCSUsrMsg_VoteStart::clear_has_is_yes_no_vote() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CCSUsrMsg_VoteStart::clear_is_yes_no_vote() {
  is_yes_no_vote_ = false;
  clear_has_is_yes_no_vote();
}
inline bool CCSUsrMsg_VoteStart::is_yes_no_vote() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoteStart.is_yes_no_vote)
  return is_yes_no_vote_;
}
inline void CCSUsrMsg_VoteStart::set_is_yes_no_vote(bool value) {
  set_has_is_yes_no_vote();
  is_yes_no_vote_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoteStart.is_yes_no_vote)
}

// -------------------------------------------------------------------

// CCSUsrMsg_VotePass

// optional int32 team = 1;
inline bool CCSUsrMsg_VotePass::has_team() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_VotePass::set_has_team() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_VotePass::clear_has_team() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_VotePass::clear_team() {
  team_ = 0;
  clear_has_team();
}
inline ::google::protobuf::int32 CCSUsrMsg_VotePass::team() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VotePass.team)
  return team_;
}
inline void CCSUsrMsg_VotePass::set_team(::google::protobuf::int32 value) {
  set_has_team();
  team_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VotePass.team)
}

// optional int32 vote_type = 2;
inline bool CCSUsrMsg_VotePass::has_vote_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCSUsrMsg_VotePass::set_has_vote_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCSUsrMsg_VotePass::clear_has_vote_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCSUsrMsg_VotePass::clear_vote_type() {
  vote_type_ = 0;
  clear_has_vote_type();
}
inline ::google::protobuf::int32 CCSUsrMsg_VotePass::vote_type() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VotePass.vote_type)
  return vote_type_;
}
inline void CCSUsrMsg_VotePass::set_vote_type(::google::protobuf::int32 value) {
  set_has_vote_type();
  vote_type_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VotePass.vote_type)
}

// optional string disp_str = 3;
inline bool CCSUsrMsg_VotePass::has_disp_str() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_VotePass::set_has_disp_str() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_VotePass::clear_has_disp_str() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_VotePass::clear_disp_str() {
  disp_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_disp_str();
}
inline const ::std::string& CCSUsrMsg_VotePass::disp_str() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VotePass.disp_str)
  return disp_str_.GetNoArena();
}
inline void CCSUsrMsg_VotePass::set_disp_str(const ::std::string& value) {
  set_has_disp_str();
  disp_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VotePass.disp_str)
}
#if LANG_CXX11
inline void CCSUsrMsg_VotePass::set_disp_str(::std::string&& value) {
  set_has_disp_str();
  disp_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_VotePass.disp_str)
}
#endif
inline void CCSUsrMsg_VotePass::set_disp_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_disp_str();
  disp_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_VotePass.disp_str)
}
inline void CCSUsrMsg_VotePass::set_disp_str(const char* value, size_t size) {
  set_has_disp_str();
  disp_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_VotePass.disp_str)
}
inline ::std::string* CCSUsrMsg_VotePass::mutable_disp_str() {
  set_has_disp_str();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_VotePass.disp_str)
  return disp_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCSUsrMsg_VotePass::release_disp_str() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_VotePass.disp_str)
  if (!has_disp_str()) {
    return NULL;
  }
  clear_has_disp_str();
  return disp_str_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCSUsrMsg_VotePass::set_allocated_disp_str(::std::string* disp_str) {
  if (disp_str != NULL) {
    set_has_disp_str();
  } else {
    clear_has_disp_str();
  }
  disp_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), disp_str);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_VotePass.disp_str)
}

// optional string details_str = 4;
inline bool CCSUsrMsg_VotePass::has_details_str() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_VotePass::set_has_details_str() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_VotePass::clear_has_details_str() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_VotePass::clear_details_str() {
  details_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_details_str();
}
inline const ::std::string& CCSUsrMsg_VotePass::details_str() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VotePass.details_str)
  return details_str_.GetNoArena();
}
inline void CCSUsrMsg_VotePass::set_details_str(const ::std::string& value) {
  set_has_details_str();
  details_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VotePass.details_str)
}
#if LANG_CXX11
inline void CCSUsrMsg_VotePass::set_details_str(::std::string&& value) {
  set_has_details_str();
  details_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_VotePass.details_str)
}
#endif
inline void CCSUsrMsg_VotePass::set_details_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_details_str();
  details_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_VotePass.details_str)
}
inline void CCSUsrMsg_VotePass::set_details_str(const char* value, size_t size) {
  set_has_details_str();
  details_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_VotePass.details_str)
}
inline ::std::string* CCSUsrMsg_VotePass::mutable_details_str() {
  set_has_details_str();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_VotePass.details_str)
  return details_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCSUsrMsg_VotePass::release_details_str() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_VotePass.details_str)
  if (!has_details_str()) {
    return NULL;
  }
  clear_has_details_str();
  return details_str_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCSUsrMsg_VotePass::set_allocated_details_str(::std::string* details_str) {
  if (details_str != NULL) {
    set_has_details_str();
  } else {
    clear_has_details_str();
  }
  details_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), details_str);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_VotePass.details_str)
}

// -------------------------------------------------------------------

// CCSUsrMsg_VoteFailed

// optional int32 team = 1;
inline bool CCSUsrMsg_VoteFailed::has_team() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_VoteFailed::set_has_team() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_VoteFailed::clear_has_team() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_VoteFailed::clear_team() {
  team_ = 0;
  clear_has_team();
}
inline ::google::protobuf::int32 CCSUsrMsg_VoteFailed::team() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoteFailed.team)
  return team_;
}
inline void CCSUsrMsg_VoteFailed::set_team(::google::protobuf::int32 value) {
  set_has_team();
  team_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoteFailed.team)
}

// optional int32 reason = 2;
inline bool CCSUsrMsg_VoteFailed::has_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_VoteFailed::set_has_reason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_VoteFailed::clear_has_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_VoteFailed::clear_reason() {
  reason_ = 0;
  clear_has_reason();
}
inline ::google::protobuf::int32 CCSUsrMsg_VoteFailed::reason() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoteFailed.reason)
  return reason_;
}
inline void CCSUsrMsg_VoteFailed::set_reason(::google::protobuf::int32 value) {
  set_has_reason();
  reason_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoteFailed.reason)
}

// -------------------------------------------------------------------

// CCSUsrMsg_VoteSetup

// repeated string potential_issues = 1;
inline int CCSUsrMsg_VoteSetup::potential_issues_size() const {
  return potential_issues_.size();
}
inline void CCSUsrMsg_VoteSetup::clear_potential_issues() {
  potential_issues_.Clear();
}
inline const ::std::string& CCSUsrMsg_VoteSetup::potential_issues(int index) const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_VoteSetup.potential_issues)
  return potential_issues_.Get(index);
}
inline ::std::string* CCSUsrMsg_VoteSetup::mutable_potential_issues(int index) {
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_VoteSetup.potential_issues)
  return potential_issues_.Mutable(index);
}
inline void CCSUsrMsg_VoteSetup::set_potential_issues(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoteSetup.potential_issues)
  potential_issues_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CCSUsrMsg_VoteSetup::set_potential_issues(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:CCSUsrMsg_VoteSetup.potential_issues)
  potential_issues_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CCSUsrMsg_VoteSetup::set_potential_issues(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  potential_issues_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_VoteSetup.potential_issues)
}
inline void CCSUsrMsg_VoteSetup::set_potential_issues(int index, const char* value, size_t size) {
  potential_issues_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_VoteSetup.potential_issues)
}
inline ::std::string* CCSUsrMsg_VoteSetup::add_potential_issues() {
  // @@protoc_insertion_point(field_add_mutable:CCSUsrMsg_VoteSetup.potential_issues)
  return potential_issues_.Add();
}
inline void CCSUsrMsg_VoteSetup::add_potential_issues(const ::std::string& value) {
  potential_issues_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CCSUsrMsg_VoteSetup.potential_issues)
}
#if LANG_CXX11
inline void CCSUsrMsg_VoteSetup::add_potential_issues(::std::string&& value) {
  potential_issues_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CCSUsrMsg_VoteSetup.potential_issues)
}
#endif
inline void CCSUsrMsg_VoteSetup::add_potential_issues(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  potential_issues_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CCSUsrMsg_VoteSetup.potential_issues)
}
inline void CCSUsrMsg_VoteSetup::add_potential_issues(const char* value, size_t size) {
  potential_issues_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CCSUsrMsg_VoteSetup.potential_issues)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CCSUsrMsg_VoteSetup::potential_issues() const {
  // @@protoc_insertion_point(field_list:CCSUsrMsg_VoteSetup.potential_issues)
  return potential_issues_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CCSUsrMsg_VoteSetup::mutable_potential_issues() {
  // @@protoc_insertion_point(field_mutable_list:CCSUsrMsg_VoteSetup.potential_issues)
  return &potential_issues_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_SendLastKillerDamageToClient

// optional int32 num_hits_given = 1;
inline bool CCSUsrMsg_SendLastKillerDamageToClient::has_num_hits_given() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::set_has_num_hits_given() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::clear_has_num_hits_given() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::clear_num_hits_given() {
  num_hits_given_ = 0;
  clear_has_num_hits_given();
}
inline ::google::protobuf::int32 CCSUsrMsg_SendLastKillerDamageToClient::num_hits_given() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SendLastKillerDamageToClient.num_hits_given)
  return num_hits_given_;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::set_num_hits_given(::google::protobuf::int32 value) {
  set_has_num_hits_given();
  num_hits_given_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SendLastKillerDamageToClient.num_hits_given)
}

// optional int32 damage_given = 2;
inline bool CCSUsrMsg_SendLastKillerDamageToClient::has_damage_given() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::set_has_damage_given() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::clear_has_damage_given() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::clear_damage_given() {
  damage_given_ = 0;
  clear_has_damage_given();
}
inline ::google::protobuf::int32 CCSUsrMsg_SendLastKillerDamageToClient::damage_given() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SendLastKillerDamageToClient.damage_given)
  return damage_given_;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::set_damage_given(::google::protobuf::int32 value) {
  set_has_damage_given();
  damage_given_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SendLastKillerDamageToClient.damage_given)
}

// optional int32 num_hits_taken = 3;
inline bool CCSUsrMsg_SendLastKillerDamageToClient::has_num_hits_taken() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::set_has_num_hits_taken() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::clear_has_num_hits_taken() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::clear_num_hits_taken() {
  num_hits_taken_ = 0;
  clear_has_num_hits_taken();
}
inline ::google::protobuf::int32 CCSUsrMsg_SendLastKillerDamageToClient::num_hits_taken() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SendLastKillerDamageToClient.num_hits_taken)
  return num_hits_taken_;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::set_num_hits_taken(::google::protobuf::int32 value) {
  set_has_num_hits_taken();
  num_hits_taken_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SendLastKillerDamageToClient.num_hits_taken)
}

// optional int32 damage_taken = 4;
inline bool CCSUsrMsg_SendLastKillerDamageToClient::has_damage_taken() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::set_has_damage_taken() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::clear_has_damage_taken() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::clear_damage_taken() {
  damage_taken_ = 0;
  clear_has_damage_taken();
}
inline ::google::protobuf::int32 CCSUsrMsg_SendLastKillerDamageToClient::damage_taken() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_SendLastKillerDamageToClient.damage_taken)
  return damage_taken_;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::set_damage_taken(::google::protobuf::int32 value) {
  set_has_damage_taken();
  damage_taken_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_SendLastKillerDamageToClient.damage_taken)
}

// -------------------------------------------------------------------

// CCSUsrMsg_ItemPickup

// optional string item = 1;
inline bool CCSUsrMsg_ItemPickup::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_ItemPickup::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_ItemPickup::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_ItemPickup::clear_item() {
  item_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item();
}
inline const ::std::string& CCSUsrMsg_ItemPickup::item() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ItemPickup.item)
  return item_.GetNoArena();
}
inline void CCSUsrMsg_ItemPickup::set_item(const ::std::string& value) {
  set_has_item();
  item_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ItemPickup.item)
}
#if LANG_CXX11
inline void CCSUsrMsg_ItemPickup::set_item(::std::string&& value) {
  set_has_item();
  item_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_ItemPickup.item)
}
#endif
inline void CCSUsrMsg_ItemPickup::set_item(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_item();
  item_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_ItemPickup.item)
}
inline void CCSUsrMsg_ItemPickup::set_item(const char* value, size_t size) {
  set_has_item();
  item_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_ItemPickup.item)
}
inline ::std::string* CCSUsrMsg_ItemPickup::mutable_item() {
  set_has_item();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_ItemPickup.item)
  return item_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCSUsrMsg_ItemPickup::release_item() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_ItemPickup.item)
  if (!has_item()) {
    return NULL;
  }
  clear_has_item();
  return item_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCSUsrMsg_ItemPickup::set_allocated_item(::std::string* item) {
  if (item != NULL) {
    set_has_item();
  } else {
    clear_has_item();
  }
  item_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_ItemPickup.item)
}

// -------------------------------------------------------------------

// CCSUsrMsg_ShowMenu

// optional int32 bits_valid_slots = 1;
inline bool CCSUsrMsg_ShowMenu::has_bits_valid_slots() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_ShowMenu::set_has_bits_valid_slots() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_ShowMenu::clear_has_bits_valid_slots() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_ShowMenu::clear_bits_valid_slots() {
  bits_valid_slots_ = 0;
  clear_has_bits_valid_slots();
}
inline ::google::protobuf::int32 CCSUsrMsg_ShowMenu::bits_valid_slots() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ShowMenu.bits_valid_slots)
  return bits_valid_slots_;
}
inline void CCSUsrMsg_ShowMenu::set_bits_valid_slots(::google::protobuf::int32 value) {
  set_has_bits_valid_slots();
  bits_valid_slots_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ShowMenu.bits_valid_slots)
}

// optional int32 display_time = 2;
inline bool CCSUsrMsg_ShowMenu::has_display_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_ShowMenu::set_has_display_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_ShowMenu::clear_has_display_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_ShowMenu::clear_display_time() {
  display_time_ = 0;
  clear_has_display_time();
}
inline ::google::protobuf::int32 CCSUsrMsg_ShowMenu::display_time() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ShowMenu.display_time)
  return display_time_;
}
inline void CCSUsrMsg_ShowMenu::set_display_time(::google::protobuf::int32 value) {
  set_has_display_time();
  display_time_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ShowMenu.display_time)
}

// optional string menu_string = 3;
inline bool CCSUsrMsg_ShowMenu::has_menu_string() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_ShowMenu::set_has_menu_string() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_ShowMenu::clear_has_menu_string() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_ShowMenu::clear_menu_string() {
  menu_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_menu_string();
}
inline const ::std::string& CCSUsrMsg_ShowMenu::menu_string() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ShowMenu.menu_string)
  return menu_string_.GetNoArena();
}
inline void CCSUsrMsg_ShowMenu::set_menu_string(const ::std::string& value) {
  set_has_menu_string();
  menu_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ShowMenu.menu_string)
}
#if LANG_CXX11
inline void CCSUsrMsg_ShowMenu::set_menu_string(::std::string&& value) {
  set_has_menu_string();
  menu_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_ShowMenu.menu_string)
}
#endif
inline void CCSUsrMsg_ShowMenu::set_menu_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_menu_string();
  menu_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_ShowMenu.menu_string)
}
inline void CCSUsrMsg_ShowMenu::set_menu_string(const char* value, size_t size) {
  set_has_menu_string();
  menu_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_ShowMenu.menu_string)
}
inline ::std::string* CCSUsrMsg_ShowMenu::mutable_menu_string() {
  set_has_menu_string();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_ShowMenu.menu_string)
  return menu_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCSUsrMsg_ShowMenu::release_menu_string() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_ShowMenu.menu_string)
  if (!has_menu_string()) {
    return NULL;
  }
  clear_has_menu_string();
  return menu_string_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCSUsrMsg_ShowMenu::set_allocated_menu_string(::std::string* menu_string) {
  if (menu_string != NULL) {
    set_has_menu_string();
  } else {
    clear_has_menu_string();
  }
  menu_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), menu_string);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_ShowMenu.menu_string)
}

// -------------------------------------------------------------------

// CCSUsrMsg_BarTime

// optional string time = 1;
inline bool CCSUsrMsg_BarTime::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_BarTime::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_BarTime::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_BarTime::clear_time() {
  time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_time();
}
inline const ::std::string& CCSUsrMsg_BarTime::time() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_BarTime.time)
  return time_.GetNoArena();
}
inline void CCSUsrMsg_BarTime::set_time(const ::std::string& value) {
  set_has_time();
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_BarTime.time)
}
#if LANG_CXX11
inline void CCSUsrMsg_BarTime::set_time(::std::string&& value) {
  set_has_time();
  time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_BarTime.time)
}
#endif
inline void CCSUsrMsg_BarTime::set_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_time();
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_BarTime.time)
}
inline void CCSUsrMsg_BarTime::set_time(const char* value, size_t size) {
  set_has_time();
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_BarTime.time)
}
inline ::std::string* CCSUsrMsg_BarTime::mutable_time() {
  set_has_time();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_BarTime.time)
  return time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCSUsrMsg_BarTime::release_time() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_BarTime.time)
  if (!has_time()) {
    return NULL;
  }
  clear_has_time();
  return time_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCSUsrMsg_BarTime::set_allocated_time(::std::string* time) {
  if (time != NULL) {
    set_has_time();
  } else {
    clear_has_time();
  }
  time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), time);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_BarTime.time)
}

// -------------------------------------------------------------------

// CCSUsrMsg_AmmoDenied

// optional int32 ammoIdx = 1;
inline bool CCSUsrMsg_AmmoDenied::has_ammoidx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_AmmoDenied::set_has_ammoidx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_AmmoDenied::clear_has_ammoidx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_AmmoDenied::clear_ammoidx() {
  ammoidx_ = 0;
  clear_has_ammoidx();
}
inline ::google::protobuf::int32 CCSUsrMsg_AmmoDenied::ammoidx() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_AmmoDenied.ammoIdx)
  return ammoidx_;
}
inline void CCSUsrMsg_AmmoDenied::set_ammoidx(::google::protobuf::int32 value) {
  set_has_ammoidx();
  ammoidx_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_AmmoDenied.ammoIdx)
}

// -------------------------------------------------------------------

// CCSUsrMsg_MarkAchievement

// optional string achievement = 1;
inline bool CCSUsrMsg_MarkAchievement::has_achievement() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_MarkAchievement::set_has_achievement() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_MarkAchievement::clear_has_achievement() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_MarkAchievement::clear_achievement() {
  achievement_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_achievement();
}
inline const ::std::string& CCSUsrMsg_MarkAchievement::achievement() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_MarkAchievement.achievement)
  return achievement_.GetNoArena();
}
inline void CCSUsrMsg_MarkAchievement::set_achievement(const ::std::string& value) {
  set_has_achievement();
  achievement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_MarkAchievement.achievement)
}
#if LANG_CXX11
inline void CCSUsrMsg_MarkAchievement::set_achievement(::std::string&& value) {
  set_has_achievement();
  achievement_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_MarkAchievement.achievement)
}
#endif
inline void CCSUsrMsg_MarkAchievement::set_achievement(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_achievement();
  achievement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_MarkAchievement.achievement)
}
inline void CCSUsrMsg_MarkAchievement::set_achievement(const char* value, size_t size) {
  set_has_achievement();
  achievement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_MarkAchievement.achievement)
}
inline ::std::string* CCSUsrMsg_MarkAchievement::mutable_achievement() {
  set_has_achievement();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_MarkAchievement.achievement)
  return achievement_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCSUsrMsg_MarkAchievement::release_achievement() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_MarkAchievement.achievement)
  if (!has_achievement()) {
    return NULL;
  }
  clear_has_achievement();
  return achievement_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCSUsrMsg_MarkAchievement::set_allocated_achievement(::std::string* achievement) {
  if (achievement != NULL) {
    set_has_achievement();
  } else {
    clear_has_achievement();
  }
  achievement_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), achievement);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_MarkAchievement.achievement)
}

// -------------------------------------------------------------------

// CCSUsrMsg_ItemDrop

// optional int64 itemid = 1;
inline bool CCSUsrMsg_ItemDrop::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_ItemDrop::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_ItemDrop::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_ItemDrop::clear_itemid() {
  itemid_ = GOOGLE_LONGLONG(0);
  clear_has_itemid();
}
inline ::google::protobuf::int64 CCSUsrMsg_ItemDrop::itemid() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ItemDrop.itemid)
  return itemid_;
}
inline void CCSUsrMsg_ItemDrop::set_itemid(::google::protobuf::int64 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ItemDrop.itemid)
}

// optional bool death = 2;
inline bool CCSUsrMsg_ItemDrop::has_death() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_ItemDrop::set_has_death() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_ItemDrop::clear_has_death() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_ItemDrop::clear_death() {
  death_ = false;
  clear_has_death();
}
inline bool CCSUsrMsg_ItemDrop::death() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ItemDrop.death)
  return death_;
}
inline void CCSUsrMsg_ItemDrop::set_death(bool value) {
  set_has_death();
  death_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ItemDrop.death)
}

// -------------------------------------------------------------------

// CCSUsrMsg_GlowPropTurnOff

// optional int32 entidx = 1;
inline bool CCSUsrMsg_GlowPropTurnOff::has_entidx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_GlowPropTurnOff::set_has_entidx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_GlowPropTurnOff::clear_has_entidx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_GlowPropTurnOff::clear_entidx() {
  entidx_ = 0;
  clear_has_entidx();
}
inline ::google::protobuf::int32 CCSUsrMsg_GlowPropTurnOff::entidx() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_GlowPropTurnOff.entidx)
  return entidx_;
}
inline void CCSUsrMsg_GlowPropTurnOff::set_entidx(::google::protobuf::int32 value) {
  set_has_entidx();
  entidx_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_GlowPropTurnOff.entidx)
}

// -------------------------------------------------------------------

// CCSUsrMsg_RoundBackupFilenames

// optional int32 count = 1;
inline bool CCSUsrMsg_RoundBackupFilenames::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_RoundBackupFilenames::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_RoundBackupFilenames::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_RoundBackupFilenames::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 CCSUsrMsg_RoundBackupFilenames::count() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_RoundBackupFilenames.count)
  return count_;
}
inline void CCSUsrMsg_RoundBackupFilenames::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RoundBackupFilenames.count)
}

// optional int32 index = 2;
inline bool CCSUsrMsg_RoundBackupFilenames::has_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCSUsrMsg_RoundBackupFilenames::set_has_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCSUsrMsg_RoundBackupFilenames::clear_has_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCSUsrMsg_RoundBackupFilenames::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 CCSUsrMsg_RoundBackupFilenames::index() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_RoundBackupFilenames.index)
  return index_;
}
inline void CCSUsrMsg_RoundBackupFilenames::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RoundBackupFilenames.index)
}

// optional string filename = 3;
inline bool CCSUsrMsg_RoundBackupFilenames::has_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_RoundBackupFilenames::set_has_filename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_RoundBackupFilenames::clear_has_filename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_RoundBackupFilenames::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_filename();
}
inline const ::std::string& CCSUsrMsg_RoundBackupFilenames::filename() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_RoundBackupFilenames.filename)
  return filename_.GetNoArena();
}
inline void CCSUsrMsg_RoundBackupFilenames::set_filename(const ::std::string& value) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RoundBackupFilenames.filename)
}
#if LANG_CXX11
inline void CCSUsrMsg_RoundBackupFilenames::set_filename(::std::string&& value) {
  set_has_filename();
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_RoundBackupFilenames.filename)
}
#endif
inline void CCSUsrMsg_RoundBackupFilenames::set_filename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_RoundBackupFilenames.filename)
}
inline void CCSUsrMsg_RoundBackupFilenames::set_filename(const char* value, size_t size) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_RoundBackupFilenames.filename)
}
inline ::std::string* CCSUsrMsg_RoundBackupFilenames::mutable_filename() {
  set_has_filename();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_RoundBackupFilenames.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCSUsrMsg_RoundBackupFilenames::release_filename() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_RoundBackupFilenames.filename)
  if (!has_filename()) {
    return NULL;
  }
  clear_has_filename();
  return filename_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCSUsrMsg_RoundBackupFilenames::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    set_has_filename();
  } else {
    clear_has_filename();
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_RoundBackupFilenames.filename)
}

// optional string nicename = 4;
inline bool CCSUsrMsg_RoundBackupFilenames::has_nicename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_RoundBackupFilenames::set_has_nicename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_RoundBackupFilenames::clear_has_nicename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_RoundBackupFilenames::clear_nicename() {
  nicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nicename();
}
inline const ::std::string& CCSUsrMsg_RoundBackupFilenames::nicename() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_RoundBackupFilenames.nicename)
  return nicename_.GetNoArena();
}
inline void CCSUsrMsg_RoundBackupFilenames::set_nicename(const ::std::string& value) {
  set_has_nicename();
  nicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RoundBackupFilenames.nicename)
}
#if LANG_CXX11
inline void CCSUsrMsg_RoundBackupFilenames::set_nicename(::std::string&& value) {
  set_has_nicename();
  nicename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCSUsrMsg_RoundBackupFilenames.nicename)
}
#endif
inline void CCSUsrMsg_RoundBackupFilenames::set_nicename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nicename();
  nicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCSUsrMsg_RoundBackupFilenames.nicename)
}
inline void CCSUsrMsg_RoundBackupFilenames::set_nicename(const char* value, size_t size) {
  set_has_nicename();
  nicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCSUsrMsg_RoundBackupFilenames.nicename)
}
inline ::std::string* CCSUsrMsg_RoundBackupFilenames::mutable_nicename() {
  set_has_nicename();
  // @@protoc_insertion_point(field_mutable:CCSUsrMsg_RoundBackupFilenames.nicename)
  return nicename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCSUsrMsg_RoundBackupFilenames::release_nicename() {
  // @@protoc_insertion_point(field_release:CCSUsrMsg_RoundBackupFilenames.nicename)
  if (!has_nicename()) {
    return NULL;
  }
  clear_has_nicename();
  return nicename_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCSUsrMsg_RoundBackupFilenames::set_allocated_nicename(::std::string* nicename) {
  if (nicename != NULL) {
    set_has_nicename();
  } else {
    clear_has_nicename();
  }
  nicename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nicename);
  // @@protoc_insertion_point(field_set_allocated:CCSUsrMsg_RoundBackupFilenames.nicename)
}

// -------------------------------------------------------------------

// CCSUsrMsg_ResetHud

// optional bool reset = 1;
inline bool CCSUsrMsg_ResetHud::has_reset() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_ResetHud::set_has_reset() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_ResetHud::clear_has_reset() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_ResetHud::clear_reset() {
  reset_ = false;
  clear_has_reset();
}
inline bool CCSUsrMsg_ResetHud::reset() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ResetHud.reset)
  return reset_;
}
inline void CCSUsrMsg_ResetHud::set_reset(bool value) {
  set_has_reset();
  reset_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ResetHud.reset)
}

// -------------------------------------------------------------------

// CCSUsrMsg_GameTitle

// optional int32 dummy = 1;
inline bool CCSUsrMsg_GameTitle::has_dummy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_GameTitle::set_has_dummy() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_GameTitle::clear_has_dummy() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_GameTitle::clear_dummy() {
  dummy_ = 0;
  clear_has_dummy();
}
inline ::google::protobuf::int32 CCSUsrMsg_GameTitle::dummy() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_GameTitle.dummy)
  return dummy_;
}
inline void CCSUsrMsg_GameTitle::set_dummy(::google::protobuf::int32 value) {
  set_has_dummy();
  dummy_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_GameTitle.dummy)
}

// -------------------------------------------------------------------

// CCSUsrMsg_RequestState

// optional int32 dummy = 1;
inline bool CCSUsrMsg_RequestState::has_dummy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_RequestState::set_has_dummy() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_RequestState::clear_has_dummy() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_RequestState::clear_dummy() {
  dummy_ = 0;
  clear_has_dummy();
}
inline ::google::protobuf::int32 CCSUsrMsg_RequestState::dummy() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_RequestState.dummy)
  return dummy_;
}
inline void CCSUsrMsg_RequestState::set_dummy(::google::protobuf::int32 value) {
  set_has_dummy();
  dummy_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_RequestState.dummy)
}

// -------------------------------------------------------------------

// CCSUsrMsg_StopSpectatorMode

// optional int32 dummy = 1;
inline bool CCSUsrMsg_StopSpectatorMode::has_dummy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_StopSpectatorMode::set_has_dummy() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_StopSpectatorMode::clear_has_dummy() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_StopSpectatorMode::clear_dummy() {
  dummy_ = 0;
  clear_has_dummy();
}
inline ::google::protobuf::int32 CCSUsrMsg_StopSpectatorMode::dummy() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_StopSpectatorMode.dummy)
  return dummy_;
}
inline void CCSUsrMsg_StopSpectatorMode::set_dummy(::google::protobuf::int32 value) {
  set_has_dummy();
  dummy_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_StopSpectatorMode.dummy)
}

// -------------------------------------------------------------------

// CCSUsrMsg_DisconnectToLobby

// optional int32 dummy = 1;
inline bool CCSUsrMsg_DisconnectToLobby::has_dummy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_DisconnectToLobby::set_has_dummy() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_DisconnectToLobby::clear_has_dummy() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_DisconnectToLobby::clear_dummy() {
  dummy_ = 0;
  clear_has_dummy();
}
inline ::google::protobuf::int32 CCSUsrMsg_DisconnectToLobby::dummy() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_DisconnectToLobby.dummy)
  return dummy_;
}
inline void CCSUsrMsg_DisconnectToLobby::set_dummy(::google::protobuf::int32 value) {
  set_has_dummy();
  dummy_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_DisconnectToLobby.dummy)
}

// -------------------------------------------------------------------

// CCSUsrMsg_WarmupHasEnded

// optional int32 dummy = 1;
inline bool CCSUsrMsg_WarmupHasEnded::has_dummy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_WarmupHasEnded::set_has_dummy() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_WarmupHasEnded::clear_has_dummy() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_WarmupHasEnded::clear_dummy() {
  dummy_ = 0;
  clear_has_dummy();
}
inline ::google::protobuf::int32 CCSUsrMsg_WarmupHasEnded::dummy() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_WarmupHasEnded.dummy)
  return dummy_;
}
inline void CCSUsrMsg_WarmupHasEnded::set_dummy(::google::protobuf::int32 value) {
  set_has_dummy();
  dummy_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_WarmupHasEnded.dummy)
}

// -------------------------------------------------------------------

// CCSUsrMsg_ClientInfo

// optional int32 dummy = 1;
inline bool CCSUsrMsg_ClientInfo::has_dummy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_ClientInfo::set_has_dummy() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_ClientInfo::clear_has_dummy() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_ClientInfo::clear_dummy() {
  dummy_ = 0;
  clear_has_dummy();
}
inline ::google::protobuf::int32 CCSUsrMsg_ClientInfo::dummy() const {
  // @@protoc_insertion_point(field_get:CCSUsrMsg_ClientInfo.dummy)
  return dummy_;
}
inline void CCSUsrMsg_ClientInfo::set_dummy(::google::protobuf::int32 value) {
  set_has_dummy();
  dummy_ = value;
  // @@protoc_insertion_point(field_set:CCSUsrMsg_ClientInfo.dummy)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ECstrike15UserMessages> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ECstrike15UserMessages>() {
  return ::ECstrike15UserMessages_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_cstrike15_5fusermessages_5fpublic_2eproto
